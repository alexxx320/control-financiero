# Dockerfile ultra-optimizado para Railway
FROM node:18-alpine

WORKDIR /app

# Optimizaciones npm para velocidad
ENV NPM_CONFIG_UPDATE_NOTIFIER=false \
    NPM_CONFIG_FUND=false \
    NPM_CONFIG_AUDIT=false \
    NPM_CONFIG_LOGLEVEL=error \
    NPM_CONFIG_PROGRESS=false

# Copiar package files
COPY backend/package*.json ./

# Instalar solo dependencias de producción + build tools
RUN npm ci --only=production --silent && \
    npm install --no-save typescript @nestjs/cli && \
    npm cache clean --force

# Copiar código fuente
COPY backend/ .

# Build rápido
RUN npm run build && \
    rm -rf src/ && \
    rm -rf node_modules/@types && \
    rm -rf node_modules/typescript && \
    rm -rf node_modules/@nestjs/cli

# Usuario seguro
RUN adduser -D nestjs
USER nestjs

EXPOSE 3000

CMD ["node", "dist/main"]
