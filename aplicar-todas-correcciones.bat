@echo off
title AplicaciÃ³n Completa de Correcciones - Control Financiero
color 0E

echo ====================================
echo    APLICANDO TODAS LAS CORRECCIONES
echo ====================================
echo.

echo [PASO 1] Creando respaldos...
echo.

if exist "frontend\src\app\features\auth\login.component.ts" (
    copy "frontend\src\app\features\auth\login.component.ts" "frontend\src\app\features\auth\login.component.ts.BACKUP" >nul
    echo âœ“ Backup de login.component.ts creado
)

if exist "frontend\src\app\features\auth\register.component.ts" (
    copy "frontend\src\app\features\auth\register.component.ts" "frontend\src\app\features\auth\register.component.ts.BACKUP" >nul
    echo âœ“ Backup de register.component.ts creado
)

if exist "frontend\src\app\features\fondos\fondos.component.ts" (
    copy "frontend\src\app\features\fondos\fondos.component.ts" "frontend\src\app\features\fondos\fondos.component.ts.BACKUP" >nul
    echo âœ“ Backup de fondos.component.ts creado
)

if exist "frontend\src\app\core\services\auth.service.ts" (
    copy "frontend\src\app\core\services\auth.service.ts" "frontend\src\app\core\services\auth.service.ts.BACKUP" >nul
    echo âœ“ Backup de auth.service.ts creado
)

if exist "frontend\src\app\core\services\fondo.service.ts" (
    copy "frontend\src\app\core\services\fondo.service.ts" "frontend\src\app\core\services\fondo.service.ts.BACKUP" >nul
    echo âœ“ Backup de fondo.service.ts creado
)

echo.
echo [PASO 2] Aplicando archivos corregidos...
echo.

:: Aplicar auth.service corregido
if exist "frontend\src\app\core\services\auth.service.CORREGIDO.ts" (
    copy "frontend\src\app\core\services\auth.service.CORREGIDO.ts" "frontend\src\app\core\services\auth.service.ts" >nul
    echo âœ“ auth.service.ts corregido aplicado
) else (
    echo âœ— auth.service.CORREGIDO.ts no encontrado
)

:: Aplicar fondo.service corregido
if exist "frontend\src\app\core\services\fondo.service.CORREGIDO.ts" (
    copy "frontend\src\app\core\services\fondo.service.CORREGIDO.ts" "frontend\src\app\core\services\fondo.service.ts" >nul
    echo âœ“ fondo.service.ts corregido aplicado
) else (
    echo âœ— fondo.service.CORREGIDO.ts no encontrado
)

:: Aplicar login.component corregido
if exist "frontend\src\app\features\auth\login.component.CORREGIDO.ts" (
    copy "frontend\src\app\features\auth\login.component.CORREGIDO.ts" "frontend\src\app\features\auth\login.component.ts" >nul
    echo âœ“ login.component.ts corregido aplicado
) else (
    echo âœ— login.component.CORREGIDO.ts no encontrado
)

:: Aplicar register.component corregido
if exist "frontend\src\app\features\auth\register.component.CORREGIDO.ts" (
    copy "frontend\src\app\features\auth\register.component.CORREGIDO.ts" "frontend\src\app\features\auth\register.component.ts" >nul
    echo âœ“ register.component.ts corregido aplicado
) else (
    echo âœ— register.component.CORREGIDO.ts no encontrado
)

:: Aplicar fondos.component corregido
if exist "frontend\src\app\features\fondos\fondos.component.CORREGIDO.ts" (
    copy "frontend\src\app\features\fondos\fondos.component.CORREGIDO.ts" "frontend\src\app\features\fondos\fondos.component.ts" >nul
    echo âœ“ fondos.component.ts corregido aplicado
) else (
    echo âœ— fondos.component.CORREGIDO.ts no encontrado
)

echo.
echo [PASO 3] Verificando configuraciones del backend...
echo.

:: Verificar que el .env existe
if not exist "backend\.env" (
    if exist "backend\.env.example" (
        copy "backend\.env.example" "backend\.env" >nul
        echo âœ“ Archivo .env creado desde .env.example
    ) else (
        echo âœ— No se encontrÃ³ .env.example
    )
) else (
    echo âœ“ Archivo .env ya existe
)

:: Verificar estructura del backend
if exist "backend\src\app.module.ts" (
    echo âœ“ app.module.ts existe
) else (
    echo âœ— app.module.ts no encontrado
)

if exist "backend\src\modules\auth\auth.service.ts" (
    echo âœ“ auth.service.ts del backend existe
) else (
    echo âœ— auth.service.ts del backend no encontrado
)

echo.
echo [PASO 4] Compilando backend...
echo.
cd backend
echo Compilando TypeScript...
call npm run build
if %errorlevel%==0 (
    echo âœ“ Backend compilado exitosamente
) else (
    echo âœ— Error compilando backend - revisa los errores arriba
    cd ..
    pause
    exit /b 1
)
cd ..

echo.
echo [PASO 5] Verificando dependencias del frontend...
echo.
cd frontend
if not exist "node_modules\@angular\material" (
    echo Instalando Angular Material...
    call npm install @angular/material @angular/cdk @angular/animations
)

if not exist "node_modules" (
    echo Instalando dependencias del frontend...
    call npm install
)
cd ..

echo.
echo ====================================
echo      CORRECCIONES APLICADAS
echo ====================================
echo.
echo Los siguientes cambios se han aplicado:
echo.
echo ðŸ”§ SERVICIOS CORREGIDOS:
echo âœ“ AuthService: Eliminados fallbacks, respuesta 'usuario' vs 'user'
echo âœ“ FondoService: Eliminados datos simulados, errores reales
echo âœ“ Agregados logs detallados para debugging
echo.
echo ðŸŽ¨ COMPONENTES CORREGIDOS:
echo âœ“ LoginComponent: DiagnÃ³stico de conectividad integrado
echo âœ“ RegisterComponent: ValidaciÃ³n asÃ­ncrona de email mejorada
echo âœ“ FondosComponent: CRUD completo sin simulaciones
echo.
echo ðŸ”— BACKEND VERIFICADO:
echo âœ“ CompilaciÃ³n verificada
echo âœ“ ConfiguraciÃ³n de .env verificada
echo âœ“ Estructura de mÃ³dulos verificada
echo.
echo ðŸ“‹ PRINCIPALES CORRECCIONES:
echo - Error mat-form-field resuelto con imports correctos
echo - Respuesta 'usuario' vs 'user' corregida en auth
echo - Eliminadas todas las simulaciones de datos
echo - Agregado diagnÃ³stico de conectividad en tiempo real
echo - Manejo de errores especÃ­ficos por cÃ³digo de estado
echo - ValidaciÃ³n real de tokens JWT
echo.
echo SIGUIENTE PASO:
echo 1. AsegÃºrate de que MongoDB estÃ© corriendo
echo 2. Ejecuta 'verificar-endpoints-completo.bat' para probar
echo 3. Usa 'iniciar-sistema-corregido.bat' para iniciar todo
echo.

pause
