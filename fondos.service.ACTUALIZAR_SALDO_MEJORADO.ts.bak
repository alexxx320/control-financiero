  /**
   * Actualizar saldo del fondo cuando hay transacciones
   */
  async actualizarSaldo(fondoId: string, tipo: 'ingreso' | 'gasto', monto: number, usuarioId: string): Promise<Fondo> {
    console.log(`💰 Actualizando saldo - Fondo: ${fondoId}, Tipo: ${tipo}, Monto: ${monto}`);
    
    const fondo = await this.findOne(fondoId, usuarioId);
    console.log(`📊 Saldo actual del fondo "${fondo.nombre}": ${fondo.saldoActual}`);
    
    const nuevoSaldo = tipo === 'ingreso' 
      ? fondo.saldoActual + monto
      : fondo.saldoActual - monto;
    
    console.log(`🔄 Calculando nuevo saldo: ${fondo.saldoActual} ${tipo === 'ingreso' ? '+' : '-'} ${monto} = ${nuevoSaldo}`);
    
    // Permitir saldos negativos pero registrar la situación
    if (nuevoSaldo < 0) {
      console.warn(`⚠️ Saldo negativo en fondo "${fondo.nombre}": ${nuevoSaldo}`);
    }
    
    const fondoActualizado = await this.fondoModel
      .findOneAndUpdate(
        { _id: fondoId, usuarioId: new Types.ObjectId(usuarioId) },
        { saldoActual: nuevoSaldo },
        { new: true }
      )
      .exec();

    if (!fondoActualizado) {
      throw new NotFoundException(`No se pudo actualizar el saldo del fondo con ID "${fondoId}"`);
    }
    
    console.log(`✅ Saldo actualizado exitosamente: ${fondo.saldoActual} → ${fondoActualizado.saldoActual}`);
    
    return fondoActualizado;
  }