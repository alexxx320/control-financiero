{"version":3,"file":"src_app_features_transacciones_transacciones_component_ts.js","mappings":"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","sources":["./src/app/features/transacciones/transaccion-dialog.component.ts","./src/app/features/transacciones/transacciones.component.ts","./src/app/shared/utils/categoria.utils.ts","./node_modules/@angular/material/fesm2022/paginator.mjs","./node_modules/@angular/material/fesm2022/sort.mjs"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogModule, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { Transaccion, TipoTransaccion, CategoriaTransaccion, CreateTransferenciaDto } from '../../core/models/transaccion.model';\nimport { TransaccionService } from '../../core/services/transaccion.service';\nimport { Fondo } from '../../core/models/fondo.model';\nimport { CategoriaUtils } from '../../shared/utils/categoria.utils';\n\nexport interface TransaccionDialogData {\n  transaccion?: Transaccion;\n  fondos: Fondo[];\n  categorias: CategoriaTransaccion[];\n  fondoPreseleccionado?: string; // 🆕 NUEVO: Para preseleccionar un fondo\n}\n\n@Component({\n  selector: 'app-transaccion-dialog',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatChipsModule,\n    MatIconModule\n  ],\n  template: `\n    <h2 mat-dialog-title>\n      <mat-icon>{{ data.transaccion ? 'edit' : 'add' }}</mat-icon>\n      {{ data.transaccion ? 'Editar' : 'Nueva' }} Transacción\n    </h2>\n\n    <mat-dialog-content>\n      <form [formGroup]=\"transaccionForm\" class=\"transaccion-form\">\n        <div class=\"form-row\">\n          <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>Fondo</mat-label>\n            <mat-select formControlName=\"fondoId\">\n              <mat-option *ngFor=\"let fondo of data.fondos\" [value]=\"fondo._id\">\n                {{ fondo.nombre }} ({{ fondo.tipo | titlecase }})\n                <!-- 🆕 MOSTRAR SALDO ACTUAL DEL FONDO -->\n                <span class=\"fondo-saldo\"> - Saldo: {{ fondo.saldoActual | currency:'COP':'symbol':'1.0-0' }}</span>\n              </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"transaccionForm.get('fondoId')?.hasError('required')\">\n              Selecciona un fondo\n            </mat-error>\n            <!-- 🆕 MOSTRAR AVISO SI ES DESDE UN FONDO ESPECÍFICO -->\n            <mat-hint *ngIf=\"data.fondoPreseleccionado\">\n              Creando transacción para: {{ obtenerNombreFondoPreseleccionado() }}\n            </mat-hint>\n          </mat-form-field>\n        </div>\n\n        <!-- Campo adicional para fondo destino (solo transferencias) -->\n        <div class=\"form-row\" *ngIf=\"esTransferencia()\">\n          <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>Fondo Destino</mat-label>\n            <mat-select formControlName=\"fondoDestinoId\">\n              <mat-option *ngFor=\"let fondo of fondosDisponiblesDestino\" [value]=\"fondo._id\">\n                {{ fondo.nombre }} ({{ fondo.tipo | titlecase }})\n                <span class=\"fondo-saldo\"> - Saldo: {{ fondo.saldoActual | currency:'COP':'symbol':'1.0-0' }}</span>\n              </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"transaccionForm.get('fondoDestinoId')?.hasError('required')\">\n              Selecciona el fondo destino\n            </mat-error>\n            <mat-hint>El dinero se transferirá desde \"{{ obtenerNombreFondoOrigen() }}\" hacia este fondo</mat-hint>\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-row\">\n          <mat-form-field appearance=\"outline\" class=\"half-width\">\n            <mat-label>Tipo</mat-label>\n            <mat-select formControlName=\"tipo\" (selectionChange)=\"onTipoChange()\">\n              <mat-option value=\"ingreso\">\n                <mat-icon class=\"option-icon ingreso\">trending_up</mat-icon>\n                Ingreso\n              </mat-option>\n              <mat-option value=\"gasto\">\n                <mat-icon class=\"option-icon gasto\">trending_down</mat-icon>\n                Gasto\n              </mat-option>\n              <mat-option value=\"transferencia\">\n                <mat-icon class=\"option-icon transferencia\">swap_horiz</mat-icon>\n                Transferencia\n              </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"transaccionForm.get('tipo')?.hasError('required')\">\n              Selecciona el tipo\n            </mat-error>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\" class=\"half-width\">\n            <mat-label>Categoría</mat-label>\n            <mat-select formControlName=\"categoria\">\n              <mat-option *ngFor=\"let categoria of categoriasFiltradasPorTipo\" [value]=\"categoria\">\n                {{ formatearCategoria(categoria) }}\n              </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"transaccionForm.get('categoria')?.hasError('required')\">\n              Selecciona una categoría\n            </mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-row\">\n          <mat-form-field appearance=\"outline\" class=\"full-width\">\n            <mat-label>Descripción</mat-label>\n            <input matInput formControlName=\"descripcion\" placeholder=\"Ej: Compra en supermercado\">\n            <mat-error *ngIf=\"transaccionForm.get('descripcion')?.hasError('required')\">\n              La descripción es requerida\n            </mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-row\">\n          <mat-form-field appearance=\"outline\" class=\"half-width\">\n            <mat-label>Monto</mat-label>\n            <input matInput type=\"number\" formControlName=\"monto\" placeholder=\"0\" min=\"0.01\" step=\"0.01\">\n            <span matTextPrefix>$</span>\n            <mat-error *ngIf=\"transaccionForm.get('monto')?.hasError('required')\">\n              El monto es requerido\n            </mat-error>\n            <mat-error *ngIf=\"transaccionForm.get('monto')?.hasError('min')\">\n              El monto debe ser mayor a 0\n            </mat-error>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\" class=\"half-width\">\n            <mat-label>Fecha</mat-label>\n            <input matInput [matDatepicker]=\"fechaPicker\" formControlName=\"fecha\">\n            <mat-datepicker-toggle matIconSuffix [for]=\"fechaPicker\"></mat-datepicker-toggle>\n            <mat-datepicker #fechaPicker></mat-datepicker>\n          </mat-form-field>\n        </div>\n      </form>\n    </mat-dialog-content>\n\n    <mat-dialog-actions align=\"end\">\n      <button mat-button (click)=\"onCancel()\">Cancelar</button>\n      <button mat-raised-button color=\"primary\" \n              [disabled]=\"transaccionForm.invalid || guardando\"\n              (click)=\"onSave()\">\n        {{ guardando ? 'Guardando...' : (data.transaccion ? 'Actualizar' : 'Crear') }}\n      </button>\n    </mat-dialog-actions>\n  `,\n  styles: [`\n    .transaccion-form {\n      min-width: 500px;\n      max-width: 600px;\n    }\n\n    .form-row {\n      display: flex;\n      gap: 16px;\n      margin-bottom: 16px;\n    }\n\n    .full-width {\n      width: 100%;\n    }\n\n    .half-width {\n      flex: 1;\n    }\n\n    .option-icon {\n      margin-right: 8px;\n      vertical-align: middle;\n    }\n\n    .option-icon.ingreso {\n      color: #4caf50;\n    }\n\n    .option-icon.gasto {\n      color: #f44336;\n    }\n\n    .option-icon.transferencia {\n      color: #2196f3;\n    }\n\n    .fondo-saldo {\n      font-size: 0.8em;\n      color: rgba(0,0,0,0.6);\n      font-style: italic;\n    }\n\n    mat-dialog-content {\n      max-height: 70vh;\n      overflow-y: auto;\n    }\n\n    @media (max-width: 768px) {\n      .transaccion-form {\n        min-width: 280px;\n        max-width: 100%;\n      }\n\n      .form-row {\n        flex-direction: column;\n      }\n\n      .half-width {\n        width: 100%;\n      }\n    }\n  `]\n})\nexport class TransaccionDialogComponent implements OnInit {\n  transaccionForm: FormGroup;\n  guardando = false;\n  categoriasFiltradasPorTipo: CategoriaTransaccion[] = [];\n  fondosDisponiblesDestino: Fondo[] = []; // Para transferencias\n\n  constructor(\n    private fb: FormBuilder,\n    private dialogRef: MatDialogRef<TransaccionDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: TransaccionDialogData,\n    private transaccionService: TransaccionService\n  ) {\n    this.transaccionForm = this.fb.group({\n      fondoId: ['', Validators.required],\n      fondoDestinoId: [''], // Para transferencias\n      tipo: ['', Validators.required],\n      categoria: ['', Validators.required],\n      descripcion: ['', [Validators.required, Validators.minLength(3)]],\n      monto: [0, [Validators.required, Validators.min(0.01)]],\n      fecha: [new Date(), Validators.required]\n    });\n  }\n\n  ngOnInit(): void {\n    // Si estamos editando, cargar los datos\n    if (this.data.transaccion) {\n      this.transaccionForm.patchValue({\n        fondoId: this.data.transaccion.fondoId,\n        tipo: this.data.transaccion.tipo,\n        categoria: this.data.transaccion.categoria,\n        descripcion: this.data.transaccion.descripcion,\n        monto: this.data.transaccion.monto,\n        fecha: this.data.transaccion.fecha ? new Date(this.data.transaccion.fecha) : new Date()\n      });\n\n      // Filtrar categorías según el tipo\n      this.onTipoChange();\n    } else if (this.data.fondoPreseleccionado) {\n      // 🆕 NUEVO: Si hay un fondo preseleccionado, configurarlo\n      this.transaccionForm.patchValue({\n        fondoId: this.data.fondoPreseleccionado\n      });\n      console.log('💰 Fondo preseleccionado:', this.data.fondoPreseleccionado);\n    }\n    \n    // Suscribirse a cambios en el fondo origen para actualizar fondos destino\n    this.transaccionForm.get('fondoId')?.valueChanges.subscribe(() => {\n      if (this.esTransferencia()) {\n        this.actualizarFondosDestino();\n      }\n    });\n  }\n\n  onTipoChange(): void {\n    const tipo = this.transaccionForm.get('tipo')?.value as (TipoTransaccion | 'transferencia');\n    \n    if (tipo) {\n      this.categoriasFiltradasPorTipo = this.transaccionService.obtenerCategoriasPorTipo(tipo);\n      \n      // Si es transferencia, configurar validaciones especiales\n      if (tipo === 'transferencia') {\n        this.transaccionForm.get('fondoDestinoId')?.setValidators([Validators.required]);\n        this.transaccionForm.get('categoria')?.setValue('transferencia');\n        this.actualizarFondosDestino();\n      } else {\n        this.transaccionForm.get('fondoDestinoId')?.clearValidators();\n        this.transaccionForm.get('fondoDestinoId')?.setValue('');\n      }\n      \n      this.transaccionForm.get('fondoDestinoId')?.updateValueAndValidity();\n    } else {\n      this.categoriasFiltradasPorTipo = [];\n    }\n\n    // Limpiar categoría si no es válida para el nuevo tipo\n    const categoriaActual = this.transaccionForm.get('categoria')?.value;\n    if (categoriaActual && !this.categoriasFiltradasPorTipo.includes(categoriaActual)) {\n      this.transaccionForm.patchValue({ categoria: '' });\n    }\n  }\n\n  formatearCategoria(categoria: string): string {\n    return CategoriaUtils.formatearCategoria(categoria);\n  }\n\n  // 🆕 NUEVO: Obtener nombre del fondo preseleccionado\n  obtenerNombreFondoPreseleccionado(): string {\n    if (!this.data.fondoPreseleccionado) return '';\n    const fondo = this.data.fondos.find(f => f._id === this.data.fondoPreseleccionado);\n    return fondo ? fondo.nombre : 'Fondo no encontrado';\n  }\n\n  // Métodos para transferencias\n  esTransferencia(): boolean {\n    return this.transaccionForm.get('tipo')?.value === 'transferencia';\n  }\n\n  obtenerNombreFondoOrigen(): string {\n    const fondoOrigenId = this.transaccionForm.get('fondoId')?.value;\n    if (!fondoOrigenId) return 'Selecciona fondo origen';\n    \n    const fondo = this.data.fondos.find(f => f._id === fondoOrigenId);\n    return fondo ? fondo.nombre : 'Fondo no encontrado';\n  }\n\n  actualizarFondosDestino(): void {\n    const fondoOrigenId = this.transaccionForm.get('fondoId')?.value;\n    \n    // Filtrar fondos que no sean el fondo origen\n    this.fondosDisponiblesDestino = this.data.fondos.filter(fondo => \n      fondo._id !== fondoOrigenId\n    );\n    \n    // Si el fondo destino actual ya no está disponible, limpiarlo\n    const fondoDestinoActual = this.transaccionForm.get('fondoDestinoId')?.value;\n    if (fondoDestinoActual && !this.fondosDisponiblesDestino.find(f => f._id === fondoDestinoActual)) {\n      this.transaccionForm.get('fondoDestinoId')?.setValue('');\n    }\n  }\n\n  onSave(): void {\n    if (this.transaccionForm.invalid) return;\n\n    this.guardando = true;\n    const formData = this.transaccionForm.value;\n    \n    // Si es transferencia, enviar datos de transferencia\n    if (formData.tipo === 'transferencia') {\n      const transferenciaData: CreateTransferenciaDto = {\n        fondoOrigenId: formData.fondoId,\n        fondoDestinoId: formData.fondoDestinoId,\n        monto: Number(formData.monto),\n        descripcion: formData.descripcion,\n        notas: formData.notas || '',\n        fecha: formData.fecha\n      };\n      \n      this.dialogRef.close({ action: 'transfer', data: transferenciaData });\n    } else {\n      // Procesar datos de transacción normal\n      const transaccionData = {\n        fondoId: formData.fondoId,\n        tipo: formData.tipo,\n        categoria: formData.categoria,\n        descripcion: formData.descripcion,\n        monto: Number(formData.monto),\n        fecha: formData.fecha\n      };\n\n      this.dialogRef.close({ action: 'save', data: transaccionData });\n    }\n  }\n\n  onCancel(): void {\n    this.dialogRef.close({ action: 'cancel' });\n  }\n}\n","import { Component, OnInit, OnDestroy, ViewChild, AfterViewInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatTableModule, MatTableDataSource } from '@angular/material/table';\nimport { MatPaginatorModule, MatPaginator } from '@angular/material/paginator';\nimport { MatSortModule, MatSort } from '@angular/material/sort';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDialogModule, MatDialog } from '@angular/material/dialog';\nimport { MatSnackBarModule, MatSnackBar } from '@angular/material/snack-bar';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\nimport { TransaccionService } from '../../core/services/transaccion.service';\nimport { FiltroTransacciones } from '../../core/models/transaccion.model';\nimport { FondoService } from '../../core/services/fondo.service';\nimport { NotificationService } from '../../core/services/notification.service';\nimport { Transaccion, TipoTransaccion, CategoriaTransaccion, CreateTransferenciaDto } from '../../core/models/transaccion.model';\nimport { Fondo } from '../../core/models/fondo.model';\nimport { CategoriaUtils } from '../../shared/utils/categoria.utils';\nimport { TransaccionDialogComponent } from './transaccion-dialog.component';\n\n@Component({\n  selector: 'app-transacciones',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatChipsModule,\n    MatProgressSpinnerModule\n  ],\n  template: `\n    <div class=\"transacciones-container\">\n      <!-- Filtros y acciones -->\n      <mat-card class=\"filtros-card mb-2\">\n        <mat-card-header>\n          <mat-card-title>Transacciones</mat-card-title>\n          <div class=\"spacer\"></div>\n          <button mat-raised-button color=\"primary\" (click)=\"abrirDialogoTransaccion()\">\n            <mat-icon>add</mat-icon>\n            Nueva Transacción\n          </button>\n        </mat-card-header>\n        <mat-card-content>\n          <form [formGroup]=\"filtrosForm\" class=\"filtros-form\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label>Fondo</mat-label>\n              <mat-select formControlName=\"fondoId\">\n                <mat-option value=\"\">Todos los fondos</mat-option>\n                <mat-option *ngFor=\"let fondo of fondos\" [value]=\"fondo._id\">\n                  {{ fondo.nombre }}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\">\n              <mat-label>Tipo</mat-label>\n              <mat-select formControlName=\"tipo\">\n                <mat-option value=\"\">Todos</mat-option>\n                <mat-option value=\"ingreso\">\n                  <mat-icon class=\"option-icon ingreso\">trending_up</mat-icon>\n                  Ingreso\n                </mat-option>\n                <mat-option value=\"gasto\">\n                  <mat-icon class=\"option-icon gasto\">trending_down</mat-icon>\n                  Gasto\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\">\n              <mat-label>Categoría</mat-label>\n              <mat-select formControlName=\"categoria\">\n                <mat-option value=\"\">Todas</mat-option>\n                <mat-option *ngFor=\"let categoria of obtenerCategoriasFiltradas()\" [value]=\"categoria\">\n                  {{ formatearCategoria(categoria) }}\n                </mat-option>\n                <!-- Opción especial para transferencias -->\n                <mat-option value=\"transferencia\">\n                  <mat-icon class=\"option-icon transferencia\">swap_horiz</mat-icon>\n                  Transferencias\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n\n            <div class=\"filter-actions\">\n              <button mat-raised-button color=\"accent\" (click)=\"aplicarFiltros()\">\n                <mat-icon>filter_list</mat-icon>\n                Filtrar\n              </button>\n              <button mat-button (click)=\"limpiarFiltros()\">\n                <mat-icon>clear</mat-icon>\n                Limpiar\n              </button>\n              \n              <!-- Botón de debug -->\n              <button mat-stroked-button color=\"warn\" (click)=\"debugFiltros()\" *ngIf=\"false\">\n                <mat-icon>bug_report</mat-icon>\n                Debug\n              </button>\n            </div>\n          </form>\n        </mat-card-content>\n      </mat-card>\n\n      <!-- Tabla de transacciones -->\n      <mat-card class=\"tabla-card\">\n        <mat-card-content>\n          <!-- Loading spinner -->\n          <div *ngIf=\"loading\" class=\"loading-container\">\n            <mat-spinner [diameter]=\"40\"></mat-spinner>\n            <p>Cargando transacciones...</p>\n          </div>\n\n          <!-- Tabla -->\n          <div *ngIf=\"!loading\" class=\"table-container\">\n            <table mat-table [dataSource]=\"dataSource\" matSort class=\"full-width\">\n              \n              <ng-container matColumnDef=\"fecha\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Fecha </th>\n                <td mat-cell *matCellDef=\"let transaccion\"> \n                  {{ transaccion.fecha | date:'dd/MM/yyyy' }} \n                </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"descripcion\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Descripción </th>\n                <td mat-cell *matCellDef=\"let transaccion\"> \n                  <div class=\"descripcion-cell\">\n                    <strong>{{ transaccion.descripcion }}</strong>\n                    <small *ngIf=\"transaccion.notas\" class=\"notas\">{{ transaccion.notas }}</small>\n                    <div *ngIf=\"transaccion.etiquetas && transaccion.etiquetas.length > 0\" class=\"etiquetas\">\n                      <span *ngFor=\"let etiqueta of transaccion.etiquetas\" class=\"etiqueta-chip\">\n                        {{ etiqueta }}\n                      </span>\n                    </div>\n                  </div>\n                </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"fondo\">\n                <th mat-header-cell *matHeaderCellDef> Fondo </th>\n                <td mat-cell *matCellDef=\"let transaccion\"> \n                  {{ obtenerNombreFondo(transaccion) }} \n                </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"categoria\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Categoría </th>\n                <td mat-cell *matCellDef=\"let transaccion\"> \n                  <span class=\"categoria-chip\" \n                        [ngClass]=\"transaccion.tipo === 'ingreso' ? 'ingreso-chip' : 'gasto-chip'\">\n                    {{ formatearCategoria(transaccion.categoria) }}\n                  </span>\n                </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"tipo\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Tipo </th>\n                <td mat-cell *matCellDef=\"let transaccion\"> \n                  <span class=\"tipo-chip\" \n                        [ngClass]=\"{\n                          'ingreso-chip': transaccion.tipo === 'ingreso' && transaccion.categoria !== 'transferencia',\n                          'gasto-chip': transaccion.tipo === 'gasto' && transaccion.categoria !== 'transferencia',\n                          'transferencia-chip': transaccion.categoria === 'transferencia'\n                        }\">\n                    <mat-icon>{{ \n                      transaccion.categoria === 'transferencia' ? 'swap_horiz' :\n                      transaccion.tipo === 'ingreso' ? 'trending_up' : \n                      'trending_down'\n                    }}</mat-icon>\n                    {{ transaccion.categoria === 'transferencia' ? 'Transferencia' : (transaccion.tipo | titlecase) }}\n                  </span>\n                </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"monto\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Monto </th>\n                <td mat-cell *matCellDef=\"let transaccion\" \n                    [ngClass]=\"{\n                      'ingreso-text': transaccion.tipo === 'ingreso' && transaccion.categoria !== 'transferencia',\n                      'gasto-text': transaccion.tipo === 'gasto' && transaccion.categoria !== 'transferencia',\n                      'transferencia-text': transaccion.categoria === 'transferencia'\n                    }\"> \n                  <strong>{{ \n                    transaccion.categoria === 'transferencia' ? \n                      (transaccion.monto | currency:'COP':'symbol':'1.0-0') :\n                    (transaccion.tipo === 'ingreso' ? '+' : '-') + (transaccion.monto | currency:'COP':'symbol':'1.0-0') \n                  }}</strong>\n                </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"acciones\">\n                <th mat-header-cell *matHeaderCellDef> Acciones </th>\n                <td mat-cell *matCellDef=\"let transaccion\">\n                  <button mat-icon-button color=\"primary\" \n                          (click)=\"editarTransaccion(transaccion)\"\n                          matTooltip=\"Editar transacción\">\n                    <mat-icon>edit</mat-icon>\n                  </button>\n                  <button mat-icon-button color=\"warn\" \n                          (click)=\"eliminarTransaccion(transaccion)\"\n                          matTooltip=\"Eliminar transacción\">\n                    <mat-icon>delete</mat-icon>\n                  </button>\n                </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" \n                  [ngClass]=\"{'ingreso-row': row.tipo === 'ingreso', 'gasto-row': row.tipo === 'gasto'}\"></tr>\n            </table>\n\n            <!-- Mensaje cuando no hay datos -->\n            <div *ngIf=\"dataSource.data.length === 0\" class=\"no-data\">\n              <mat-icon>info</mat-icon>\n              <h3>No hay transacciones</h3>\n              <p>{{ filtrosAplicados ? 'No se encontraron transacciones con los filtros aplicados' : 'Crea tu primera transacción para comenzar' }}</p>\n              <button mat-raised-button color=\"primary\" (click)=\"abrirDialogoTransaccion()\">\n                <mat-icon>add</mat-icon>\n                Nueva Transacción\n              </button>\n            </div>\n          </div>\n\n          <!-- Paginador -->\n          <mat-paginator \n            *ngIf=\"!loading && dataSource.data.length > 0\"\n            [pageSizeOptions]=\"[10, 25, 50, 100]\" \n            [pageSize]=\"pageSize\"\n            [pageIndex]=\"currentPage - 1\"\n            [length]=\"totalTransacciones\"\n            [showFirstLastButtons]=\"true\"\n            (page)=\"onPageChange($event)\"\n            aria-label=\"Seleccionar página de transacciones\">\n          </mat-paginator>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  `,\n  styles: [`\n    .transacciones-container {\n      max-width: 1200px;\n      margin: 0 auto;\n      padding: 20px;\n    }\n\n    .filtros-card mat-card-header {\n      display: flex;\n      align-items: center;\n    }\n\n    .filtros-form {\n      display: flex;\n      gap: 16px;\n      align-items: center;\n      flex-wrap: wrap;\n      margin-top: 16px;\n    }\n\n    .filtros-form mat-form-field {\n      min-width: 150px;\n    }\n\n    .table-container {\n      overflow-x: auto;\n    }\n\n    .categoria-chip,\n    .tipo-chip {\n      padding: 4px 8px;\n      border-radius: 12px;\n      font-size: 0.75em;\n      font-weight: 500;\n    }\n\n    .ingreso-chip {\n      background-color: #4caf50;\n      color: white;\n    }\n\n    .gasto-chip {\n      background-color: #f44336;\n      color: white;\n    }\n\n    .transferencia-chip {\n      background-color: #2196f3;\n      color: white;\n    }\n\n    .ingreso-text {\n      color: #4caf50;\n      font-weight: 500;\n    }\n\n    .gasto-text {\n      color: #f44336;\n      font-weight: 500;\n    }\n\n    .transferencia-text {\n      color: #2196f3;\n      font-weight: 500;\n    }\n\n    @media (max-width: 768px) {\n      .transacciones-container {\n        padding: 16px;\n      }\n\n      .filtros-form {\n        flex-direction: column;\n        align-items: stretch;\n      }\n\n      .filtros-form mat-form-field {\n        min-width: auto;\n      }\n    }\n  `]\n})\nexport class TransaccionesComponent implements OnInit, OnDestroy, AfterViewInit {\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  private destroy$ = new Subject<void>();\n  \n  displayedColumns: string[] = ['fecha', 'descripcion', 'fondo', 'categoria', 'tipo', 'monto', 'acciones'];\n  dataSource = new MatTableDataSource<Transaccion>();\n  filtrosForm: FormGroup;\n  \n  fondos: Fondo[] = [];\n  categorias: CategoriaTransaccion[] = [];\n  transacciones: Transaccion[] = [];\n  totalTransacciones = 0;\n  currentPage = 1;\n  pageSize = 10;\n  loading = false;\n  filtrosAplicados = false;\n\n  // Estadísticas\n  totalIngresos = 0;\n  totalGastos = 0;\n  balance = 0;\n  totalTransferencias = 0; // 🆕 NUEVO: Contador de transferencias\n\n  constructor(\n    private fb: FormBuilder,\n    private transaccionService: TransaccionService,\n    private fondoService: FondoService,\n    private dialog: MatDialog,\n    private notificationService: NotificationService\n  ) {\n    this.filtrosForm = this.fb.group({\n      busqueda: [''],\n      fondoId: [''],\n      tipo: [''],\n      categoria: ['']\n    });\n  }\n\n  crearTransferencia(data: CreateTransferenciaDto): void {\n    console.log('🔄 Iniciando creación de transferencia en componente:', data);\n    \n    // Verificar que los fondos existen\n    const fondoOrigen = this.fondos.find(f => f._id === data.fondoOrigenId);\n    const fondoDestino = this.fondos.find(f => f._id === data.fondoDestinoId);\n    \n    if (!fondoOrigen || !fondoDestino) {\n      this.notificationService.error('Uno de los fondos seleccionados no existe');\n      return;\n    }\n    \n    // Verificar saldo suficiente\n    if (fondoOrigen.saldoActual < data.monto) {\n      this.notificationService.warning(\n        `Saldo insuficiente en \"${fondoOrigen.nombre}\". Saldo disponible: ${fondoOrigen.saldoActual.toLocaleString()}, monto a transferir: ${data.monto.toLocaleString()}`\n      );\n      return;\n    }\n    \n    this.transaccionService.crearTransferencia(data)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (response) => {\n          console.log('✅ Transferencia creada exitosamente en componente:', response);\n          this.notificationService.success(\n            `Transferencia de ${data.monto.toLocaleString()} desde \"${fondoOrigen.nombre}\" hacia \"${fondoDestino.nombre}\" realizada correctamente`\n          );\n          this.cargarTransacciones();\n          // También recargar fondos para actualizar saldos\n          this.cargarDatosIniciales();\n        },\n        error: (error) => {\n          console.error('❌ Error al crear transferencia en componente:', error);\n          this.notificationService.error(error.message || 'Error al crear la transferencia');\n        }\n      });\n  }\n\n  ngOnInit(): void {\n    console.log('🚀 Iniciando componente de transacciones...');\n    this.cargarDatosIniciales();\n    this.configurarFiltrosBusqueda();\n    // Cargar transacciones DESPUÉS de cargar fondos\n    setTimeout(() => this.cargarTransacciones(), 1000);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  configurarFiltrosBusqueda(): void {\n    // Auto-filtrado en tiempo real para búsqueda\n    this.filtrosForm.get('busqueda')?.valueChanges\n      .pipe(\n        debounceTime(300),\n        distinctUntilChanged(),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(() => {\n        this.aplicarFiltros();\n      });\n      \n    // Cuando cambie el tipo, limpiar la categoría y actualizar opciones\n    this.filtrosForm.get('tipo')?.valueChanges\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.filtrosForm.get('categoria')?.setValue('');\n      });\n      \n    // Cuando cambie el fondo, aplicar filtro automáticamente\n    this.filtrosForm.get('fondoId')?.valueChanges\n      .pipe(\n        debounceTime(100),\n        takeUntil(this.destroy$)\n      )\n      .subscribe((fondoId) => {\n        console.log('🏦 Fondo seleccionado cambiado a:', fondoId);\n        this.aplicarFiltros();\n      });\n      \n    // Cuando cambie la categoría, aplicar filtro automáticamente\n    this.filtrosForm.get('categoria')?.valueChanges\n      .pipe(\n        debounceTime(100),\n        takeUntil(this.destroy$)\n      )\n      .subscribe((categoria) => {\n        console.log('🏷️ Categoría seleccionada cambiada a:', categoria);\n        this.aplicarFiltros();\n      });\n      \n    // Cuando cambie el tipo, aplicar filtro automáticamente\n    this.filtrosForm.get('tipo')?.valueChanges\n      .pipe(\n        debounceTime(100),\n        takeUntil(this.destroy$)\n      )\n      .subscribe((tipo) => {\n        console.log('📋 Tipo seleccionado cambiado a:', tipo);\n        // Limpiar categoría si ya había una seleccionada\n        this.filtrosForm.get('categoria')?.setValue('', { emitEvent: false });\n        this.aplicarFiltros();\n      });\n  }\n\n  cargarDatosIniciales(): void {\n    console.log('🏦 Cargando fondos para transacciones...');\n    \n    // Primero intentar cargar fondos directamente\n    this.fondoService.obtenerFondos()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (fondos) => {\n          console.log('✅ Fondos cargados directamente:', fondos);\n          this.fondos = fondos;\n          \n          // Cargar transacciones una vez que tengamos los fondos\n          if (fondos.length > 0) {\n            console.log('📄 Cargando transacciones ahora que tenemos fondos...');\n            this.cargarTransacciones();\n          }\n        },\n        error: (error) => {\n          console.error('❌ Error al cargar fondos directamente:', error);\n          this.notificationService.error('Error al cargar fondos');\n        }\n      });\n      \n    // También suscribirse a cambios en tiempo real\n    this.fondoService.fondos$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (fondos) => {\n          if (fondos.length > 0) {\n            console.log('✅ Fondos actualizados desde observable:', fondos);\n            this.fondos = fondos;\n          }\n        },\n        error: (error) => {\n          console.error('❌ Error en observable de fondos:', error);\n        }\n      });\n\n    // Cargar categorías\n    this.categorias = this.transaccionService.obtenerCategorias();\n    console.log('🏷️ Categorías disponibles:', this.categorias);\n  }\n\n  cargarTransacciones(): void {\n    console.log('📄 Cargando transacciones... Fondos disponibles:', this.fondos.length);\n    \n    if (this.fondos.length === 0) {\n      console.log('⚠️ No hay fondos cargados aún, reintentando en 500ms...');\n      setTimeout(() => this.cargarTransacciones(), 500);\n      return;\n    }\n    \n    this.loading = true;\n    const filtros: FiltroTransacciones = this.construirFiltros();\n    \n    this.transaccionService.obtenerTransacciones(filtros)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (response) => {\n          console.log('✅ Respuesta de transacciones:', response);\n          this.transacciones = response.transacciones;\n          this.totalTransacciones = response.total;\n          this.dataSource.data = this.transacciones;\n          this.calcularEstadisticas();\n          this.loading = false;\n          \n          // Debug: mostrar información de fondos por transacción\n          this.transacciones.forEach(t => {\n            console.log(`Transacción \"${t.descripcion}\" tiene fondoId: ${t.fondoId}`);\n            const fondo = this.fondos.find(f => f._id === t.fondoId);\n            console.log(`Fondo encontrado:`, fondo ? fondo.nombre : 'NO ENCONTRADO');\n          });\n        },\n        error: (error) => {\n          console.error('❌ Error al cargar transacciones:', error);\n          this.notificationService.error('Error al cargar transacciones');\n          this.loading = false;\n        }\n      });\n  }\n\n  construirFiltros(): FiltroTransacciones {\n    const formValues = this.filtrosForm.value;\n    const filtros: FiltroTransacciones = {\n      page: this.currentPage,\n      limit: this.pageSize\n    };\n    \n    // Solo agregar filtros que tengan valor\n    if (formValues.busqueda) filtros.busqueda = formValues.busqueda;\n    if (formValues.fondoId) {\n      filtros.fondoId = formValues.fondoId;\n      console.log('🔍 Filtro por fondo aplicado:', formValues.fondoId);\n    }\n    if (formValues.tipo) filtros.tipo = formValues.tipo;\n    if (formValues.categoria) filtros.categoria = formValues.categoria;\n    \n    console.log('📋 Filtros construidos:', filtros);\n    \n    this.filtrosAplicados = Object.keys(filtros).length > 2; // más que page y limit\n    return filtros;\n  }\n\n  calcularEstadisticas(): void {\n    // 🔄 CAMBIO: Excluir transferencias de los totales\n    this.totalIngresos = this.transacciones\n      .filter(t => t.tipo === 'ingreso' && t.categoria !== 'transferencia')\n      .reduce((sum, t) => sum + t.monto, 0);\n    \n    this.totalGastos = this.transacciones\n      .filter(t => t.tipo === 'gasto' && t.categoria !== 'transferencia')\n      .reduce((sum, t) => sum + t.monto, 0);\n    \n    this.balance = this.totalIngresos - this.totalGastos;\n    \n    // 🆕 NUEVO: Contar transferencias por separado\n    this.totalTransferencias = this.transacciones\n      .filter(t => t.categoria === 'transferencia')\n      .length;\n    \n    console.log('📊 Estadísticas calculadas (sin transferencias):', {\n      totalIngresos: this.totalIngresos,\n      totalGastos: this.totalGastos,\n      balance: this.balance,\n      transferencias: this.totalTransferencias\n    });\n  }\n\n  aplicarFiltros(): void {\n    this.currentPage = 1;\n    this.cargarTransacciones();\n  }\n\n  limpiarFiltros(): void {\n    this.filtrosForm.reset();\n    this.currentPage = 1;\n    this.cargarTransacciones();\n  }\n\n  onPageChange(event: any): void {\n    console.log('📄 Cambio de página:', event);\n    this.currentPage = event.pageIndex + 1; // pageIndex es 0-based\n    this.pageSize = event.pageSize;\n    this.cargarTransacciones();\n  }\n\n  abrirDialogoTransaccion(transaccion?: Transaccion): void {\n    // Verificar que existan fondos antes de crear transacciones\n    if (this.fondos.length === 0) {\n      this.notificationService.warning('Debe crear al menos un fondo antes de realizar transacciones.');\n      return;\n    }\n    \n    const dialogRef = this.dialog.open(TransaccionDialogComponent, {\n      width: '600px',\n      maxWidth: '90vw',\n      data: {\n        transaccion,\n        fondos: this.fondos,\n        categorias: this.categorias\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result && result.action === 'save') {\n        if (transaccion) {\n          this.actualizarTransaccion(transaccion._id!, result.data);\n        } else {\n          this.crearTransaccion(result.data);\n        }\n      } else if (result && result.action === 'transfer') {\n        this.crearTransferencia(result.data);\n      }\n    });\n  }\n\n  crearTransaccion(data: any): void {\n    // Verificar saldo insuficiente antes de enviar al backend\n    if (data.tipo === 'gasto') {\n      const fondo = this.fondos.find(f => f._id === data.fondoId);\n      if (fondo && fondo.saldoActual < data.monto) {\n        this.notificationService.warning(`Advertencia: El gasto de ${data.monto.toLocaleString()} excede el saldo disponible de ${fondo.saldoActual.toLocaleString()}. El fondo quedará en saldo negativo.`);\n      }\n    }\n    \n    this.transaccionService.crearTransaccion(data)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: () => {\n          this.notificationService.success('Transacción creada correctamente');\n          this.cargarTransacciones();\n        },\n        error: (error) => {\n          console.error('Error al crear transacción:', error);\n          this.notificationService.error('Error al crear la transacción');\n        }\n      });\n  }\n\n  actualizarTransaccion(id: string, data: any): void {\n    console.log('🔄 Iniciando actualización de transacción en componente:', { id, data });\n    \n    this.transaccionService.actualizarTransaccion(id, data)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (response) => {\n          console.log('✅ Transacción actualizada exitosamente en componente:', response);\n          this.notificationService.success('Transacción actualizada correctamente');\n          this.cargarTransacciones();\n        },\n        error: (error) => {\n          console.error('❌ Error al actualizar transacción en componente:', error);\n          this.notificationService.error('Error al actualizar la transacción');\n        }\n      });\n  }\n\n  editarTransaccion(transaccion: Transaccion): void {\n    this.abrirDialogoTransaccion(transaccion);\n  }\n\n  eliminarTransaccion(transaccion: Transaccion): void {\n    console.log('🗑️ Iniciando eliminación de transacción en componente:', transaccion);\n    \n    if (confirm(`¿Estás seguro de que deseas eliminar la transacción \"${transaccion.descripcion}\"?`)) {\n      console.log('✅ Usuario confirmó eliminación, procediendo...');\n      \n      this.transaccionService.eliminarTransaccion(transaccion._id!)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (response) => {\n            console.log('✅ Transacción eliminada exitosamente en componente:', response);\n            this.notificationService.success('Transacción eliminada correctamente');\n            this.cargarTransacciones();\n          },\n          error: (error) => {\n            console.error('❌ Error al eliminar transacción en componente:', error);\n            this.notificationService.error('Error al eliminar la transacción');\n          }\n        });\n    } else {\n      console.log('❌ Usuario canceló la eliminación');\n    }\n  }\n\n  obtenerNombreFondo(transaccion: Transaccion): string {\n    // Si la transacción tiene el nombre del fondo ya cargado, usarlo\n    if (transaccion._fondoNombre) {\n      return transaccion._fondoNombre;\n    }\n    \n    // Si no hay fondos cargados, intentar cargarlos\n    if (this.fondos.length === 0) {\n      this.cargarFondosSincrono();\n      return 'Cargando...';\n    }\n    \n    // Buscar el fondo por ID\n    const fondo = this.fondos.find(f => f._id === transaccion.fondoId);\n    return fondo ? fondo.nombre : `ID: ${transaccion.fondoId.substring(0, 8)}...`;\n  }\n  \n  formatearCategoria(categoria: string): string {\n    return CategoriaUtils.formatearCategoria(categoria);\n  }\n\n  obtenerCategoriasFiltradas(): CategoriaTransaccion[] {\n    const tipoSeleccionado = this.filtrosForm.get('tipo')?.value;\n    if (tipoSeleccionado) {\n      return this.transaccionService.obtenerCategoriasPorTipo(tipoSeleccionado)\n        .filter(categoria => categoria !== 'transferencia'); // Excluir transferencias del filtro por tipo\n    }\n    return this.categorias.filter(categoria => categoria !== 'transferencia'); // Excluir transferencias de la lista general\n  }\n\n  debugFiltros(): void {\n    console.log('🔍 === DEBUG FILTROS ===');\n    console.log('📋 Valores del formulario:', this.filtrosForm.value);\n    console.log('🏦 Fondos disponibles:', this.fondos.map(f => ({ id: f._id, nombre: f.nombre })));\n    console.log('🏷️ Categorías disponibles:', this.categorias);\n    \n    const filtros = this.construirFiltros();\n    console.log('🔧 Filtros construidos:', filtros);\n    \n    console.log('🎯 Filtros aplicados:', this.filtrosAplicados);\n    console.log('📊 Total transacciones:', this.totalTransacciones);\n    console.log('📄 Transacciones actuales:', this.transacciones.length);\n    \n    if (this.transacciones.length > 0) {\n      console.log('🔍 Primeras 3 transacciones:', this.transacciones.slice(0, 3).map(t => ({\n        desc: t.descripcion,\n        fondoId: t.fondoId,\n        tipo: t.tipo,\n        categoria: t.categoria\n      })));\n    }\n    console.log('🔍 === FIN DEBUG ===');\n  }\n\n  private cargarFondosSincrono(): void {\n    // Intentar cargar desde cache primero\n    const cache = localStorage.getItem('fondos_cache');\n    if (cache) {\n      try {\n        this.fondos = JSON.parse(cache);\n        return;\n      } catch (e) {\n        console.warn('Error parseando cache de fondos');\n      }\n    }\n    \n    // Si no hay cache, hacer petición\n    this.fondoService.obtenerFondos().subscribe({\n      next: (fondos) => {\n        this.fondos = fondos;\n      },\n      error: (error) => {\n        console.error('Error cargando fondos para obtenerNombreFondo:', error);\n      }\n    });\n  }\n}\n","import { CategoriaTransaccion } from '../../core/models/transaccion.model';\n\n/**\n * Utilidades para formatear categorías de transacciones\n */\nexport class CategoriaUtils {\n  \n  /**\n   * Formatea una categoría con su emoji característico\n   */\n  static formatearCategoria(categoria: string): string {\n    const nombres: { [key: string]: string } = {\n      'necesario': '🛍️ Necesario',\n      'no_necesario': '🎉 No Necesario', \n      'salario': '💰 Salario',\n      'regalo': '🎁 Regalo',\n      'otros': '💵 Otros'\n    };\n    return nombres[categoria] || categoria;\n  }\n\n  /**\n   * Obtiene solo el emoji de una categoría\n   */\n  static obtenerEmoji(categoria: string): string {\n    const emojis: { [key: string]: string } = {\n      'necesario': '🛍️',\n      'no_necesario': '🎉',\n      'salario': '💰',\n      'regalo': '🎁',\n      'otros': '💵'\n    };\n    return emojis[categoria] || '📄';\n  }\n\n  /**\n   * Obtiene solo el nombre sin emoji de una categoría\n   */\n  static obtenerNombre(categoria: string): string {\n    const nombres: { [key: string]: string } = {\n      'necesario': 'Necesario',\n      'no_necesario': 'No Necesario',\n      'salario': 'Salario',\n      'regalo': 'Regalo',\n      'otros': 'Otros'\n    };\n    return nombres[categoria] || categoria;\n  }\n\n  /**\n   * Obtiene información completa de una categoría\n   */\n  static obtenerInfoCategoria(categoria: string) {\n    return {\n      emoji: this.obtenerEmoji(categoria),\n      nombre: this.obtenerNombre(categoria),\n      completo: this.formatearCategoria(categoria)\n    };\n  }\n}\n","import * as i0 from '@angular/core';\nimport { Injectable, Optional, SkipSelf, InjectionToken, numberAttribute, EventEmitter, booleanAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, NgModule } from '@angular/core';\nimport { Subject, ReplaySubject } from 'rxjs';\nimport { MatIconButton, MatButtonModule } from '@angular/material/button';\nimport { MatSelect, MatSelectModule } from '@angular/material/select';\nimport { MatTooltip, MatTooltipModule } from '@angular/material/tooltip';\nimport { MatOption } from '@angular/material/core';\nimport { MatFormField } from '@angular/material/form-field';\n\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nclass MatPaginatorIntl {\n    constructor() {\n        /**\n         * Stream to emit from when labels are changed. Use this to notify components when the labels have\n         * changed after initialization.\n         */\n        this.changes = new Subject();\n        /** A label for the page size selector. */\n        this.itemsPerPageLabel = 'Items per page:';\n        /** A label for the button that increments the current page. */\n        this.nextPageLabel = 'Next page';\n        /** A label for the button that decrements the current page. */\n        this.previousPageLabel = 'Previous page';\n        /** A label for the button that moves to the first page. */\n        this.firstPageLabel = 'First page';\n        /** A label for the button that moves to the last page. */\n        this.lastPageLabel = 'Last page';\n        /** A label for the range of items within the current page and the length of the whole list. */\n        this.getRangeLabel = (page, pageSize, length) => {\n            if (length == 0 || pageSize == 0) {\n                return `0 of ${length}`;\n            }\n            length = Math.max(length, 0);\n            const startIndex = page * pageSize;\n            // If the start index exceeds the list length, do not try and fix the end index to the end.\n            const endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\n            return `${startIndex + 1} – ${endIndex} of ${length}`;\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatPaginatorIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatPaginatorIntl, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatPaginatorIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** @docs-private */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/** @docs-private */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY,\n};\n\n/** The default page size if there is no page size and there are no provided page size options. */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {\n}\n/** Injection token that can be used to provide the default options for the paginator module. */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\nlet nextUniqueId = 0;\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator {\n    /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n    get pageIndex() {\n        return this._pageIndex;\n    }\n    set pageIndex(value) {\n        this._pageIndex = Math.max(value || 0, 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The length of the total number of items that are being paginated. Defaulted to 0. */\n    get length() {\n        return this._length;\n    }\n    set length(value) {\n        this._length = value || 0;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Number of items to display on a page. By default set to 50. */\n    get pageSize() {\n        return this._pageSize;\n    }\n    set pageSize(value) {\n        this._pageSize = Math.max(value || 0, 0);\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** The set of provided page size options to display to the user. */\n    get pageSizeOptions() {\n        return this._pageSizeOptions;\n    }\n    set pageSizeOptions(value) {\n        this._pageSizeOptions = (value || []).map(p => numberAttribute(p, 0));\n        this._updateDisplayedPageSizeOptions();\n    }\n    constructor(_intl, _changeDetectorRef, defaults) {\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** ID for the DOM node containing the paginator's items per page label. */\n        this._pageSizeLabelId = `mat-paginator-page-size-label-${nextUniqueId++}`;\n        this._isInitialized = false;\n        this._initializedStream = new ReplaySubject(1);\n        this._pageIndex = 0;\n        this._length = 0;\n        this._pageSizeOptions = [];\n        /** Whether to hide the page size selection UI from the user. */\n        this.hidePageSize = false;\n        /** Whether to show the first/last buttons UI to the user. */\n        this.showFirstLastButtons = false;\n        /** Used to configure the underlying `MatSelect` inside the paginator. */\n        this.selectConfig = {};\n        /** Whether the paginator is disabled. */\n        this.disabled = false;\n        /** Event emitted when the paginator changes the page size or page index. */\n        this.page = new EventEmitter();\n        /** Emits when the paginator is initialized. */\n        this.initialized = this._initializedStream;\n        this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n        if (defaults) {\n            const { pageSize, pageSizeOptions, hidePageSize, showFirstLastButtons } = defaults;\n            if (pageSize != null) {\n                this._pageSize = pageSize;\n            }\n            if (pageSizeOptions != null) {\n                this._pageSizeOptions = pageSizeOptions;\n            }\n            if (hidePageSize != null) {\n                this.hidePageSize = hidePageSize;\n            }\n            if (showFirstLastButtons != null) {\n                this.showFirstLastButtons = showFirstLastButtons;\n            }\n        }\n        this._formFieldAppearance = defaults?.formFieldAppearance || 'outline';\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n        this._updateDisplayedPageSizeOptions();\n        this._initializedStream.next();\n    }\n    ngOnDestroy() {\n        this._initializedStream.complete();\n        this._intlChanges.unsubscribe();\n    }\n    /** Advances to the next page if it exists. */\n    nextPage() {\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.pageIndex + 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move back to the previous page if it exists. */\n    previousPage() {\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.pageIndex - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the first page if not already there. */\n    firstPage() {\n        // hasPreviousPage being false implies at the start\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = 0;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the last page if not already there. */\n    lastPage() {\n        // hasNextPage being false implies at the end\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.getNumberOfPages() - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Whether there is a previous page. */\n    hasPreviousPage() {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /** Whether there is a next page. */\n    hasNextPage() {\n        const maxPageIndex = this.getNumberOfPages() - 1;\n        return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /** Calculate the number of pages */\n    getNumberOfPages() {\n        if (!this.pageSize) {\n            return 0;\n        }\n        return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     */\n    _changePageSize(pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        const startIndex = this.pageIndex * this.pageSize;\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Checks whether the buttons for going forwards should be disabled. */\n    _nextButtonsDisabled() {\n        return this.disabled || !this.hasNextPage();\n    }\n    /** Checks whether the buttons for going backwards should be disabled. */\n    _previousButtonsDisabled() {\n        return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     */\n    _updateDisplayedPageSizeOptions() {\n        if (!this._isInitialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize =\n                this.pageSizeOptions.length != 0 ? this.pageSizeOptions[0] : DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort((a, b) => a - b);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n    _emitPageEvent(previousPageIndex) {\n        this.page.emit({\n            previousPageIndex,\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length,\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatPaginator, deps: [{ token: MatPaginatorIntl }, { token: i0.ChangeDetectorRef }, { token: MAT_PAGINATOR_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"17.2.0\", type: MatPaginator, isStandalone: true, selector: \"mat-paginator\", inputs: { color: \"color\", pageIndex: [\"pageIndex\", \"pageIndex\", numberAttribute], length: [\"length\", \"length\", numberAttribute], pageSize: [\"pageSize\", \"pageSize\", numberAttribute], pageSizeOptions: \"pageSizeOptions\", hidePageSize: [\"hidePageSize\", \"hidePageSize\", booleanAttribute], showFirstLastButtons: [\"showFirstLastButtons\", \"showFirstLastButtons\", booleanAttribute], selectConfig: \"selectConfig\", disabled: [\"disabled\", \"disabled\", booleanAttribute] }, outputs: { page: \"page\" }, host: { attributes: { \"role\": \"group\" }, classAttribute: \"mat-mdc-paginator\" }, exportAs: [\"matPaginator\"], ngImport: i0, template: \"<div class=\\\"mat-mdc-paginator-outer-container\\\">\\n  <div class=\\\"mat-mdc-paginator-container\\\">\\n    @if (!hidePageSize) {\\n      <div class=\\\"mat-mdc-paginator-page-size\\\">\\n        <div class=\\\"mat-mdc-paginator-page-size-label\\\" [attr.id]=\\\"_pageSizeLabelId\\\">\\n          {{_intl.itemsPerPageLabel}}\\n        </div>\\n\\n        @if (_displayedPageSizeOptions.length > 1) {\\n          <mat-form-field\\n            [appearance]=\\\"_formFieldAppearance!\\\"\\n            [color]=\\\"color\\\"\\n            class=\\\"mat-mdc-paginator-page-size-select\\\">\\n            <mat-select\\n              [value]=\\\"pageSize\\\"\\n              [disabled]=\\\"disabled\\\"\\n              [aria-labelledby]=\\\"_pageSizeLabelId\\\"\\n              [panelClass]=\\\"selectConfig.panelClass || ''\\\"\\n              [disableOptionCentering]=\\\"selectConfig.disableOptionCentering\\\"\\n              (selectionChange)=\\\"_changePageSize($event.value)\\\"\\n              hideSingleSelectionIndicator>\\n              @for (pageSizeOption of _displayedPageSizeOptions; track pageSizeOption) {\\n                <mat-option [value]=\\\"pageSizeOption\\\">\\n                  {{pageSizeOption}}\\n                </mat-option>\\n              }\\n            </mat-select>\\n          </mat-form-field>\\n        }\\n\\n        @if (_displayedPageSizeOptions.length <= 1) {\\n          <div class=\\\"mat-mdc-paginator-page-size-value\\\">{{pageSize}}</div>\\n        }\\n      </div>\\n    }\\n\\n    <div class=\\\"mat-mdc-paginator-range-actions\\\">\\n      <div class=\\\"mat-mdc-paginator-range-label\\\" aria-live=\\\"polite\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-first\\\"\\n                (click)=\\\"firstPage()\\\"\\n                [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n                [matTooltipPosition]=\\\"'above'\\\"\\n                [disabled]=\\\"_previousButtonsDisabled()\\\">\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-last\\\"\\n                (click)=\\\"lastPage()\\\"\\n                [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n                [matTooltipPosition]=\\\"'above'\\\"\\n                [disabled]=\\\"_nextButtonsDisabled()\\\">\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-paginator{display:block;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-paginator-container-text-color);background-color:var(--mat-paginator-container-background-color);font-family:var(--mat-paginator-container-text-font);line-height:var(--mat-paginator-container-text-line-height);font-size:var(--mat-paginator-container-text-size);font-weight:var(--mat-paginator-container-text-weight);letter-spacing:var(--mat-paginator-container-text-tracking);--mat-form-field-container-height:var(--mat-paginator-form-field-container-height);--mat-form-field-container-vertical-padding:var(--mat-paginator-form-field-container-vertical-padding)}.mat-mdc-paginator .mat-mdc-select-value{font-size:var(--mat-paginator-select-trigger-text-size)}.mat-mdc-paginator .mat-mdc-form-field-subscript-wrapper{display:none}.mat-mdc-paginator .mat-mdc-select{line-height:1.5}.mat-mdc-paginator-outer-container{display:flex}.mat-mdc-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap;width:100%;min-height:var(--mat-paginator-container-size)}.mat-mdc-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-mdc-paginator-page-size{margin-right:0;margin-left:8px}.mat-mdc-paginator-page-size-label{margin:0 4px}.mat-mdc-paginator-page-size-select{margin:0 4px;width:84px}.mat-mdc-paginator-range-label{margin:0 32px 0 24px}.mat-mdc-paginator-range-actions{display:flex;align-items:center}.mat-mdc-paginator-icon{display:inline-block;width:28px;fill:var(--mat-paginator-enabled-icon-color)}.mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon{fill:var(--mat-paginator-disabled-icon-color)}[dir=rtl] .mat-mdc-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon,.cdk-high-contrast-active .mat-mdc-paginator-icon{fill:currentColor;fill:CanvasText}.cdk-high-contrast-active .mat-mdc-paginator-range-actions .mat-mdc-icon-button{outline:solid 1px}\"], dependencies: [{ kind: \"component\", type: MatFormField, selector: \"mat-form-field\", inputs: [\"hideRequiredMarker\", \"color\", \"floatLabel\", \"appearance\", \"subscriptSizing\", \"hintLabel\"], exportAs: [\"matFormField\"] }, { kind: \"component\", type: MatSelect, selector: \"mat-select\", inputs: [\"aria-describedby\", \"panelClass\", \"disabled\", \"disableRipple\", \"tabIndex\", \"hideSingleSelectionIndicator\", \"placeholder\", \"required\", \"multiple\", \"disableOptionCentering\", \"compareWith\", \"value\", \"aria-label\", \"aria-labelledby\", \"errorStateMatcher\", \"typeaheadDebounceInterval\", \"sortComparator\", \"id\", \"panelWidth\"], outputs: [\"openedChange\", \"opened\", \"closed\", \"selectionChange\", \"valueChange\"], exportAs: [\"matSelect\"] }, { kind: \"component\", type: MatOption, selector: \"mat-option\", inputs: [\"value\", \"id\", \"disabled\"], outputs: [\"onSelectionChange\"], exportAs: [\"matOption\"] }, { kind: \"component\", type: MatIconButton, selector: \"button[mat-icon-button]\", exportAs: [\"matButton\"] }, { kind: \"directive\", type: MatTooltip, selector: \"[matTooltip]\", inputs: [\"matTooltipPosition\", \"matTooltipPositionAtOrigin\", \"matTooltipDisabled\", \"matTooltipShowDelay\", \"matTooltipHideDelay\", \"matTooltipTouchGestures\", \"matTooltip\", \"matTooltipClass\"], exportAs: [\"matTooltip\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatPaginator, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-paginator', exportAs: 'matPaginator', host: {\n                        'class': 'mat-mdc-paginator',\n                        'role': 'group',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, standalone: true, imports: [MatFormField, MatSelect, MatOption, MatIconButton, MatTooltip], template: \"<div class=\\\"mat-mdc-paginator-outer-container\\\">\\n  <div class=\\\"mat-mdc-paginator-container\\\">\\n    @if (!hidePageSize) {\\n      <div class=\\\"mat-mdc-paginator-page-size\\\">\\n        <div class=\\\"mat-mdc-paginator-page-size-label\\\" [attr.id]=\\\"_pageSizeLabelId\\\">\\n          {{_intl.itemsPerPageLabel}}\\n        </div>\\n\\n        @if (_displayedPageSizeOptions.length > 1) {\\n          <mat-form-field\\n            [appearance]=\\\"_formFieldAppearance!\\\"\\n            [color]=\\\"color\\\"\\n            class=\\\"mat-mdc-paginator-page-size-select\\\">\\n            <mat-select\\n              [value]=\\\"pageSize\\\"\\n              [disabled]=\\\"disabled\\\"\\n              [aria-labelledby]=\\\"_pageSizeLabelId\\\"\\n              [panelClass]=\\\"selectConfig.panelClass || ''\\\"\\n              [disableOptionCentering]=\\\"selectConfig.disableOptionCentering\\\"\\n              (selectionChange)=\\\"_changePageSize($event.value)\\\"\\n              hideSingleSelectionIndicator>\\n              @for (pageSizeOption of _displayedPageSizeOptions; track pageSizeOption) {\\n                <mat-option [value]=\\\"pageSizeOption\\\">\\n                  {{pageSizeOption}}\\n                </mat-option>\\n              }\\n            </mat-select>\\n          </mat-form-field>\\n        }\\n\\n        @if (_displayedPageSizeOptions.length <= 1) {\\n          <div class=\\\"mat-mdc-paginator-page-size-value\\\">{{pageSize}}</div>\\n        }\\n      </div>\\n    }\\n\\n    <div class=\\\"mat-mdc-paginator-range-actions\\\">\\n      <div class=\\\"mat-mdc-paginator-range-label\\\" aria-live=\\\"polite\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-first\\\"\\n                (click)=\\\"firstPage()\\\"\\n                [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n                [matTooltipPosition]=\\\"'above'\\\"\\n                [disabled]=\\\"_previousButtonsDisabled()\\\">\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-last\\\"\\n                (click)=\\\"lastPage()\\\"\\n                [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n                [matTooltipPosition]=\\\"'above'\\\"\\n                [disabled]=\\\"_nextButtonsDisabled()\\\">\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-paginator{display:block;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-paginator-container-text-color);background-color:var(--mat-paginator-container-background-color);font-family:var(--mat-paginator-container-text-font);line-height:var(--mat-paginator-container-text-line-height);font-size:var(--mat-paginator-container-text-size);font-weight:var(--mat-paginator-container-text-weight);letter-spacing:var(--mat-paginator-container-text-tracking);--mat-form-field-container-height:var(--mat-paginator-form-field-container-height);--mat-form-field-container-vertical-padding:var(--mat-paginator-form-field-container-vertical-padding)}.mat-mdc-paginator .mat-mdc-select-value{font-size:var(--mat-paginator-select-trigger-text-size)}.mat-mdc-paginator .mat-mdc-form-field-subscript-wrapper{display:none}.mat-mdc-paginator .mat-mdc-select{line-height:1.5}.mat-mdc-paginator-outer-container{display:flex}.mat-mdc-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap;width:100%;min-height:var(--mat-paginator-container-size)}.mat-mdc-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-mdc-paginator-page-size{margin-right:0;margin-left:8px}.mat-mdc-paginator-page-size-label{margin:0 4px}.mat-mdc-paginator-page-size-select{margin:0 4px;width:84px}.mat-mdc-paginator-range-label{margin:0 32px 0 24px}.mat-mdc-paginator-range-actions{display:flex;align-items:center}.mat-mdc-paginator-icon{display:inline-block;width:28px;fill:var(--mat-paginator-enabled-icon-color)}.mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon{fill:var(--mat-paginator-disabled-icon-color)}[dir=rtl] .mat-mdc-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon,.cdk-high-contrast-active .mat-mdc-paginator-icon{fill:currentColor;fill:CanvasText}.cdk-high-contrast-active .mat-mdc-paginator-range-actions .mat-mdc-icon-button{outline:solid 1px}\"] }]\n        }], ctorParameters: () => [{ type: MatPaginatorIntl }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_PAGINATOR_DEFAULT_OPTIONS]\n                }] }], propDecorators: { color: [{\n                type: Input\n            }], pageIndex: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], length: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], pageSize: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], pageSizeOptions: [{\n                type: Input\n            }], hidePageSize: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], showFirstLastButtons: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], selectConfig: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], page: [{\n                type: Output\n            }] } });\n\nclass MatPaginatorModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatPaginatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.2.0\", ngImport: i0, type: MatPaginatorModule, imports: [MatButtonModule, MatSelectModule, MatTooltipModule, MatPaginator], exports: [MatPaginator] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatPaginatorModule, providers: [MAT_PAGINATOR_INTL_PROVIDER], imports: [MatButtonModule, MatSelectModule, MatTooltipModule, MatPaginator] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatPaginatorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatButtonModule, MatSelectModule, MatTooltipModule, MatPaginator],\n                    exports: [MatPaginator],\n                    providers: [MAT_PAGINATOR_INTL_PROVIDER],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, booleanAttribute, Directive, Optional, Inject, Input, Output, Injectable, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport * as i3 from '@angular/cdk/a11y';\nimport { SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { ReplaySubject, Subject, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate, keyframes, query, animateChild } from '@angular/animations';\nimport { AnimationDurations, AnimationCurves, MatCommonModule } from '@angular/material/core';\n\n/** @docs-private */\nfunction getSortDuplicateSortableIdError(id) {\n    return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n/** @docs-private */\nfunction getSortHeaderNotContainedWithinSortError() {\n    return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n/** @docs-private */\nfunction getSortHeaderMissingIdError() {\n    return Error(`MatSortHeader must be provided with a unique id.`);\n}\n/** @docs-private */\nfunction getSortInvalidDirectionError(direction) {\n    return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n\n/** Injection token to be used to override the default options for `mat-sort`. */\nconst MAT_SORT_DEFAULT_OPTIONS = new InjectionToken('MAT_SORT_DEFAULT_OPTIONS');\n/** Container for MatSortables to manage the sort state and provide default sort parameters. */\nclass MatSort {\n    /** The sort direction of the currently active MatSortable. */\n    get direction() {\n        return this._direction;\n    }\n    set direction(direction) {\n        if (direction &&\n            direction !== 'asc' &&\n            direction !== 'desc' &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getSortInvalidDirectionError(direction);\n        }\n        this._direction = direction;\n    }\n    constructor(_defaultOptions) {\n        this._defaultOptions = _defaultOptions;\n        this._initializedStream = new ReplaySubject(1);\n        /** Collection of all registered sortables that this directive manages. */\n        this.sortables = new Map();\n        /** Used to notify any child components listening to state changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The direction to set when an MatSortable is initially sorted.\n         * May be overridden by the MatSortable's sort start.\n         */\n        this.start = 'asc';\n        this._direction = '';\n        /** Whether the sortable is disabled. */\n        this.disabled = false;\n        /** Event emitted when the user changes either the active sort or sort direction. */\n        this.sortChange = new EventEmitter();\n        /** Emits when the paginator is initialized. */\n        this.initialized = this._initializedStream;\n    }\n    /**\n     * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n     * collection of MatSortables.\n     */\n    register(sortable) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!sortable.id) {\n                throw getSortHeaderMissingIdError();\n            }\n            if (this.sortables.has(sortable.id)) {\n                throw getSortDuplicateSortableIdError(sortable.id);\n            }\n        }\n        this.sortables.set(sortable.id, sortable);\n    }\n    /**\n     * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n     * collection of contained MatSortables.\n     */\n    deregister(sortable) {\n        this.sortables.delete(sortable.id);\n    }\n    /** Sets the active sort id and determines the new sort direction. */\n    sort(sortable) {\n        if (this.active != sortable.id) {\n            this.active = sortable.id;\n            this.direction = sortable.start ? sortable.start : this.start;\n        }\n        else {\n            this.direction = this.getNextSortDirection(sortable);\n        }\n        this.sortChange.emit({ active: this.active, direction: this.direction });\n    }\n    /** Returns the next sort direction of the active sortable, checking for potential overrides. */\n    getNextSortDirection(sortable) {\n        if (!sortable) {\n            return '';\n        }\n        // Get the sort direction cycle with the potential sortable overrides.\n        const disableClear = sortable?.disableClear ?? this.disableClear ?? !!this._defaultOptions?.disableClear;\n        let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n        // Get and return the next direction in the cycle\n        let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n        if (nextDirectionIndex >= sortDirectionCycle.length) {\n            nextDirectionIndex = 0;\n        }\n        return sortDirectionCycle[nextDirectionIndex];\n    }\n    ngOnInit() {\n        this._initializedStream.next();\n    }\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n        this._initializedStream.complete();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSort, deps: [{ token: MAT_SORT_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"17.2.0\", type: MatSort, isStandalone: true, selector: \"[matSort]\", inputs: { active: [\"matSortActive\", \"active\"], start: [\"matSortStart\", \"start\"], direction: [\"matSortDirection\", \"direction\"], disableClear: [\"matSortDisableClear\", \"disableClear\", booleanAttribute], disabled: [\"matSortDisabled\", \"disabled\", booleanAttribute] }, outputs: { sortChange: \"matSortChange\" }, host: { classAttribute: \"mat-sort\" }, exportAs: [\"matSort\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSort, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matSort]',\n                    exportAs: 'matSort',\n                    host: {\n                        'class': 'mat-sort',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_SORT_DEFAULT_OPTIONS]\n                }] }], propDecorators: { active: [{\n                type: Input,\n                args: ['matSortActive']\n            }], start: [{\n                type: Input,\n                args: ['matSortStart']\n            }], direction: [{\n                type: Input,\n                args: ['matSortDirection']\n            }], disableClear: [{\n                type: Input,\n                args: [{ alias: 'matSortDisableClear', transform: booleanAttribute }]\n            }], disabled: [{\n                type: Input,\n                args: [{ alias: 'matSortDisabled', transform: booleanAttribute }]\n            }], sortChange: [{\n                type: Output,\n                args: ['matSortChange']\n            }] } });\n/** Returns the sort direction cycle to use given the provided parameters of order and clear. */\nfunction getSortDirectionCycle(start, disableClear) {\n    let sortOrder = ['asc', 'desc'];\n    if (start == 'desc') {\n        sortOrder.reverse();\n    }\n    if (!disableClear) {\n        sortOrder.push('');\n    }\n    return sortOrder;\n}\n\nconst SORT_ANIMATION_TRANSITION = AnimationDurations.ENTERING + ' ' + AnimationCurves.STANDARD_CURVE;\n/**\n * Animations used by MatSort.\n * @docs-private\n */\nconst matSortAnimations = {\n    /** Animation that moves the sort indicator. */\n    indicator: trigger('indicator', [\n        state('active-asc, asc', style({ transform: 'translateY(0px)' })),\n        // 10px is the height of the sort indicator, minus the width of the pointers\n        state('active-desc, desc', style({ transform: 'translateY(10px)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /** Animation that rotates the left pointer of the indicator based on the sorting direction. */\n    leftPointer: trigger('leftPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(-45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /** Animation that rotates the right pointer of the indicator based on the sorting direction. */\n    rightPointer: trigger('rightPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(-45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /** Animation that controls the arrow opacity. */\n    arrowOpacity: trigger('arrowOpacity', [\n        state('desc-to-active, asc-to-active, active', style({ opacity: 1 })),\n        state('desc-to-hint, asc-to-hint, hint', style({ opacity: 0.54 })),\n        state('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void', style({ opacity: 0 })),\n        // Transition between all states except for immediate transitions\n        transition('* => asc, * => desc, * => active, * => hint, * => void', animate('0ms')),\n        transition('* <=> *', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /**\n     * Animation for the translation of the arrow as a whole. States are separated into two\n     * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n     * peek, and active. The other states define a specific animation (source-to-destination)\n     * and are determined as a function of their prev user-perceived state and what the next state\n     * should be.\n     */\n    arrowPosition: trigger('arrowPosition', [\n        // Hidden Above => Hint Center\n        transition('* => desc-to-hint, * => desc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(-25%)' }), style({ transform: 'translateY(0)' })]))),\n        // Hint Center => Hidden Below\n        transition('* => hint-to-desc, * => active-to-desc', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(0)' }), style({ transform: 'translateY(25%)' })]))),\n        // Hidden Below => Hint Center\n        transition('* => asc-to-hint, * => asc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(25%)' }), style({ transform: 'translateY(0)' })]))),\n        // Hint Center => Hidden Above\n        transition('* => hint-to-asc, * => active-to-asc', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(0)' }), style({ transform: 'translateY(-25%)' })]))),\n        state('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active', style({ transform: 'translateY(0)' })),\n        state('hint-to-desc, active-to-desc, desc', style({ transform: 'translateY(-25%)' })),\n        state('hint-to-asc, active-to-asc, asc', style({ transform: 'translateY(25%)' })),\n    ]),\n    /** Necessary trigger that calls animate on children animations. */\n    allowChildren: trigger('allowChildren', [\n        transition('* <=> *', [query('@*', animateChild(), { optional: true })]),\n    ]),\n};\n\n/**\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\n * include it in a custom provider.\n */\nclass MatSortHeaderIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSortHeaderIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSortHeaderIntl, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSortHeaderIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** @docs-private */\nfunction MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatSortHeaderIntl();\n}\n/** @docs-private */\nconst MAT_SORT_HEADER_INTL_PROVIDER = {\n    // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n    provide: MatSortHeaderIntl,\n    deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\n    useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY,\n};\n\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent MatSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\nclass MatSortHeader {\n    /**\n     * Description applied to MatSortHeader's button element with aria-describedby. This text should\n     * describe the action that will occur when the user clicks the sort header.\n     */\n    get sortActionDescription() {\n        return this._sortActionDescription;\n    }\n    set sortActionDescription(value) {\n        this._updateSortActionDescription(value);\n    }\n    constructor(\n    /**\n     * @deprecated `_intl` parameter isn't being used anymore and it'll be removed.\n     * @breaking-change 13.0.0\n     */\n    _intl, _changeDetectorRef, \n    // `MatSort` is not optionally injected, but just asserted manually w/ better error.\n    // tslint:disable-next-line: lightweight-tokens\n    _sort, _columnDef, _focusMonitor, _elementRef, \n    /** @breaking-change 14.0.0 _ariaDescriber will be required. */\n    _ariaDescriber, defaultOptions) {\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._sort = _sort;\n        this._columnDef = _columnDef;\n        this._focusMonitor = _focusMonitor;\n        this._elementRef = _elementRef;\n        this._ariaDescriber = _ariaDescriber;\n        /**\n         * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n         * provide an affordance that the header is sortable by showing on focus and hover.\n         */\n        this._showIndicatorHint = false;\n        /**\n         * The view transition state of the arrow (translation/ opacity) - indicates its `from` and `to`\n         * position through the animation. If animations are currently disabled, the fromState is removed\n         * so that there is no animation displayed.\n         */\n        this._viewState = {};\n        /** The direction the arrow should be facing according to the current state. */\n        this._arrowDirection = '';\n        /**\n         * Whether the view state animation should show the transition between the `from` and `to` states.\n         */\n        this._disableViewStateAnimation = false;\n        /** Sets the position of the arrow that displays when sorted. */\n        this.arrowPosition = 'after';\n        /** whether the sort header is disabled. */\n        this.disabled = false;\n        // Default the action description to \"Sort\" because it's better than nothing.\n        // Without a description, the button's label comes from the sort header text content,\n        // which doesn't give any indication that it performs a sorting operation.\n        this._sortActionDescription = 'Sort';\n        // Note that we use a string token for the `_columnDef`, because the value is provided both by\n        // `material/table` and `cdk/table` and we can't have the CDK depending on Material,\n        // and we want to avoid having the sort header depending on the CDK table because\n        // of this single reference.\n        if (!_sort && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getSortHeaderNotContainedWithinSortError();\n        }\n        if (defaultOptions?.arrowPosition) {\n            this.arrowPosition = defaultOptions?.arrowPosition;\n        }\n        this._handleStateChanges();\n    }\n    ngOnInit() {\n        if (!this.id && this._columnDef) {\n            this.id = this._columnDef.name;\n        }\n        // Initialize the direction of the arrow and set the view state to be immediately that state.\n        this._updateArrowDirection();\n        this._setAnimationTransitionState({\n            toState: this._isSorted() ? 'active' : this._arrowDirection,\n        });\n        this._sort.register(this);\n        this._sortButton = this._elementRef.nativeElement.querySelector('.mat-sort-header-container');\n        this._updateSortActionDescription(this._sortActionDescription);\n    }\n    ngAfterViewInit() {\n        // We use the focus monitor because we also want to style\n        // things differently based on the focus origin.\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n            const newState = !!origin;\n            if (newState !== this._showIndicatorHint) {\n                this._setIndicatorHintVisible(newState);\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._sort.deregister(this);\n        this._rerenderSubscription.unsubscribe();\n        if (this._sortButton) {\n            this._ariaDescriber?.removeDescription(this._sortButton, this._sortActionDescription);\n        }\n    }\n    /**\n     * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\n     * user showing what the active sort will become. If set to false, the arrow will fade away.\n     */\n    _setIndicatorHintVisible(visible) {\n        // No-op if the sort header is disabled - should not make the hint visible.\n        if (this._isDisabled() && visible) {\n            return;\n        }\n        this._showIndicatorHint = visible;\n        if (!this._isSorted()) {\n            this._updateArrowDirection();\n            if (this._showIndicatorHint) {\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'hint' });\n            }\n            else {\n                this._setAnimationTransitionState({ fromState: 'hint', toState: this._arrowDirection });\n            }\n        }\n    }\n    /**\n     * Sets the animation transition view state for the arrow's position and opacity. If the\n     * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\n     * no animation appears.\n     */\n    _setAnimationTransitionState(viewState) {\n        this._viewState = viewState || {};\n        // If the animation for arrow position state (opacity/translation) should be disabled,\n        // remove the fromState so that it jumps right to the toState.\n        if (this._disableViewStateAnimation) {\n            this._viewState = { toState: viewState.toState };\n        }\n    }\n    /** Triggers the sort on this sort header and removes the indicator hint. */\n    _toggleOnInteraction() {\n        this._sort.sort(this);\n        // Do not show the animation if the header was already shown in the right position.\n        if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n            this._disableViewStateAnimation = true;\n        }\n    }\n    _handleClick() {\n        if (!this._isDisabled()) {\n            this._sort.sort(this);\n        }\n    }\n    _handleKeydown(event) {\n        if (!this._isDisabled() && (event.keyCode === SPACE || event.keyCode === ENTER)) {\n            event.preventDefault();\n            this._toggleOnInteraction();\n        }\n    }\n    /** Whether this MatSortHeader is currently sorted in either ascending or descending order. */\n    _isSorted() {\n        return (this._sort.active == this.id &&\n            (this._sort.direction === 'asc' || this._sort.direction === 'desc'));\n    }\n    /** Returns the animation state for the arrow direction (indicator and pointers). */\n    _getArrowDirectionState() {\n        return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n    }\n    /** Returns the arrow position state (opacity, translation). */\n    _getArrowViewState() {\n        const fromState = this._viewState.fromState;\n        return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\n    }\n    /**\n     * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\n     * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\n     * active sorted direction. The reason this is updated through a function is because the direction\n     * should only be changed at specific times - when deactivated but the hint is displayed and when\n     * the sort is active and the direction changes. Otherwise the arrow's direction should linger\n     * in cases such as the sort becoming deactivated but we want to animate the arrow away while\n     * preserving its direction, even though the next sort direction is actually different and should\n     * only be changed once the arrow displays again (hint or activation).\n     */\n    _updateArrowDirection() {\n        this._arrowDirection = this._isSorted() ? this._sort.direction : this.start || this._sort.start;\n    }\n    _isDisabled() {\n        return this._sort.disabled || this.disabled;\n    }\n    /**\n     * Gets the aria-sort attribute that should be applied to this sort header. If this header\n     * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n     * says that the aria-sort property should only be present on one header at a time, so removing\n     * ensures this is true.\n     */\n    _getAriaSortAttribute() {\n        if (!this._isSorted()) {\n            return 'none';\n        }\n        return this._sort.direction == 'asc' ? 'ascending' : 'descending';\n    }\n    /** Whether the arrow inside the sort header should be rendered. */\n    _renderArrow() {\n        return !this._isDisabled() || this._isSorted();\n    }\n    _updateSortActionDescription(newDescription) {\n        // We use AriaDescriber for the sort button instead of setting an `aria-label` because some\n        // screen readers (notably VoiceOver) will read both the column header *and* the button's label\n        // for every *cell* in the table, creating a lot of unnecessary noise.\n        // If _sortButton is undefined, the component hasn't been initialized yet so there's\n        // nothing to update in the DOM.\n        if (this._sortButton) {\n            // removeDescription will no-op if there is no existing message.\n            // TODO(jelbourn): remove optional chaining when AriaDescriber is required.\n            this._ariaDescriber?.removeDescription(this._sortButton, this._sortActionDescription);\n            this._ariaDescriber?.describe(this._sortButton, newDescription);\n        }\n        this._sortActionDescription = newDescription;\n    }\n    /** Handles changes in the sorting state. */\n    _handleStateChanges() {\n        this._rerenderSubscription = merge(this._sort.sortChange, this._sort._stateChanges, this._intl.changes).subscribe(() => {\n            if (this._isSorted()) {\n                this._updateArrowDirection();\n                // Do not show the animation if the header was already shown in the right position.\n                if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n                    this._disableViewStateAnimation = true;\n                }\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'active' });\n                this._showIndicatorHint = false;\n            }\n            // If this header was recently active and now no longer sorted, animate away the arrow.\n            if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\n                this._disableViewStateAnimation = false;\n                this._setAnimationTransitionState({ fromState: 'active', toState: this._arrowDirection });\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSortHeader, deps: [{ token: MatSortHeaderIntl }, { token: i0.ChangeDetectorRef }, { token: MatSort, optional: true }, { token: 'MAT_SORT_HEADER_COLUMN_DEF', optional: true }, { token: i3.FocusMonitor }, { token: i0.ElementRef }, { token: i3.AriaDescriber, optional: true }, { token: MAT_SORT_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"17.2.0\", type: MatSortHeader, isStandalone: true, selector: \"[mat-sort-header]\", inputs: { id: [\"mat-sort-header\", \"id\"], arrowPosition: \"arrowPosition\", start: \"start\", disabled: [\"disabled\", \"disabled\", booleanAttribute], sortActionDescription: \"sortActionDescription\", disableClear: [\"disableClear\", \"disableClear\", booleanAttribute] }, host: { listeners: { \"click\": \"_handleClick()\", \"keydown\": \"_handleKeydown($event)\", \"mouseenter\": \"_setIndicatorHintVisible(true)\", \"mouseleave\": \"_setIndicatorHintVisible(false)\" }, properties: { \"attr.aria-sort\": \"_getAriaSortAttribute()\", \"class.mat-sort-header-disabled\": \"_isDisabled()\" }, classAttribute: \"mat-sort-header\" }, exportAs: [\"matSortHeader\"], ngImport: i0, template: \"<!--\\n  We set the `tabindex` on an element inside the table header, rather than the header itself,\\n  because of a bug in NVDA where having a `tabindex` on a `th` breaks keyboard navigation in the\\n  table (see https://github.com/nvaccess/nvda/issues/7718). This allows for the header to both\\n  be focusable, and have screen readers read out its `aria-sort` state. We prefer this approach\\n  over having a button with an `aria-label` inside the header, because the button's `aria-label`\\n  will be read out as the user is navigating the table's cell (see #13012).\\n\\n  The approach is based off of: https://dequeuniversity.com/library/aria/tables/sf-sortable-grid\\n-->\\n<div class=\\\"mat-sort-header-container mat-focus-indicator\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition === 'before'\\\"\\n     [attr.tabindex]=\\\"_isDisabled() ? null : 0\\\"\\n     [attr.role]=\\\"_isDisabled() ? null : 'button'\\\">\\n\\n  <!--\\n    TODO(crisbeto): this div isn't strictly necessary, but we have to keep it due to a large\\n    number of screenshot diff failures. It should be removed eventually. Note that the difference\\n    isn't visible with a shorter header, but once it breaks up into multiple lines, this element\\n    causes it to be center-aligned, whereas removing it will keep the text to the left.\\n  -->\\n  <div class=\\\"mat-sort-header-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  @if (_renderArrow()) {\\n    <div class=\\\"mat-sort-header-arrow\\\"\\n        [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n        [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n        [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n        (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n        (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n      <div class=\\\"mat-sort-header-stem\\\"></div>\\n      <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n        <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n        <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n        <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n      </div>\\n    </div>\\n  }\\n</div>\\n\", styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-container::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;color:var(--mat-sort-arrow-color);opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\"], animations: [\n            matSortAnimations.indicator,\n            matSortAnimations.leftPointer,\n            matSortAnimations.rightPointer,\n            matSortAnimations.arrowOpacity,\n            matSortAnimations.arrowPosition,\n            matSortAnimations.allowChildren,\n        ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSortHeader, decorators: [{\n            type: Component,\n            args: [{ selector: '[mat-sort-header]', exportAs: 'matSortHeader', host: {\n                        'class': 'mat-sort-header',\n                        '(click)': '_handleClick()',\n                        '(keydown)': '_handleKeydown($event)',\n                        '(mouseenter)': '_setIndicatorHintVisible(true)',\n                        '(mouseleave)': '_setIndicatorHintVisible(false)',\n                        '[attr.aria-sort]': '_getAriaSortAttribute()',\n                        '[class.mat-sort-header-disabled]': '_isDisabled()',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        matSortAnimations.indicator,\n                        matSortAnimations.leftPointer,\n                        matSortAnimations.rightPointer,\n                        matSortAnimations.arrowOpacity,\n                        matSortAnimations.arrowPosition,\n                        matSortAnimations.allowChildren,\n                    ], standalone: true, template: \"<!--\\n  We set the `tabindex` on an element inside the table header, rather than the header itself,\\n  because of a bug in NVDA where having a `tabindex` on a `th` breaks keyboard navigation in the\\n  table (see https://github.com/nvaccess/nvda/issues/7718). This allows for the header to both\\n  be focusable, and have screen readers read out its `aria-sort` state. We prefer this approach\\n  over having a button with an `aria-label` inside the header, because the button's `aria-label`\\n  will be read out as the user is navigating the table's cell (see #13012).\\n\\n  The approach is based off of: https://dequeuniversity.com/library/aria/tables/sf-sortable-grid\\n-->\\n<div class=\\\"mat-sort-header-container mat-focus-indicator\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition === 'before'\\\"\\n     [attr.tabindex]=\\\"_isDisabled() ? null : 0\\\"\\n     [attr.role]=\\\"_isDisabled() ? null : 'button'\\\">\\n\\n  <!--\\n    TODO(crisbeto): this div isn't strictly necessary, but we have to keep it due to a large\\n    number of screenshot diff failures. It should be removed eventually. Note that the difference\\n    isn't visible with a shorter header, but once it breaks up into multiple lines, this element\\n    causes it to be center-aligned, whereas removing it will keep the text to the left.\\n  -->\\n  <div class=\\\"mat-sort-header-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  @if (_renderArrow()) {\\n    <div class=\\\"mat-sort-header-arrow\\\"\\n        [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n        [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n        [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n        (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n        (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n      <div class=\\\"mat-sort-header-stem\\\"></div>\\n      <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n        <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n        <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n        <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n      </div>\\n    </div>\\n  }\\n</div>\\n\", styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-container::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;color:var(--mat-sort-arrow-color);opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\"] }]\n        }], ctorParameters: () => [{ type: MatSortHeaderIntl }, { type: i0.ChangeDetectorRef }, { type: MatSort, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: ['MAT_SORT_HEADER_COLUMN_DEF']\n                }, {\n                    type: Optional\n                }] }, { type: i3.FocusMonitor }, { type: i0.ElementRef }, { type: i3.AriaDescriber, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_SORT_DEFAULT_OPTIONS]\n                }] }], propDecorators: { id: [{\n                type: Input,\n                args: ['mat-sort-header']\n            }], arrowPosition: [{\n                type: Input\n            }], start: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], sortActionDescription: [{\n                type: Input\n            }], disableClear: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n\nclass MatSortModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSortModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSortModule, imports: [MatCommonModule, MatSort, MatSortHeader], exports: [MatSort, MatSortHeader] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSortModule, providers: [MAT_SORT_HEADER_INTL_PROVIDER], imports: [MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSortModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, MatSort, MatSortHeader],\n                    exports: [MatSort, MatSortHeader],\n                    providers: [MAT_SORT_HEADER_INTL_PROVIDER],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SORT_DEFAULT_OPTIONS, MAT_SORT_HEADER_INTL_PROVIDER, MAT_SORT_HEADER_INTL_PROVIDER_FACTORY, MatSort, MatSortHeader, MatSortHeaderIntl, MatSortModule, matSortAnimations };\n"],"names":["CommonModule","FormsModule","ReactiveFormsModule","Validators","MatDialogModule","MAT_DIALOG_DATA","MatFormFieldModule","MatInputModule","MatSelectModule","MatButtonModule","MatDatepickerModule","MatNativeDateModule","MatChipsModule","MatIconModule","CategoriaUtils","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","fondo_r2","_id","ɵɵadvance","ɵɵtextInterpolate2","nombre","ɵɵpipeBind1","tipo","ɵɵtextInterpolate1","ɵɵpipeBind4","saldoActual","ctx_r2","obtenerNombreFondoPreseleccionado","fondo_r4","ɵɵtemplate","TransaccionDialogComponent_div_14_mat_option_5_Template","TransaccionDialogComponent_div_14_mat_error_6_Template","fondosDisponiblesDestino","tmp_3_0","transaccionForm","get","hasError","obtenerNombreFondoOrigen","categoria_r5","formatearCategoria","TransaccionDialogComponent","constructor","fb","dialogRef","data","transaccionService","guardando","categoriasFiltradasPorTipo","group","fondoId","required","fondoDestinoId","categoria","descripcion","minLength","monto","min","fecha","Date","ngOnInit","transaccion","patchValue","onTipoChange","fondoPreseleccionado","console","log","valueChanges","subscribe","esTransferencia","actualizarFondosDestino","value","obtenerCategoriasPorTipo","setValidators","setValue","clearValidators","updateValueAndValidity","categoriaActual","includes","fondo","fondos","find","f","fondoOrigenId","filter","fondoDestinoActual","onSave","invalid","formData","transferenciaData","Number","notas","close","action","transaccionData","onCancel","ɵɵdirectiveInject","i1","FormBuilder","i2","MatDialogRef","i3","TransaccionService","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","TransaccionDialogComponent_Template","rf","ctx","TransaccionDialogComponent_mat_option_11_Template","TransaccionDialogComponent_mat_error_12_Template","TransaccionDialogComponent_mat_hint_13_Template","TransaccionDialogComponent_div_14_Template","ɵɵlistener","TransaccionDialogComponent_Template_mat_select_selectionChange_19_listener","ɵɵrestoreView","_r1","ɵɵresetView","TransaccionDialogComponent_mat_error_32_Template","TransaccionDialogComponent_mat_option_37_Template","TransaccionDialogComponent_mat_error_38_Template","ɵɵelement","TransaccionDialogComponent_mat_error_44_Template","TransaccionDialogComponent_mat_error_52_Template","TransaccionDialogComponent_mat_error_53_Template","TransaccionDialogComponent_Template_button_click_62_listener","TransaccionDialogComponent_Template_button_click_64_listener","ɵɵtextInterpolate","tmp_5_0","tmp_8_0","tmp_10_0","tmp_11_0","tmp_12_0","tmp_13_0","fechaPicker_r6","i4","NgForOf","NgIf","TitleCasePipe","CurrencyPipe","ɵNgNoValidate","DefaultValueAccessor","NumberValueAccessor","NgControlStatus","NgControlStatusGroup","MinValidator","FormGroupDirective","FormControlName","MatDialogTitle","MatDialogActions","MatDialogContent","i5","MatFormField","MatLabel","MatHint","MatError","MatPrefix","MatSuffix","i6","MatInput","i7","MatSelect","i8","MatOption","i9","MatButton","i10","MatDatepicker","MatDatepickerInput","MatDatepickerToggle","i11","MatIcon","styles","MatTableModule","MatTableDataSource","MatPaginatorModule","MatPaginator","MatSortModule","MatSort","MatCardModule","MatSnackBarModule","MatProgressSpinnerModule","Subject","debounceTime","distinctUntilChanged","takeUntil","fondo_r1","categoria_r2","TransaccionesComponent_button_53_Template_button_click_0_listener","_r4","ɵɵnextContext","debugFiltros","ɵɵpipeBind2","transaccion_r5","transaccion_r6","etiqueta_r7","TransaccionesComponent_div_57_td_7_div_5_span_1_Template","etiquetas","TransaccionesComponent_div_57_td_7_small_4_Template","TransaccionesComponent_div_57_td_7_div_5_Template","length","obtenerNombreFondo","transaccion_r8","transaccion_r9","ɵɵpureFunction3","_c0","transaccion_r10","_c1","transaccion_r11","TransaccionesComponent_div_57_td_22_Template_button_click_1_listener","transaccion_r13","_r12","$implicit","editarTransaccion","TransaccionesComponent_div_57_td_22_Template_button_click_4_listener","eliminarTransaccion","ɵɵpureFunction2","_c2","row_r14","TransaccionesComponent_div_57_div_25_Template_button_click_7_listener","_r15","abrirDialogoTransaccion","filtrosAplicados","ɵɵelementContainerStart","TransaccionesComponent_div_57_th_3_Template","TransaccionesComponent_div_57_td_4_Template","TransaccionesComponent_div_57_th_6_Template","TransaccionesComponent_div_57_td_7_Template","TransaccionesComponent_div_57_th_9_Template","TransaccionesComponent_div_57_td_10_Template","TransaccionesComponent_div_57_th_12_Template","TransaccionesComponent_div_57_td_13_Template","TransaccionesComponent_div_57_th_15_Template","TransaccionesComponent_div_57_td_16_Template","TransaccionesComponent_div_57_th_18_Template","TransaccionesComponent_div_57_td_19_Template","TransaccionesComponent_div_57_th_21_Template","TransaccionesComponent_div_57_td_22_Template","TransaccionesComponent_div_57_tr_23_Template","TransaccionesComponent_div_57_tr_24_Template","TransaccionesComponent_div_57_div_25_Template","dataSource","displayedColumns","TransaccionesComponent_mat_paginator_58_Template_mat_paginator_page_0_listener","$event","_r16","onPageChange","ɵɵpureFunction0","_c3","pageSize","currentPage","totalTransacciones","TransaccionesComponent","fondoService","dialog","notificationService","destroy$","categorias","transacciones","loading","totalIngresos","totalGastos","balance","totalTransferencias","filtrosForm","busqueda","crearTransferencia","fondoOrigen","fondoDestino","error","warning","toLocaleString","pipe","next","response","success","cargarTransacciones","cargarDatosIniciales","message","configurarFiltrosBusqueda","setTimeout","ngOnDestroy","complete","ngAfterViewInit","paginator","sort","aplicarFiltros","emitEvent","obtenerFondos","fondos$","obtenerCategorias","filtros","construirFiltros","obtenerTransacciones","total","calcularEstadisticas","forEach","t","formValues","page","limit","Object","keys","reduce","sum","transferencias","limpiarFiltros","reset","event","pageIndex","open","width","maxWidth","afterClosed","result","actualizarTransaccion","crearTransaccion","id","confirm","_fondoNombre","cargarFondosSincrono","substring","obtenerCategoriasFiltradas","tipoSeleccionado","map","slice","desc","cache","localStorage","getItem","JSON","parse","e","warn","FondoService","MatDialog","NotificationService","viewQuery","TransaccionesComponent_Query","TransaccionesComponent_Template_button_click_6_listener","TransaccionesComponent_mat_option_18_Template","TransaccionesComponent_mat_option_39_Template","TransaccionesComponent_Template_button_click_45_listener","TransaccionesComponent_Template_button_click_49_listener","TransaccionesComponent_button_53_Template","TransaccionesComponent_div_56_Template","TransaccionesComponent_div_57_Template","TransaccionesComponent_mat_paginator_58_Template","NgClass","DatePipe","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","MatSortHeader","MatCard","MatCardContent","MatCardHeader","MatCardTitle","MatIconButton","i12","i13","i14","i15","i16","MatProgressSpinner","nombres","obtenerEmoji","emojis","obtenerNombre","obtenerInfoCategoria","emoji","completo","Injectable","Optional","SkipSelf","InjectionToken","numberAttribute","EventEmitter","booleanAttribute","Component","ChangeDetectionStrategy","ViewEncapsulation","Inject","Input","Output","NgModule","ReplaySubject","MatTooltip","MatTooltipModule","MatPaginator_Conditional_2_Conditional_3_For_3_Template","pageSizeOption_r3","MatPaginator_Conditional_2_Conditional_3_Template","ɵɵgetCurrentView","MatPaginator_Conditional_2_Conditional_3_Template_mat_select_selectionChange_1_listener","ctx_r1","_changePageSize","ɵɵrepeaterCreate","ɵɵrepeaterTrackByIdentity","_formFieldAppearance","color","disabled","_pageSizeLabelId","selectConfig","panelClass","disableOptionCentering","ɵɵrepeater","_displayedPageSizeOptions","MatPaginator_Conditional_2_Conditional_4_Template","MatPaginator_Conditional_2_Template","ɵɵattribute","_intl","itemsPerPageLabel","ɵɵconditional","MatPaginator_Conditional_6_Template","MatPaginator_Conditional_6_Template_button_click_0_listener","firstPage","ɵɵnamespaceSVG","firstPageLabel","_previousButtonsDisabled","MatPaginator_Conditional_13_Template","_r5","MatPaginator_Conditional_13_Template_button_click_0_listener","lastPage","lastPageLabel","_nextButtonsDisabled","MatPaginatorIntl","changes","nextPageLabel","previousPageLabel","getRangeLabel","Math","max","startIndex","endIndex","ɵfac","MatPaginatorIntl_Factory","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","type","args","MAT_PAGINATOR_INTL_PROVIDER_FACTORY","parentIntl","MAT_PAGINATOR_INTL_PROVIDER","provide","deps","useFactory","DEFAULT_PAGE_SIZE","PageEvent","MAT_PAGINATOR_DEFAULT_OPTIONS","nextUniqueId","_pageIndex","_changeDetectorRef","markForCheck","_length","_pageSize","_updateDisplayedPageSizeOptions","pageSizeOptions","_pageSizeOptions","p","defaults","_isInitialized","_initializedStream","hidePageSize","showFirstLastButtons","initialized","_intlChanges","formFieldAppearance","unsubscribe","nextPage","hasNextPage","previousPageIndex","_emitPageEvent","previousPage","hasPreviousPage","getNumberOfPages","maxPageIndex","ceil","floor","indexOf","push","a","b","emit","MatPaginator_Factory","ChangeDetectorRef","ɵcmp","ɵɵdefineComponent","hostAttrs","inputs","ɵɵInputFlags","HasDecoratorInputTransform","outputs","exportAs","ɵɵInputTransformsFeature","MatPaginator_Template","MatPaginator_Template_button_click_7_listener","ɵɵnamespaceHTML","MatPaginator_Template_button_click_10_listener","dependencies","encapsulation","changeDetection","selector","host","OnPush","None","imports","undefined","decorators","transform","MatPaginatorModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","providers","exports","Directive","SPACE","ENTER","merge","trigger","state","style","transition","animate","keyframes","query","animateChild","AnimationDurations","AnimationCurves","MatCommonModule","MatSortHeader_Conditional_3_Template","MatSortHeader_Conditional_3_Template_div_animation_arrowPosition_start_0_listener","_disableViewStateAnimation","MatSortHeader_Conditional_3_Template_div_animation_arrowPosition_done_0_listener","_getArrowViewState","_getArrowDirectionState","getSortDuplicateSortableIdError","Error","getSortHeaderNotContainedWithinSortError","getSortHeaderMissingIdError","getSortInvalidDirectionError","direction","MAT_SORT_DEFAULT_OPTIONS","_direction","_defaultOptions","sortables","Map","_stateChanges","start","sortChange","register","sortable","has","set","deregister","delete","active","getNextSortDirection","disableClear","sortDirectionCycle","getSortDirectionCycle","nextDirectionIndex","ngOnChanges","MatSort_Factory","ɵdir","ɵɵdefineDirective","ɵɵNgOnChangesFeature","alias","sortOrder","reverse","SORT_ANIMATION_TRANSITION","ENTERING","STANDARD_CURVE","matSortAnimations","indicator","leftPointer","rightPointer","arrowOpacity","opacity","arrowPosition","allowChildren","optional","MatSortHeaderIntl","MatSortHeaderIntl_Factory","MAT_SORT_HEADER_INTL_PROVIDER_FACTORY","MAT_SORT_HEADER_INTL_PROVIDER","sortActionDescription","_sortActionDescription","_updateSortActionDescription","_sort","_columnDef","_focusMonitor","_elementRef","_ariaDescriber","defaultOptions","_showIndicatorHint","_viewState","_arrowDirection","_handleStateChanges","name","_updateArrowDirection","_setAnimationTransitionState","toState","_isSorted","_sortButton","nativeElement","querySelector","monitor","origin","newState","_setIndicatorHintVisible","stopMonitoring","_rerenderSubscription","removeDescription","visible","_isDisabled","fromState","viewState","_toggleOnInteraction","_handleClick","_handleKeydown","keyCode","preventDefault","_getAriaSortAttribute","_renderArrow","newDescription","describe","MatSortHeader_Factory","FocusMonitor","ElementRef","AriaDescriber","hostVars","hostBindings","MatSortHeader_HostBindings","MatSortHeader_click_HostBindingHandler","MatSortHeader_keydown_HostBindingHandler","MatSortHeader_mouseenter_HostBindingHandler","MatSortHeader_mouseleave_HostBindingHandler","ɵɵclassProp","attrs","ngContentSelectors","MatSortHeader_Template","ɵɵprojectionDef","ɵɵprojection","animation","animations","MatSortModule_Factory"],"sourceRoot":"webpack:///","x_google_ignoreList":[3,4]}