{"version":3,"file":"src_app_features_fondos_fondos_component_ts.js","mappings":"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","sources":["./src/app/features/fondos/fondos.component.ts"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDialogModule, MatDialog } from '@angular/material/dialog';\nimport { MatSnackBarModule, MatSnackBar } from '@angular/material/snack-bar';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { FondoService } from '../../core/services/fondo.service';\nimport { Fondo, TipoFondo, CreateFondoDto, UpdateFondoDto } from '../../core/models/fondo.model';\nimport { NotificationService } from '../../core/services/notification.service';\n\n@Component({\n  selector: 'app-fondos',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatProgressBarModule,\n    MatChipsModule,\n    MatGridListModule,\n    MatTooltipModule\n  ],\n  template: `\n    <div class=\"fondos-container\">\n      <h2>Gestión de Fondos</h2>\n      \n      <button mat-raised-button color=\"primary\" (click)=\"abrirDialogoFondo()\">\n        <mat-icon>add</mat-icon>\n        Nuevo Fondo\n      </button>\n\n      <div *ngIf=\"mostrarFormulario\">\n        <mat-card>\n          <mat-card-header>\n            <mat-card-title>Nuevo Fondo</mat-card-title>\n          </mat-card-header>\n          <mat-card-content>\n            <form [formGroup]=\"fondoForm\" (ngSubmit)=\"guardarFondo()\">\n              <mat-form-field appearance=\"outline\">\n                <mat-label>Nombre del Fondo</mat-label>\n                <input matInput formControlName=\"nombre\">\n                <mat-error>El nombre es requerido</mat-error>\n              </mat-form-field>\n\n              <mat-form-field appearance=\"outline\">\n                <mat-label>Descripción</mat-label>\n                <textarea matInput formControlName=\"descripcion\" rows=\"3\"></textarea>\n              </mat-form-field>\n\n              <mat-form-field appearance=\"outline\">\n                <mat-label>Tipo de Fondo</mat-label>\n                <mat-select formControlName=\"tipo\">\n                  <mat-option value=\"registro\">Registro</mat-option>\n                  <mat-option value=\"ahorro\">Ahorro</mat-option>\n                  <mat-option value=\"prestamo\">Préstamo</mat-option>\n                </mat-select>\n              </mat-form-field>\n\n              <mat-form-field appearance=\"outline\">\n                <mat-label>Saldo Inicial</mat-label>\n                <input matInput type=\"number\" formControlName=\"saldoActual\">\n              </mat-form-field>\n\n              <div class=\"form-actions\">\n                <button mat-button type=\"button\" (click)=\"cancelarEdicion()\">\n                  Cancelar\n                </button>\n                <button mat-raised-button color=\"primary\" type=\"submit\">\n                  Crear Fondo\n                </button>\n              </div>\n            </form>\n          </mat-card-content>\n        </mat-card>\n      </div>\n\n      <div class=\"fondos-grid\">\n        <mat-card *ngFor=\"let fondo of fondos\">\n          <mat-card-header>\n            <mat-card-title>{{ fondo.nombre }}</mat-card-title>\n            <mat-card-subtitle>{{ fondo.tipo }}</mat-card-subtitle>\n          </mat-card-header>\n          \n          <mat-card-content>\n            <div>Saldo: {{ fondo.saldoActual | currency }}</div>\n            <div *ngIf=\"fondo.metaAhorro\">Meta: {{ fondo.metaAhorro | currency }}</div>\n          </mat-card-content>\n\n          <mat-card-actions>\n            <button mat-button (click)=\"editarFondo(fondo)\">\n              Editar\n            </button>\n            <button mat-button color=\"warn\" (click)=\"eliminarFondo(fondo)\">\n              Eliminar\n            </button>\n          </mat-card-actions>\n        </mat-card>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .fondos-container {\n      padding: 20px;\n    }\n    .fondos-grid {\n      display: grid;\n      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n      gap: 20px;\n      margin-top: 20px;\n    }\n    mat-form-field {\n      width: 100%;\n      margin-bottom: 16px;\n    }\n    .form-actions {\n      display: flex;\n      gap: 12px;\n      justify-content: flex-end;\n      margin-top: 20px;\n    }\n  `]\n})\nexport class FondosComponent implements OnInit, OnDestroy {\n  private destroy$ = new Subject<void>();\n  \n  fondos: Fondo[] = [];\n  fondoForm: FormGroup;\n  mostrarFormulario = false;\n  fondoEditando: Fondo | null = null;\n\n  constructor(\n    private fb: FormBuilder,\n    private fondoService: FondoService,\n    private notificationService: NotificationService\n  ) {\n    this.fondoForm = this.fb.group({\n      nombre: ['', [Validators.required]],\n      descripcion: [''],\n      tipo: ['registro', Validators.required],\n      saldoActual: [0, [Validators.required, Validators.min(0)]],\n      metaAhorro: [0]\n    });\n  }\n\n  ngOnInit(): void {\n    this.cargarFondos();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  cargarFondos(): void {\n    this.fondoService.obtenerFondos()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (fondos) => {\n          this.fondos = fondos;\n        },\n        error: (error) => {\n          this.notificationService.error('Error al cargar fondos');\n          this.fondos = [];\n        }\n      });\n  }\n\n  abrirDialogoFondo(): void {\n    this.mostrarFormulario = true;\n    this.fondoEditando = null;\n    this.fondoForm.reset({\n      tipo: 'registro',\n      saldoActual: 0,\n      metaAhorro: 0\n    });\n  }\n\n  editarFondo(fondo: Fondo): void {\n    this.mostrarFormulario = true;\n    this.fondoEditando = fondo;\n    \n    this.fondoForm.patchValue({\n      nombre: fondo.nombre,\n      descripcion: fondo.descripcion || '',\n      tipo: fondo.tipo,\n      saldoActual: fondo.saldoActual || 0,\n      metaAhorro: fondo.metaAhorro || 0\n    });\n  }\n\n  guardarFondo(): void {\n    if (this.fondoForm.invalid) return;\n\n    const fondoData = this.fondoForm.value;\n\n    if (this.fondoEditando) {\n      const updateData: UpdateFondoDto = {\n        nombre: fondoData.nombre,\n        descripcion: fondoData.descripcion,\n        tipo: fondoData.tipo,\n        metaAhorro: fondoData.metaAhorro || 0\n      };\n\n      this.fondoService.actualizarFondo(this.fondoEditando._id!, updateData)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: () => {\n            this.notificationService.success('Fondo actualizado');\n            this.cancelarEdicion();\n          },\n          error: () => {\n            this.notificationService.error('Error al actualizar');\n          }\n        });\n    } else {\n      const createData: CreateFondoDto = {\n        nombre: fondoData.nombre,\n        descripcion: fondoData.descripcion,\n        tipo: fondoData.tipo,\n        saldoActual: fondoData.saldoActual || 0,\n        metaAhorro: fondoData.metaAhorro || 0\n      };\n\n      this.fondoService.crearFondo(createData)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: () => {\n            this.notificationService.success('Fondo creado');\n            this.cancelarEdicion();\n          },\n          error: () => {\n            this.notificationService.error('Error al crear');\n          }\n        });\n    }\n  }\n\n  cancelarEdicion(): void {\n    this.mostrarFormulario = false;\n    this.fondoEditando = null;\n    this.fondoForm.reset();\n  }\n\n  eliminarFondo(fondo: Fondo): void {\n    const confirmacion = confirm('¿Eliminar este fondo?');\n    if (!confirmacion) return;\n\n    this.fondoService.eliminarFondo(fondo._id!)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: () => {\n          this.notificationService.success('Fondo eliminado');\n        },\n        error: () => {\n          this.notificationService.error('Error al eliminar');\n        }\n      });\n  }\n}\n"],"names":["CommonModule","FormsModule","ReactiveFormsModule","Validators","MatCardModule","MatButtonModule","MatIconModule","MatFormFieldModule","MatInputModule","MatSelectModule","MatDialogModule","MatSnackBarModule","MatProgressBarModule","MatChipsModule","MatGridListModule","MatTooltipModule","Subject","takeUntil","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","FondosComponent_div_7_Template_form_ngSubmit_6_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","guardarFondo","ɵɵelement","FondosComponent_div_7_Template_button_click_32_listener","cancelarEdicion","ɵɵadvance","ɵɵproperty","fondoForm","ɵɵtextInterpolate1","ɵɵpipeBind1","fondo_r4","metaAhorro","ɵɵtemplate","FondosComponent_mat_card_9_div_10_Template","FondosComponent_mat_card_9_Template_button_click_12_listener","_r3","$implicit","editarFondo","FondosComponent_mat_card_9_Template_button_click_14_listener","eliminarFondo","ɵɵtextInterpolate","nombre","tipo","saldoActual","FondosComponent","constructor","fb","fondoService","notificationService","destroy$","fondos","mostrarFormulario","fondoEditando","group","required","descripcion","min","ngOnInit","cargarFondos","ngOnDestroy","next","complete","obtenerFondos","pipe","subscribe","error","abrirDialogoFondo","reset","fondo","patchValue","invalid","fondoData","value","updateData","actualizarFondo","_id","success","createData","crearFondo","confirmacion","confirm","ɵɵdirectiveInject","i1","FormBuilder","i2","FondoService","i3","NotificationService","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","FondosComponent_Template","rf","ctx","FondosComponent_Template_button_click_3_listener","FondosComponent_div_7_Template","FondosComponent_mat_card_9_Template","i4","NgForOf","NgIf","CurrencyPipe","ɵNgNoValidate","DefaultValueAccessor","NumberValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","i5","MatCard","MatCardActions","MatCardContent","MatCardHeader","MatCardSubtitle","MatCardTitle","i6","MatButton","i7","MatIcon","i8","MatFormField","MatLabel","MatError","i9","MatInput","i10","MatSelect","i11","MatOption","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}