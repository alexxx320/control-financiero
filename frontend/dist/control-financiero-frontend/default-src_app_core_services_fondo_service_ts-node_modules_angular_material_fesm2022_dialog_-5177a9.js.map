{"version":3,"file":"default-src_app_core_services_fondo_service_ts-node_modules_angular_material_fesm2022_dialog_-5177a9.js","mappings":"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","sources":["./src/app/core/services/fondo.service.ts","./node_modules/@angular/cdk/fesm2022/dialog.mjs","./node_modules/@angular/material/fesm2022/dialog.mjs","./node_modules/@angular/material/fesm2022/tooltip.mjs"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, BehaviorSubject, throwError } from 'rxjs';\nimport { tap, catchError } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\nimport { Fondo, CreateFondoDto, UpdateFondoDto, TipoFondo } from '../models/fondo.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FondoService {\n  private apiUrl = `${environment.apiUrl}/fondos`;\n  private fondosSubject = new BehaviorSubject<Fondo[]>([]);\n  public fondos$ = this.fondosSubject.asObservable();\n\n  constructor(private http: HttpClient) {}\n\n  obtenerFondos(tipo?: string): Observable<Fondo[]> {\n    console.log('🏦 Obteniendo fondos del backend...');\n    \n    let params = new HttpParams();\n    if (tipo) {\n      params = params.set('tipo', tipo);\n    }\n\n    return this.http.get<Fondo[]>(this.apiUrl, { params })\n      .pipe(\n        tap(fondos => {\n          console.log('✅ Fondos obtenidos exitosamente:', fondos);\n          this.fondosSubject.next(fondos);\n          \n          // Guardar en localStorage para que transacciones los puedan usar\n          localStorage.setItem('fondos_cache', JSON.stringify(fondos));\n        }),\n        catchError(error => {\n          console.error('❌ Error al obtener fondos - NO se usarán datos simulados:', error);\n          \n          let mensaje = 'Error al cargar fondos';\n          if (error.status === 0) {\n            mensaje = 'No se puede conectar con el servidor. Verifica que el backend esté ejecutándose.';\n          } else if (error.status === 401) {\n            mensaje = 'No autorizado. Tu sesión puede haber expirado.';\n          } else if (error.status === 500) {\n            mensaje = 'Error del servidor. Verifica que MongoDB esté ejecutándose.';\n          }\n          \n          return throwError(() => ({\n            ...error,\n            message: mensaje\n          }));\n        })\n      );\n  }\n\n  obtenerFondoPorId(id: string): Observable<Fondo> {\n    return this.http.get<Fondo>(`${this.apiUrl}/${id}`)\n      .pipe(\n        catchError(error => {\n          console.error('Error al obtener fondo:', error);\n          throw error;\n        })\n      );\n  }\n\n  crearFondo(fondo: CreateFondoDto): Observable<Fondo> {\n    console.log('💾 Creando nuevo fondo:', fondo);\n    \n    return this.http.post<Fondo>(this.apiUrl, fondo)\n      .pipe(\n        tap(nuevoFondo => {\n          console.log('✅ Fondo creado exitosamente:', nuevoFondo);\n          const fondosActuales = this.fondosSubject.value;\n          this.fondosSubject.next([...fondosActuales, nuevoFondo]);\n        }),\n        catchError(error => {\n          console.error('❌ Error al crear fondo:', error);\n          \n          let mensaje = 'Error al crear el fondo';\n          if (error.status === 400) {\n            mensaje = error.error?.message || 'Datos del fondo inválidos';\n          } else if (error.status === 401) {\n            mensaje = 'No autorizado para crear fondos';\n          } else if (error.status === 500) {\n            mensaje = 'Error del servidor. Verifica que MongoDB esté ejecutándose.';\n          }\n          \n          return throwError(() => ({\n            ...error,\n            message: mensaje\n          }));\n        })\n      );\n  }\n\n  actualizarFondo(id: string, fondo: UpdateFondoDto): Observable<Fondo> {\n    console.log('✏️ Actualizando fondo:', id, fondo);\n    \n    return this.http.patch<Fondo>(`${this.apiUrl}/${id}`, fondo)\n      .pipe(\n        tap(fondoActualizado => {\n          console.log('✅ Fondo actualizado exitosamente:', fondoActualizado);\n          const fondosActuales = this.fondosSubject.value;\n          const index = fondosActuales.findIndex(f => f._id === id);\n          if (index !== -1) {\n            fondosActuales[index] = fondoActualizado;\n            this.fondosSubject.next([...fondosActuales]);\n          }\n        }),\n        catchError(error => {\n          console.error('❌ Error al actualizar fondo:', error);\n          \n          let mensaje = 'Error al actualizar el fondo';\n          if (error.status === 400) {\n            mensaje = error.error?.message || 'Datos del fondo inválidos';\n          } else if (error.status === 404) {\n            mensaje = 'Fondo no encontrado';\n          } else if (error.status === 401) {\n            mensaje = 'No autorizado para editar este fondo';\n          }\n          \n          return throwError(() => ({\n            ...error,\n            message: mensaje\n          }));\n        })\n      );\n  }\n\n  eliminarFondo(id: string): Observable<{message: string}> {\n    console.log('🗑️ Eliminando fondo:', id);\n    \n    return this.http.delete<{message: string}>(`${this.apiUrl}/${id}`)\n      .pipe(\n        tap(response => {\n          console.log('✅ Fondo eliminado exitosamente:', response);\n          const fondosActuales = this.fondosSubject.value;\n          const fondosFiltrados = fondosActuales.filter(f => f._id !== id);\n          this.fondosSubject.next(fondosFiltrados);\n        }),\n        catchError(error => {\n          console.error('❌ Error al eliminar fondo:', error);\n          \n          let mensaje = 'Error al eliminar el fondo';\n          if (error.status === 404) {\n            mensaje = 'Fondo no encontrado';\n          } else if (error.status === 401) {\n            mensaje = 'No autorizado para eliminar este fondo';\n          }\n          \n          return throwError(() => ({\n            ...error,\n            message: mensaje\n          }));\n        })\n      );\n  }\n\n  obtenerEstadisticasFondo(id: string): Observable<{\n    totalTransacciones: number;\n    totalIngresos: number;\n    totalGastos: number;\n    balance: number;\n    progresoMeta: number;\n    transaccionesRecientes: any[];\n  }> {\n    return this.http.get<{\n      totalTransacciones: number;\n      totalIngresos: number;\n      totalGastos: number;\n      balance: number;\n      progresoMeta: number;\n      transaccionesRecientes: any[];\n    }>(`${this.apiUrl}/${id}/estadisticas`)\n      .pipe(\n        catchError(error => {\n          console.error('Error al obtener estadísticas:', error);\n          throw error;\n        })\n      );\n  }\n\n  obtenerEstadisticasGenerales(): Observable<{\n    totalFondos: number;\n    fondosConMetas: number;\n    metaPromedioAhorro: number;\n  }> {\n    return this.http.get<{\n      totalFondos: number;\n      fondosConMetas: number;\n      metaPromedioAhorro: number;\n    }>(`${this.apiUrl}/estadisticas`)\n      .pipe(\n        catchError(error => {\n          console.error('Error al obtener estadísticas generales:', error);\n          throw error;\n        })\n      );\n  }\n\n  // 🔧 MODIFICADO: Tres tipos de fondo\n  obtenerTiposFondo(): TipoFondo[] {\n    return ['registro', 'ahorro', 'prestamo'];\n  }\n}\n","import * as i1 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayConfig, OverlayRef, OverlayModule } from '@angular/cdk/overlay';\nimport { Platform, _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, ChangeDetectorRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, ViewChild, InjectionToken, Injector, TemplateRef, Injectable, SkipSelf, NgModule } from '@angular/core';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Subject, defer, of } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { startWith } from 'rxjs/operators';\n\n/** Configuration for opening a modal dialog. */\nclass DialogConfig {\n    constructor() {\n        /** The ARIA role of the dialog element. */\n        this.role = 'dialog';\n        /** Optional CSS class or classes applied to the overlay panel. */\n        this.panelClass = '';\n        /** Whether the dialog has a backdrop. */\n        this.hasBackdrop = true;\n        /** Optional CSS class or classes applied to the overlay backdrop. */\n        this.backdropClass = '';\n        /** Whether the dialog closes with the escape key or pointer events outside the panel element. */\n        this.disableClose = false;\n        /** Width of the dialog. */\n        this.width = '';\n        /** Height of the dialog. */\n        this.height = '';\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** ID of the element that describes the dialog. */\n        this.ariaDescribedBy = null;\n        /** ID of the element that labels the dialog. */\n        this.ariaLabelledBy = null;\n        /** Dialog label applied via `aria-label` */\n        this.ariaLabel = null;\n        /** Whether this is a modal dialog. Used to set the `aria-modal` attribute. */\n        this.ariaModal = true;\n        /**\n         * Where the dialog should focus on open.\n         * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or\n         * AutoFocusTarget instead.\n         */\n        this.autoFocus = 'first-tabbable';\n        /**\n         * Whether the dialog should restore focus to the previously-focused element upon closing.\n         * Has the following behavior based on the type that is passed in:\n         * - `boolean` - when true, will return focus to the element that was focused before the dialog\n         *    was opened, otherwise won't restore focus at all.\n         * - `string` - focus will be restored to the first element that matches the CSS selector.\n         * - `HTMLElement` - focus will be restored to the specific element.\n         */\n        this.restoreFocus = true;\n        /**\n         * Whether the dialog should close when the user navigates backwards or forwards through browser\n         * history. This does not apply to navigation via anchor element unless using URL-hash based\n         * routing (`HashLocationStrategy` in the Angular router).\n         */\n        this.closeOnNavigation = true;\n        /**\n         * Whether the dialog should close when the dialog service is destroyed. This is useful if\n         * another service is wrapping the dialog and is managing the destruction instead.\n         */\n        this.closeOnDestroy = true;\n        /**\n         * Whether the dialog should close when the underlying overlay is detached. This is useful if\n         * another service is wrapping the dialog and is managing the destruction instead. E.g. an\n         * external detachment can happen as a result of a scroll strategy triggering it or when the\n         * browser location changes.\n         */\n        this.closeOnOverlayDetachments = true;\n    }\n}\n\nfunction throwDialogContentAlreadyAttachedError() {\n    throw Error('Attempting to attach dialog content after content is already attached');\n}\n/**\n * Internal component that wraps user-provided dialog content.\n * @docs-private\n */\nclass CdkDialogContainer extends BasePortalOutlet {\n    constructor(_elementRef, _focusTrapFactory, _document, _config, _interactivityChecker, _ngZone, _overlayRef, _focusMonitor) {\n        super();\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._config = _config;\n        this._interactivityChecker = _interactivityChecker;\n        this._ngZone = _ngZone;\n        this._overlayRef = _overlayRef;\n        this._focusMonitor = _focusMonitor;\n        this._platform = inject(Platform);\n        /** The class that traps and manages focus within the dialog. */\n        this._focusTrap = null;\n        /** Element that was focused before the dialog was opened. Save this to restore upon close. */\n        this._elementFocusedBeforeDialogWasOpened = null;\n        /**\n         * Type of interaction that led to the dialog being closed. This is used to determine\n         * whether the focus style will be applied when returning focus to its original location\n         * after the dialog is closed.\n         */\n        this._closeInteractionType = null;\n        /**\n         * Queue of the IDs of the dialog's label element, based on their definition order. The first\n         * ID will be used as the `aria-labelledby` value. We use a queue here to handle the case\n         * where there are two or more titles in the DOM at a time and the first one is destroyed while\n         * the rest are present.\n         */\n        this._ariaLabelledByQueue = [];\n        this._changeDetectorRef = inject(ChangeDetectorRef);\n        /**\n         * Attaches a DOM portal to the dialog container.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throwDialogContentAlreadyAttachedError();\n            }\n            const result = this._portalOutlet.attachDomPortal(portal);\n            this._contentAttached();\n            return result;\n        };\n        this._document = _document;\n        if (this._config.ariaLabelledBy) {\n            this._ariaLabelledByQueue.push(this._config.ariaLabelledBy);\n        }\n    }\n    _addAriaLabelledBy(id) {\n        this._ariaLabelledByQueue.push(id);\n        this._changeDetectorRef.markForCheck();\n    }\n    _removeAriaLabelledBy(id) {\n        const index = this._ariaLabelledByQueue.indexOf(id);\n        if (index > -1) {\n            this._ariaLabelledByQueue.splice(index, 1);\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    _contentAttached() {\n        this._initializeFocusTrap();\n        this._handleBackdropClicks();\n        this._captureInitialFocus();\n    }\n    /**\n     * Can be used by child classes to customize the initial focus\n     * capturing behavior (e.g. if it's tied to an animation).\n     */\n    _captureInitialFocus() {\n        this._trapFocus();\n    }\n    ngOnDestroy() {\n        this._restoreFocus();\n    }\n    /**\n     * Attach a ComponentPortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    attachComponentPortal(portal) {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwDialogContentAlreadyAttachedError();\n        }\n        const result = this._portalOutlet.attachComponentPortal(portal);\n        this._contentAttached();\n        return result;\n    }\n    /**\n     * Attach a TemplatePortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    attachTemplatePortal(portal) {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwDialogContentAlreadyAttachedError();\n        }\n        const result = this._portalOutlet.attachTemplatePortal(portal);\n        this._contentAttached();\n        return result;\n    }\n    // TODO(crisbeto): this shouldn't be exposed, but there are internal references to it.\n    /** Captures focus if it isn't already inside the dialog. */\n    _recaptureFocus() {\n        if (!this._containsFocus()) {\n            this._trapFocus();\n        }\n    }\n    /**\n     * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n     * attribute to forcefully focus it. The attribute is removed after focus is moved.\n     * @param element The element to focus.\n     */\n    _forceFocus(element, options) {\n        if (!this._interactivityChecker.isFocusable(element)) {\n            element.tabIndex = -1;\n            // The tabindex attribute should be removed to avoid navigating to that element again\n            this._ngZone.runOutsideAngular(() => {\n                const callback = () => {\n                    element.removeEventListener('blur', callback);\n                    element.removeEventListener('mousedown', callback);\n                    element.removeAttribute('tabindex');\n                };\n                element.addEventListener('blur', callback);\n                element.addEventListener('mousedown', callback);\n            });\n        }\n        element.focus(options);\n    }\n    /**\n     * Focuses the first element that matches the given selector within the focus trap.\n     * @param selector The CSS selector for the element to set focus to.\n     */\n    _focusByCssSelector(selector, options) {\n        let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n        if (elementToFocus) {\n            this._forceFocus(elementToFocus, options);\n        }\n    }\n    /**\n     * Moves the focus inside the focus trap. When autoFocus is not set to 'dialog', if focus\n     * cannot be moved then focus will go to the dialog container.\n     */\n    _trapFocus() {\n        const element = this._elementRef.nativeElement;\n        // If were to attempt to focus immediately, then the content of the dialog would not yet be\n        // ready in instances where change detection has to run first. To deal with this, we simply\n        // wait for the microtask queue to be empty when setting focus when autoFocus isn't set to\n        // dialog. If the element inside the dialog can't be focused, then the container is focused\n        // so the user can't tab into other elements behind it.\n        switch (this._config.autoFocus) {\n            case false:\n            case 'dialog':\n                // Ensure that focus is on the dialog container. It's possible that a different\n                // component tried to move focus while the open animation was running. See:\n                // https://github.com/angular/components/issues/16215. Note that we only want to do this\n                // if the focus isn't inside the dialog already, because it's possible that the consumer\n                // turned off `autoFocus` in order to move focus themselves.\n                if (!this._containsFocus()) {\n                    element.focus();\n                }\n                break;\n            case true:\n            case 'first-tabbable':\n                this._focusTrap?.focusInitialElementWhenReady().then(focusedSuccessfully => {\n                    // If we weren't able to find a focusable element in the dialog, then focus the dialog\n                    // container instead.\n                    if (!focusedSuccessfully) {\n                        this._focusDialogContainer();\n                    }\n                });\n                break;\n            case 'first-heading':\n                this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n                break;\n            default:\n                this._focusByCssSelector(this._config.autoFocus);\n                break;\n        }\n    }\n    /** Restores focus to the element that was focused before the dialog opened. */\n    _restoreFocus() {\n        const focusConfig = this._config.restoreFocus;\n        let focusTargetElement = null;\n        if (typeof focusConfig === 'string') {\n            focusTargetElement = this._document.querySelector(focusConfig);\n        }\n        else if (typeof focusConfig === 'boolean') {\n            focusTargetElement = focusConfig ? this._elementFocusedBeforeDialogWasOpened : null;\n        }\n        else if (focusConfig) {\n            focusTargetElement = focusConfig;\n        }\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (this._config.restoreFocus &&\n            focusTargetElement &&\n            typeof focusTargetElement.focus === 'function') {\n            const activeElement = _getFocusedElementPierceShadowDom();\n            const element = this._elementRef.nativeElement;\n            // Make sure that focus is still inside the dialog or is on the body (usually because a\n            // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n            // the consumer moved it themselves before the animation was done, in which case we shouldn't\n            // do anything.\n            if (!activeElement ||\n                activeElement === this._document.body ||\n                activeElement === element ||\n                element.contains(activeElement)) {\n                if (this._focusMonitor) {\n                    this._focusMonitor.focusVia(focusTargetElement, this._closeInteractionType);\n                    this._closeInteractionType = null;\n                }\n                else {\n                    focusTargetElement.focus();\n                }\n            }\n        }\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    }\n    /** Focuses the dialog container. */\n    _focusDialogContainer() {\n        // Note that there is no focus method when rendering on the server.\n        if (this._elementRef.nativeElement.focus) {\n            this._elementRef.nativeElement.focus();\n        }\n    }\n    /** Returns whether focus is inside the dialog. */\n    _containsFocus() {\n        const element = this._elementRef.nativeElement;\n        const activeElement = _getFocusedElementPierceShadowDom();\n        return element === activeElement || element.contains(activeElement);\n    }\n    /** Sets up the focus trap. */\n    _initializeFocusTrap() {\n        if (this._platform.isBrowser) {\n            this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n            // Save the previously focused element. This element will be re-focused\n            // when the dialog closes.\n            if (this._document) {\n                this._elementFocusedBeforeDialogWasOpened = _getFocusedElementPierceShadowDom();\n            }\n        }\n    }\n    /** Sets up the listener that handles clicks on the dialog backdrop. */\n    _handleBackdropClicks() {\n        // Clicking on the backdrop will move focus out of dialog.\n        // Recapture it if closing via the backdrop is disabled.\n        this._overlayRef.backdropClick().subscribe(() => {\n            if (this._config.disableClose) {\n                this._recaptureFocus();\n            }\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: CdkDialogContainer, deps: [{ token: i0.ElementRef }, { token: i1.FocusTrapFactory }, { token: DOCUMENT, optional: true }, { token: DialogConfig }, { token: i1.InteractivityChecker }, { token: i0.NgZone }, { token: i1$1.OverlayRef }, { token: i1.FocusMonitor }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.0\", type: CdkDialogContainer, isStandalone: true, selector: \"cdk-dialog-container\", host: { attributes: { \"tabindex\": \"-1\" }, properties: { \"attr.id\": \"_config.id || null\", \"attr.role\": \"_config.role\", \"attr.aria-modal\": \"_config.ariaModal\", \"attr.aria-labelledby\": \"_config.ariaLabel ? null : _ariaLabelledByQueue[0]\", \"attr.aria-label\": \"_config.ariaLabel\", \"attr.aria-describedby\": \"_config.ariaDescribedBy || null\" }, classAttribute: \"cdk-dialog-container\" }, viewQueries: [{ propertyName: \"_portalOutlet\", first: true, predicate: CdkPortalOutlet, descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<ng-template cdkPortalOutlet />\\n\", styles: [\".cdk-dialog-container{display:block;width:100%;height:100%;min-height:inherit;max-height:inherit}\"], dependencies: [{ kind: \"directive\", type: CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: CdkDialogContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'cdk-dialog-container', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, standalone: true, imports: [CdkPortalOutlet], host: {\n                        'class': 'cdk-dialog-container',\n                        'tabindex': '-1',\n                        '[attr.id]': '_config.id || null',\n                        '[attr.role]': '_config.role',\n                        '[attr.aria-modal]': '_config.ariaModal',\n                        '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledByQueue[0]',\n                        '[attr.aria-label]': '_config.ariaLabel',\n                        '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n                    }, template: \"<ng-template cdkPortalOutlet />\\n\", styles: [\".cdk-dialog-container{display:block;width:100%;height:100%;min-height:inherit;max-height:inherit}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i1.FocusTrapFactory }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DialogConfig]\n                }] }, { type: i1.InteractivityChecker }, { type: i0.NgZone }, { type: i1$1.OverlayRef }, { type: i1.FocusMonitor }], propDecorators: { _portalOutlet: [{\n                type: ViewChild,\n                args: [CdkPortalOutlet, { static: true }]\n            }] } });\n\n/**\n * Reference to a dialog opened via the Dialog service.\n */\nclass DialogRef {\n    constructor(overlayRef, config) {\n        this.overlayRef = overlayRef;\n        this.config = config;\n        /** Emits when the dialog has been closed. */\n        this.closed = new Subject();\n        this.disableClose = config.disableClose;\n        this.backdropClick = overlayRef.backdropClick();\n        this.keydownEvents = overlayRef.keydownEvents();\n        this.outsidePointerEvents = overlayRef.outsidePointerEvents();\n        this.id = config.id; // By the time the dialog is created we are guaranteed to have an ID.\n        this.keydownEvents.subscribe(event => {\n            if (event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)) {\n                event.preventDefault();\n                this.close(undefined, { focusOrigin: 'keyboard' });\n            }\n        });\n        this.backdropClick.subscribe(() => {\n            if (!this.disableClose) {\n                this.close(undefined, { focusOrigin: 'mouse' });\n            }\n        });\n        this._detachSubscription = overlayRef.detachments().subscribe(() => {\n            // Check specifically for `false`, because we want `undefined` to be treated like `true`.\n            if (config.closeOnOverlayDetachments !== false) {\n                this.close();\n            }\n        });\n    }\n    /**\n     * Close the dialog.\n     * @param result Optional result to return to the dialog opener.\n     * @param options Additional options to customize the closing behavior.\n     */\n    close(result, options) {\n        if (this.containerInstance) {\n            const closedSubject = this.closed;\n            this.containerInstance._closeInteractionType = options?.focusOrigin || 'program';\n            // Drop the detach subscription first since it can be triggered by the\n            // `dispose` call and override the result of this closing sequence.\n            this._detachSubscription.unsubscribe();\n            this.overlayRef.dispose();\n            closedSubject.next(result);\n            closedSubject.complete();\n            this.componentInstance = this.containerInstance = null;\n        }\n    }\n    /** Updates the position of the dialog based on the current position strategy. */\n    updatePosition() {\n        this.overlayRef.updatePosition();\n        return this;\n    }\n    /**\n     * Updates the dialog's width and height.\n     * @param width New width of the dialog.\n     * @param height New height of the dialog.\n     */\n    updateSize(width = '', height = '') {\n        this.overlayRef.updateSize({ width, height });\n        return this;\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        this.overlayRef.addPanelClass(classes);\n        return this;\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        this.overlayRef.removePanelClass(classes);\n        return this;\n    }\n}\n\n/** Injection token for the Dialog's ScrollStrategy. */\nconst DIALOG_SCROLL_STRATEGY = new InjectionToken('DialogScrollStrategy', {\n    providedIn: 'root',\n    factory: () => {\n        const overlay = inject(Overlay);\n        return () => overlay.scrollStrategies.block();\n    },\n});\n/** Injection token for the Dialog's Data. */\nconst DIALOG_DATA = new InjectionToken('DialogData');\n/** Injection token that can be used to provide default options for the dialog module. */\nconst DEFAULT_DIALOG_CONFIG = new InjectionToken('DefaultDialogConfig');\n/**\n * @docs-private\n * @deprecated No longer used. To be removed.\n * @breaking-change 19.0.0\n */\nfunction DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.block();\n}\n/**\n * @docs-private\n * @deprecated No longer used. To be removed.\n * @breaking-change 19.0.0\n */\nconst DIALOG_SCROLL_STRATEGY_PROVIDER = {\n    provide: DIALOG_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n/** Unique id for the created dialog. */\nlet uniqueId = 0;\nclass Dialog {\n    /** Keeps track of the currently-open dialogs. */\n    get openDialogs() {\n        return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n    }\n    /** Stream that emits when a dialog has been opened. */\n    get afterOpened() {\n        return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n    }\n    constructor(_overlay, _injector, _defaultOptions, _parentDialog, _overlayContainer, scrollStrategy) {\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._defaultOptions = _defaultOptions;\n        this._parentDialog = _parentDialog;\n        this._overlayContainer = _overlayContainer;\n        this._openDialogsAtThisLevel = [];\n        this._afterAllClosedAtThisLevel = new Subject();\n        this._afterOpenedAtThisLevel = new Subject();\n        this._ariaHiddenElements = new Map();\n        /**\n         * Stream that emits when all open dialog have finished closing.\n         * Will emit on subscribe if there are no open dialogs to begin with.\n         */\n        this.afterAllClosed = defer(() => this.openDialogs.length\n            ? this._getAfterAllClosed()\n            : this._getAfterAllClosed().pipe(startWith(undefined)));\n        this._scrollStrategy = scrollStrategy;\n    }\n    open(componentOrTemplateRef, config) {\n        const defaults = (this._defaultOptions || new DialogConfig());\n        config = { ...defaults, ...config };\n        config.id = config.id || `cdk-dialog-${uniqueId++}`;\n        if (config.id &&\n            this.getDialogById(config.id) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n        }\n        const overlayConfig = this._getOverlayConfig(config);\n        const overlayRef = this._overlay.create(overlayConfig);\n        const dialogRef = new DialogRef(overlayRef, config);\n        const dialogContainer = this._attachContainer(overlayRef, dialogRef, config);\n        dialogRef.containerInstance = dialogContainer;\n        this._attachDialogContent(componentOrTemplateRef, dialogRef, dialogContainer, config);\n        // If this is the first dialog that we're opening, hide all the non-overlay content.\n        if (!this.openDialogs.length) {\n            this._hideNonDialogContentFromAssistiveTechnology();\n        }\n        this.openDialogs.push(dialogRef);\n        dialogRef.closed.subscribe(() => this._removeOpenDialog(dialogRef, true));\n        this.afterOpened.next(dialogRef);\n        return dialogRef;\n    }\n    /**\n     * Closes all of the currently-open dialogs.\n     */\n    closeAll() {\n        reverseForEach(this.openDialogs, dialog => dialog.close());\n    }\n    /**\n     * Finds an open dialog by its id.\n     * @param id ID to use when looking up the dialog.\n     */\n    getDialogById(id) {\n        return this.openDialogs.find(dialog => dialog.id === id);\n    }\n    ngOnDestroy() {\n        // Make one pass over all the dialogs that need to be untracked, but should not be closed. We\n        // want to stop tracking the open dialog even if it hasn't been closed, because the tracking\n        // determines when `aria-hidden` is removed from elements outside the dialog.\n        reverseForEach(this._openDialogsAtThisLevel, dialog => {\n            // Check for `false` specifically since we want `undefined` to be interpreted as `true`.\n            if (dialog.config.closeOnDestroy === false) {\n                this._removeOpenDialog(dialog, false);\n            }\n        });\n        // Make a second pass and close the remaining dialogs. We do this second pass in order to\n        // correctly dispatch the `afterAllClosed` event in case we have a mixed array of dialogs\n        // that should be closed and dialogs that should not.\n        reverseForEach(this._openDialogsAtThisLevel, dialog => dialog.close());\n        this._afterAllClosedAtThisLevel.complete();\n        this._afterOpenedAtThisLevel.complete();\n        this._openDialogsAtThisLevel = [];\n    }\n    /**\n     * Creates an overlay config from a dialog config.\n     * @param config The dialog configuration.\n     * @returns The overlay configuration.\n     */\n    _getOverlayConfig(config) {\n        const state = new OverlayConfig({\n            positionStrategy: config.positionStrategy ||\n                this._overlay.position().global().centerHorizontally().centerVertically(),\n            scrollStrategy: config.scrollStrategy || this._scrollStrategy(),\n            panelClass: config.panelClass,\n            hasBackdrop: config.hasBackdrop,\n            direction: config.direction,\n            minWidth: config.minWidth,\n            minHeight: config.minHeight,\n            maxWidth: config.maxWidth,\n            maxHeight: config.maxHeight,\n            width: config.width,\n            height: config.height,\n            disposeOnNavigation: config.closeOnNavigation,\n        });\n        if (config.backdropClass) {\n            state.backdropClass = config.backdropClass;\n        }\n        return state;\n    }\n    /**\n     * Attaches a dialog container to a dialog's already-created overlay.\n     * @param overlay Reference to the dialog's underlying overlay.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to a ComponentRef for the attached container.\n     */\n    _attachContainer(overlay, dialogRef, config) {\n        const userInjector = config.injector || config.viewContainerRef?.injector;\n        const providers = [\n            { provide: DialogConfig, useValue: config },\n            { provide: DialogRef, useValue: dialogRef },\n            { provide: OverlayRef, useValue: overlay },\n        ];\n        let containerType;\n        if (config.container) {\n            if (typeof config.container === 'function') {\n                containerType = config.container;\n            }\n            else {\n                containerType = config.container.type;\n                providers.push(...config.container.providers(config));\n            }\n        }\n        else {\n            containerType = CdkDialogContainer;\n        }\n        const containerPortal = new ComponentPortal(containerType, config.viewContainerRef, Injector.create({ parent: userInjector || this._injector, providers }), config.componentFactoryResolver);\n        const containerRef = overlay.attach(containerPortal);\n        return containerRef.instance;\n    }\n    /**\n     * Attaches the user-provided component to the already-created dialog container.\n     * @param componentOrTemplateRef The type of component being loaded into the dialog,\n     *     or a TemplateRef to instantiate as the content.\n     * @param dialogRef Reference to the dialog being opened.\n     * @param dialogContainer Component that is going to wrap the dialog content.\n     * @param config Configuration used to open the dialog.\n     */\n    _attachDialogContent(componentOrTemplateRef, dialogRef, dialogContainer, config) {\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            const injector = this._createInjector(config, dialogRef, dialogContainer, undefined);\n            let context = { $implicit: config.data, dialogRef };\n            if (config.templateContext) {\n                context = {\n                    ...context,\n                    ...(typeof config.templateContext === 'function'\n                        ? config.templateContext()\n                        : config.templateContext),\n                };\n            }\n            dialogContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, null, context, injector));\n        }\n        else {\n            const injector = this._createInjector(config, dialogRef, dialogContainer, this._injector);\n            const contentRef = dialogContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, config.viewContainerRef, injector, config.componentFactoryResolver));\n            dialogRef.componentRef = contentRef;\n            dialogRef.componentInstance = contentRef.instance;\n        }\n    }\n    /**\n     * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n     * of a dialog to close itself and, optionally, to return a value.\n     * @param config Config object that is used to construct the dialog.\n     * @param dialogRef Reference to the dialog being opened.\n     * @param dialogContainer Component that is going to wrap the dialog content.\n     * @param fallbackInjector Injector to use as a fallback when a lookup fails in the custom\n     * dialog injector, if the user didn't provide a custom one.\n     * @returns The custom injector that can be used inside the dialog.\n     */\n    _createInjector(config, dialogRef, dialogContainer, fallbackInjector) {\n        const userInjector = config.injector || config.viewContainerRef?.injector;\n        const providers = [\n            { provide: DIALOG_DATA, useValue: config.data },\n            { provide: DialogRef, useValue: dialogRef },\n        ];\n        if (config.providers) {\n            if (typeof config.providers === 'function') {\n                providers.push(...config.providers(dialogRef, config, dialogContainer));\n            }\n            else {\n                providers.push(...config.providers);\n            }\n        }\n        if (config.direction &&\n            (!userInjector ||\n                !userInjector.get(Directionality, null, { optional: true }))) {\n            providers.push({\n                provide: Directionality,\n                useValue: { value: config.direction, change: of() },\n            });\n        }\n        return Injector.create({ parent: userInjector || fallbackInjector, providers });\n    }\n    /**\n     * Removes a dialog from the array of open dialogs.\n     * @param dialogRef Dialog to be removed.\n     * @param emitEvent Whether to emit an event if this is the last dialog.\n     */\n    _removeOpenDialog(dialogRef, emitEvent) {\n        const index = this.openDialogs.indexOf(dialogRef);\n        if (index > -1) {\n            this.openDialogs.splice(index, 1);\n            // If all the dialogs were closed, remove/restore the `aria-hidden`\n            // to a the siblings and emit to the `afterAllClosed` stream.\n            if (!this.openDialogs.length) {\n                this._ariaHiddenElements.forEach((previousValue, element) => {\n                    if (previousValue) {\n                        element.setAttribute('aria-hidden', previousValue);\n                    }\n                    else {\n                        element.removeAttribute('aria-hidden');\n                    }\n                });\n                this._ariaHiddenElements.clear();\n                if (emitEvent) {\n                    this._getAfterAllClosed().next();\n                }\n            }\n        }\n    }\n    /** Hides all of the content that isn't an overlay from assistive technology. */\n    _hideNonDialogContentFromAssistiveTechnology() {\n        const overlayContainer = this._overlayContainer.getContainerElement();\n        // Ensure that the overlay container is attached to the DOM.\n        if (overlayContainer.parentElement) {\n            const siblings = overlayContainer.parentElement.children;\n            for (let i = siblings.length - 1; i > -1; i--) {\n                const sibling = siblings[i];\n                if (sibling !== overlayContainer &&\n                    sibling.nodeName !== 'SCRIPT' &&\n                    sibling.nodeName !== 'STYLE' &&\n                    !sibling.hasAttribute('aria-live')) {\n                    this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n                    sibling.setAttribute('aria-hidden', 'true');\n                }\n            }\n        }\n    }\n    _getAfterAllClosed() {\n        const parent = this._parentDialog;\n        return parent ? parent._getAfterAllClosed() : this._afterAllClosedAtThisLevel;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: Dialog, deps: [{ token: i1$1.Overlay }, { token: i0.Injector }, { token: DEFAULT_DIALOG_CONFIG, optional: true }, { token: Dialog, optional: true, skipSelf: true }, { token: i1$1.OverlayContainer }, { token: DIALOG_SCROLL_STRATEGY }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: Dialog, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: Dialog, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1$1.Overlay }, { type: i0.Injector }, { type: DialogConfig, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DEFAULT_DIALOG_CONFIG]\n                }] }, { type: Dialog, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: i1$1.OverlayContainer }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DIALOG_SCROLL_STRATEGY]\n                }] }] });\n/**\n * Executes a callback against all elements in an array while iterating in reverse.\n * Useful if the array is being modified as it is being iterated.\n */\nfunction reverseForEach(items, callback) {\n    let i = items.length;\n    while (i--) {\n        callback(items[i]);\n    }\n}\n\nclass DialogModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: DialogModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.2.0\", ngImport: i0, type: DialogModule, imports: [OverlayModule, PortalModule, A11yModule, CdkDialogContainer], exports: [\n            // Re-export the PortalModule so that people extending the `CdkDialogContainer`\n            // don't have to remember to import it or be faced with an unhelpful error.\n            PortalModule,\n            CdkDialogContainer] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: DialogModule, providers: [Dialog], imports: [OverlayModule, PortalModule, A11yModule, \n            // Re-export the PortalModule so that people extending the `CdkDialogContainer`\n            // don't have to remember to import it or be faced with an unhelpful error.\n            PortalModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: DialogModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [OverlayModule, PortalModule, A11yModule, CdkDialogContainer],\n                    exports: [\n                        // Re-export the PortalModule so that people extending the `CdkDialogContainer`\n                        // don't have to remember to import it or be faced with an unhelpful error.\n                        PortalModule,\n                        CdkDialogContainer,\n                    ],\n                    providers: [Dialog],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkDialogContainer, DEFAULT_DIALOG_CONFIG, DIALOG_DATA, DIALOG_SCROLL_STRATEGY, DIALOG_SCROLL_STRATEGY_PROVIDER, DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, Dialog, DialogConfig, DialogModule, DialogRef, throwDialogContentAlreadyAttachedError };\n","import * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, ANIMATION_MODULE_TYPE, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, InjectionToken, inject, Injectable, SkipSelf, Directive, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { CdkDialogContainer, Dialog, DialogConfig, DialogModule } from '@angular/cdk/dialog';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport { Subject, merge, defer } from 'rxjs';\nimport { filter, take, startWith } from 'rxjs/operators';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { MatCommonModule } from '@angular/material/core';\nimport { trigger, state, style, transition, group, animate, query, animateChild } from '@angular/animations';\n\n/**\n * Configuration for opening a modal dialog with the MatDialog service.\n */\nclass MatDialogConfig {\n    constructor() {\n        /** The ARIA role of the dialog element. */\n        this.role = 'dialog';\n        /** Custom class for the overlay pane. */\n        this.panelClass = '';\n        /** Whether the dialog has a backdrop. */\n        this.hasBackdrop = true;\n        /** Custom class for the backdrop. */\n        this.backdropClass = '';\n        /** Whether the user can use escape or clicking on the backdrop to close the modal. */\n        this.disableClose = false;\n        /** Width of the dialog. */\n        this.width = '';\n        /** Height of the dialog. */\n        this.height = '';\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** ID of the element that describes the dialog. */\n        this.ariaDescribedBy = null;\n        /** ID of the element that labels the dialog. */\n        this.ariaLabelledBy = null;\n        /** Aria label to assign to the dialog element. */\n        this.ariaLabel = null;\n        /** Whether this is a modal dialog. Used to set the `aria-modal` attribute. */\n        this.ariaModal = true;\n        /**\n         * Where the dialog should focus on open.\n         * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or\n         * AutoFocusTarget instead.\n         */\n        this.autoFocus = 'first-tabbable';\n        /**\n         * Whether the dialog should restore focus to the\n         * previously-focused element, after it's closed.\n         */\n        this.restoreFocus = true;\n        /** Whether to wait for the opening animation to finish before trapping focus. */\n        this.delayFocusTrap = true;\n        /**\n         * Whether the dialog should close when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.closeOnNavigation = true;\n        // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\n    }\n}\n\n/** Class added when the dialog is open. */\nconst OPEN_CLASS = 'mdc-dialog--open';\n/** Class added while the dialog is opening. */\nconst OPENING_CLASS = 'mdc-dialog--opening';\n/** Class added while the dialog is closing. */\nconst CLOSING_CLASS = 'mdc-dialog--closing';\n/** Duration of the opening animation in milliseconds. */\nconst OPEN_ANIMATION_DURATION = 150;\n/** Duration of the closing animation in milliseconds. */\nconst CLOSE_ANIMATION_DURATION = 75;\nclass MatDialogContainer extends CdkDialogContainer {\n    constructor(elementRef, focusTrapFactory, _document, dialogConfig, interactivityChecker, ngZone, overlayRef, _animationMode, focusMonitor) {\n        super(elementRef, focusTrapFactory, _document, dialogConfig, interactivityChecker, ngZone, overlayRef, focusMonitor);\n        this._animationMode = _animationMode;\n        /** Emits when an animation state changes. */\n        this._animationStateChanged = new EventEmitter();\n        /** Whether animations are enabled. */\n        this._animationsEnabled = this._animationMode !== 'NoopAnimations';\n        /** Number of actions projected in the dialog. */\n        this._actionSectionCount = 0;\n        /** Host element of the dialog container component. */\n        this._hostElement = this._elementRef.nativeElement;\n        /** Duration of the dialog open animation. */\n        this._enterAnimationDuration = this._animationsEnabled\n            ? parseCssTime(this._config.enterAnimationDuration) ?? OPEN_ANIMATION_DURATION\n            : 0;\n        /** Duration of the dialog close animation. */\n        this._exitAnimationDuration = this._animationsEnabled\n            ? parseCssTime(this._config.exitAnimationDuration) ?? CLOSE_ANIMATION_DURATION\n            : 0;\n        /** Current timer for dialog animations. */\n        this._animationTimer = null;\n        /**\n         * Completes the dialog open by clearing potential animation classes, trapping\n         * focus and emitting an opened event.\n         */\n        this._finishDialogOpen = () => {\n            this._clearAnimationClasses();\n            this._openAnimationDone(this._enterAnimationDuration);\n        };\n        /**\n         * Completes the dialog close by clearing potential animation classes, restoring\n         * focus and emitting a closed event.\n         */\n        this._finishDialogClose = () => {\n            this._clearAnimationClasses();\n            this._animationStateChanged.emit({ state: 'closed', totalTime: this._exitAnimationDuration });\n        };\n    }\n    _contentAttached() {\n        // Delegate to the original dialog-container initialization (i.e. saving the\n        // previous element, setting up the focus trap and moving focus to the container).\n        super._contentAttached();\n        // Note: Usually we would be able to use the MDC dialog foundation here to handle\n        // the dialog animation for us, but there are a few reasons why we just leverage\n        // their styles and not use the runtime foundation code:\n        //   1. Foundation does not allow us to disable animations.\n        //   2. Foundation contains unnecessary features we don't need and aren't\n        //      tree-shakeable. e.g. background scrim, keyboard event handlers for ESC button.\n        //   3. Foundation uses unnecessary timers for animations to work around limitations\n        //      in React's `setState` mechanism.\n        //      https://github.com/material-components/material-components-web/pull/3682.\n        this._startOpenAnimation();\n    }\n    /** Starts the dialog open animation if enabled. */\n    _startOpenAnimation() {\n        this._animationStateChanged.emit({ state: 'opening', totalTime: this._enterAnimationDuration });\n        if (this._animationsEnabled) {\n            this._hostElement.style.setProperty(TRANSITION_DURATION_PROPERTY, `${this._enterAnimationDuration}ms`);\n            // We need to give the `setProperty` call from above some time to be applied.\n            // One would expect that the open class is added once the animation finished, but MDC\n            // uses the open class in combination with the opening class to start the animation.\n            this._requestAnimationFrame(() => this._hostElement.classList.add(OPENING_CLASS, OPEN_CLASS));\n            this._waitForAnimationToComplete(this._enterAnimationDuration, this._finishDialogOpen);\n        }\n        else {\n            this._hostElement.classList.add(OPEN_CLASS);\n            // Note: We could immediately finish the dialog opening here with noop animations,\n            // but we defer until next tick so that consumers can subscribe to `afterOpened`.\n            // Executing this immediately would mean that `afterOpened` emits synchronously\n            // on `dialog.open` before the consumer had a change to subscribe to `afterOpened`.\n            Promise.resolve().then(() => this._finishDialogOpen());\n        }\n    }\n    /**\n     * Starts the exit animation of the dialog if enabled. This method is\n     * called by the dialog ref.\n     */\n    _startExitAnimation() {\n        this._animationStateChanged.emit({ state: 'closing', totalTime: this._exitAnimationDuration });\n        this._hostElement.classList.remove(OPEN_CLASS);\n        if (this._animationsEnabled) {\n            this._hostElement.style.setProperty(TRANSITION_DURATION_PROPERTY, `${this._exitAnimationDuration}ms`);\n            // We need to give the `setProperty` call from above some time to be applied.\n            this._requestAnimationFrame(() => this._hostElement.classList.add(CLOSING_CLASS));\n            this._waitForAnimationToComplete(this._exitAnimationDuration, this._finishDialogClose);\n        }\n        else {\n            // This subscription to the `OverlayRef#backdropClick` observable in the `DialogRef` is\n            // set up before any user can subscribe to the backdrop click. The subscription triggers\n            // the dialog close and this method synchronously. If we'd synchronously emit the `CLOSED`\n            // animation state event if animations are disabled, the overlay would be disposed\n            // immediately and all other subscriptions to `DialogRef#backdropClick` would be silently\n            // skipped. We work around this by waiting with the dialog close until the next tick when\n            // all subscriptions have been fired as expected. This is not an ideal solution, but\n            // there doesn't seem to be any other good way. Alternatives that have been considered:\n            //   1. Deferring `DialogRef.close`. This could be a breaking change due to a new microtask.\n            //      Also this issue is specific to the MDC implementation where the dialog could\n            //      technically be closed synchronously. In the non-MDC one, Angular animations are used\n            //      and closing always takes at least a tick.\n            //   2. Ensuring that user subscriptions to `backdropClick`, `keydownEvents` in the dialog\n            //      ref are first. This would solve the issue, but has the risk of memory leaks and also\n            //      doesn't solve the case where consumers call `DialogRef.close` in their subscriptions.\n            // Based on the fact that this is specific to the MDC-based implementation of the dialog\n            // animations, the defer is applied here.\n            Promise.resolve().then(() => this._finishDialogClose());\n        }\n    }\n    /**\n     * Updates the number action sections.\n     * @param delta Increase/decrease in the number of sections.\n     */\n    _updateActionSectionCount(delta) {\n        this._actionSectionCount += delta;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Clears all dialog animation classes. */\n    _clearAnimationClasses() {\n        this._hostElement.classList.remove(OPENING_CLASS, CLOSING_CLASS);\n    }\n    _waitForAnimationToComplete(duration, callback) {\n        if (this._animationTimer !== null) {\n            clearTimeout(this._animationTimer);\n        }\n        // Note that we want this timer to run inside the NgZone, because we want\n        // the related events like `afterClosed` to be inside the zone as well.\n        this._animationTimer = setTimeout(callback, duration);\n    }\n    /** Runs a callback in `requestAnimationFrame`, if available. */\n    _requestAnimationFrame(callback) {\n        this._ngZone.runOutsideAngular(() => {\n            if (typeof requestAnimationFrame === 'function') {\n                requestAnimationFrame(callback);\n            }\n            else {\n                callback();\n            }\n        });\n    }\n    _captureInitialFocus() {\n        if (!this._config.delayFocusTrap) {\n            this._trapFocus();\n        }\n    }\n    /**\n     * Callback for when the open dialog animation has finished. Intended to\n     * be called by sub-classes that use different animation implementations.\n     */\n    _openAnimationDone(totalTime) {\n        if (this._config.delayFocusTrap) {\n            this._trapFocus();\n        }\n        this._animationStateChanged.next({ state: 'opened', totalTime });\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this._animationTimer !== null) {\n            clearTimeout(this._animationTimer);\n        }\n    }\n    attachComponentPortal(portal) {\n        // When a component is passed into the dialog, the host element interrupts\n        // the `display:flex` from affecting the dialog title, content, and\n        // actions. To fix this, we make the component host `display: contents` by\n        // marking its host with the `mat-mdc-dialog-component-host` class.\n        //\n        // Note that this problem does not exist when a template ref is used since\n        // the title, contents, and actions are then nested directly under the\n        // dialog surface.\n        const ref = super.attachComponentPortal(portal);\n        ref.location.nativeElement.classList.add('mat-mdc-dialog-component-host');\n        return ref;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDialogContainer, deps: [{ token: i0.ElementRef }, { token: i1.FocusTrapFactory }, { token: DOCUMENT, optional: true }, { token: MatDialogConfig }, { token: i1.InteractivityChecker }, { token: i0.NgZone }, { token: i1$1.OverlayRef }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: i1.FocusMonitor }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.0\", type: MatDialogContainer, isStandalone: true, selector: \"mat-dialog-container\", host: { attributes: { \"tabindex\": \"-1\" }, properties: { \"attr.aria-modal\": \"_config.ariaModal\", \"id\": \"_config.id\", \"attr.role\": \"_config.role\", \"attr.aria-labelledby\": \"_config.ariaLabel ? null : _ariaLabelledByQueue[0]\", \"attr.aria-label\": \"_config.ariaLabel\", \"attr.aria-describedby\": \"_config.ariaDescribedBy || null\", \"class._mat-animation-noopable\": \"!_animationsEnabled\", \"class.mat-mdc-dialog-container-with-actions\": \"_actionSectionCount > 0\" }, classAttribute: \"mat-mdc-dialog-container mdc-dialog\" }, usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mdc-dialog__container\\\">\\n  <div class=\\\"mat-mdc-dialog-surface mdc-dialog__surface\\\">\\n    <ng-template cdkPortalOutlet />\\n  </div>\\n</div>\\n\", styles: [\".mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-dialog,.mdc-dialog__scrim{position:fixed;top:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;width:100%;height:100%}.mdc-dialog{display:none;z-index:var(--mdc-dialog-z-index, 7)}.mdc-dialog .mdc-dialog__content{padding:20px 24px 20px 24px}.mdc-dialog .mdc-dialog__surface{min-width:280px}@media(max-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:calc(100vw - 32px)}}@media(min-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:560px}}.mdc-dialog .mdc-dialog__surface{max-height:calc(100% - 32px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-width:none}@media(max-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px;width:560px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 112px)}}@media(max-width: 720px)and (min-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:560px}}@media(max-width: 720px)and (max-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:calc(100vh - 160px)}}@media(max-width: 720px)and (min-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px}}@media(max-width: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-height: 400px),(max-width: 600px),(min-width: 720px)and (max-height: 400px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{height:100%;max-height:100vh;max-width:100vw;width:100vw;border-radius:0}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{order:-1;left:-12px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__header{padding:0 16px 9px;justify-content:flex-start}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__title{margin-left:calc(16px - 2 * 12px)}}@media(min-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 400px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}.mdc-dialog.mdc-dialog__scrim--hidden .mdc-dialog__scrim{opacity:0}.mdc-dialog__scrim{opacity:0;z-index:-1}.mdc-dialog__container{display:flex;flex-direction:row;align-items:center;justify-content:space-around;box-sizing:border-box;height:100%;opacity:0;pointer-events:none}.mdc-dialog__surface{position:relative;display:flex;flex-direction:column;flex-grow:0;flex-shrink:0;box-sizing:border-box;max-width:100%;max-height:100%;pointer-events:auto;overflow-y:auto;outline:0;transform:scale(0.8)}.mdc-dialog__surface .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}[dir=rtl] .mdc-dialog__surface,.mdc-dialog__surface[dir=rtl]{text-align:right}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-dialog__surface{outline:2px solid windowText}}.mdc-dialog__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:2px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-dialog__surface::before{border-color:CanvasText}}@media screen and (-ms-high-contrast: active),screen and (-ms-high-contrast: none){.mdc-dialog__surface::before{content:none}}.mdc-dialog__title{display:block;margin-top:0;position:relative;flex-shrink:0;box-sizing:border-box;margin:0 0 1px;padding:0 24px 9px}.mdc-dialog__title::before{display:inline-block;width:0;height:40px;content:\\\"\\\";vertical-align:0}[dir=rtl] .mdc-dialog__title,.mdc-dialog__title[dir=rtl]{text-align:right}.mdc-dialog--scrollable .mdc-dialog__title{margin-bottom:1px;padding-bottom:15px}.mdc-dialog--fullscreen .mdc-dialog__header{align-items:baseline;border-bottom:1px solid rgba(0,0,0,0);display:inline-flex;justify-content:space-between;padding:0 24px 9px;z-index:1}@media screen and (forced-colors: active){.mdc-dialog--fullscreen .mdc-dialog__header{border-bottom-color:CanvasText}}.mdc-dialog--fullscreen .mdc-dialog__header .mdc-dialog__close{right:-12px}.mdc-dialog--fullscreen .mdc-dialog__title{margin-bottom:0;padding:0;border-bottom:0}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__title{border-bottom:0;margin-bottom:0}.mdc-dialog--fullscreen .mdc-dialog__close{top:5px}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top:1px solid rgba(0,0,0,0)}@media screen and (forced-colors: active){.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--fullscreen--titleless .mdc-dialog__close{margin-top:4px}.mdc-dialog--fullscreen--titleless.mdc-dialog--scrollable .mdc-dialog__close{margin-top:0}.mdc-dialog__content{flex-grow:1;box-sizing:border-box;margin:0;overflow:auto}.mdc-dialog__content>:first-child{margin-top:0}.mdc-dialog__content>:last-child{margin-bottom:0}.mdc-dialog__title+.mdc-dialog__content,.mdc-dialog__header+.mdc-dialog__content{padding-top:0}.mdc-dialog--scrollable .mdc-dialog__title+.mdc-dialog__content{padding-top:8px;padding-bottom:8px}.mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:6px 0 0}.mdc-dialog--scrollable .mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:0}.mdc-dialog__actions{display:flex;position:relative;flex-shrink:0;flex-wrap:wrap;align-items:center;justify-content:flex-end;box-sizing:border-box;min-height:52px;margin:0;padding:8px;border-top:1px solid rgba(0,0,0,0)}@media screen and (forced-colors: active){.mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--stacked .mdc-dialog__actions{flex-direction:column;align-items:flex-end}.mdc-dialog__button{margin-left:8px;margin-right:0;max-width:100%;text-align:right}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{margin-left:0;margin-right:8px}.mdc-dialog__button:first-child{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button:first-child,.mdc-dialog__button:first-child[dir=rtl]{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{text-align:left}.mdc-dialog--stacked .mdc-dialog__button:not(:first-child){margin-top:12px}.mdc-dialog--open,.mdc-dialog--opening,.mdc-dialog--closing{display:flex}.mdc-dialog--opening .mdc-dialog__scrim{transition:opacity 150ms linear}.mdc-dialog--opening .mdc-dialog__container{transition:opacity 75ms linear,transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-dialog--closing .mdc-dialog__scrim,.mdc-dialog--closing .mdc-dialog__container{transition:opacity 75ms linear}.mdc-dialog--closing .mdc-dialog__container{transform:none}.mdc-dialog--closing .mdc-dialog__surface{transform:none}.mdc-dialog--open .mdc-dialog__scrim{opacity:1}.mdc-dialog--open .mdc-dialog__container{opacity:1}.mdc-dialog--open .mdc-dialog__surface{transform:none}.mdc-dialog--open.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim{opacity:1}.mdc-dialog--open.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{transition:opacity 75ms linear}.mdc-dialog--open.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim{transition:opacity 150ms linear}.mdc-dialog__surface-scrim{display:none;opacity:0;position:absolute;width:100%;height:100%;z-index:1}.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{display:block}.mdc-dialog-scroll-lock{overflow:hidden}.mdc-dialog--no-content-padding .mdc-dialog__content{padding:0}.mdc-dialog--sheet .mdc-dialog__container .mdc-dialog__close{right:12px;top:9px;position:absolute;z-index:1}.mdc-dialog__scrim--removed{pointer-events:none}.mdc-dialog__scrim--removed .mdc-dialog__scrim,.mdc-dialog__scrim--removed .mdc-dialog__surface-scrim{display:none}.mat-mdc-dialog-content{max-height:65vh}.mat-mdc-dialog-container{position:static;display:block}.mat-mdc-dialog-container,.mat-mdc-dialog-container .mdc-dialog__container,.mat-mdc-dialog-container .mdc-dialog__surface{max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit}.mat-mdc-dialog-container .mdc-dialog__surface{width:100%;height:100%}.mat-mdc-dialog-component-host{display:contents}.mat-mdc-dialog-container{--mdc-dialog-container-elevation: var(--mdc-dialog-container-elevation-shadow);outline:0}.mat-mdc-dialog-container .mdc-dialog__surface{background-color:var(--mdc-dialog-container-color, white)}.mat-mdc-dialog-container .mdc-dialog__surface{box-shadow:var(--mdc-dialog-container-elevation, 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12))}.mat-mdc-dialog-container .mdc-dialog__surface{border-radius:var(--mdc-dialog-container-shape, 4px)}.mat-mdc-dialog-container .mdc-dialog__title{font-family:var(--mdc-dialog-subhead-font, Roboto, sans-serif);line-height:var(--mdc-dialog-subhead-line-height, 1.5rem);font-size:var(--mdc-dialog-subhead-size, 1rem);font-weight:var(--mdc-dialog-subhead-weight, 400);letter-spacing:var(--mdc-dialog-subhead-tracking, 0.03125em)}.mat-mdc-dialog-container .mdc-dialog__title{color:var(--mdc-dialog-subhead-color, rgba(0, 0, 0, 0.87))}.mat-mdc-dialog-container .mdc-dialog__content{font-family:var(--mdc-dialog-supporting-text-font, Roboto, sans-serif);line-height:var(--mdc-dialog-supporting-text-line-height, 1.5rem);font-size:var(--mdc-dialog-supporting-text-size, 1rem);font-weight:var(--mdc-dialog-supporting-text-weight, 400);letter-spacing:var(--mdc-dialog-supporting-text-tracking, 0.03125em)}.mat-mdc-dialog-container .mdc-dialog__content{color:var(--mdc-dialog-supporting-text-color, rgba(0, 0, 0, 0.6))}.mat-mdc-dialog-container .mdc-dialog__container{transition:opacity linear var(--mat-dialog-transition-duration, 0ms)}.mat-mdc-dialog-container .mdc-dialog__surface{transition:transform var(--mat-dialog-transition-duration, 0ms) 0ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-dialog-container._mat-animation-noopable .mdc-dialog__container,.mat-mdc-dialog-container._mat-animation-noopable .mdc-dialog__surface{transition:none}.cdk-overlay-pane.mat-mdc-dialog-panel{max-width:var(--mat-dialog-container-max-width, 80vw);min-width:var(--mat-dialog-container-min-width, 0)}@media(max-width: 599px){.cdk-overlay-pane.mat-mdc-dialog-panel{max-width:var(--mat-dialog-container-small-max-width, 80vw)}}.mat-mdc-dialog-title{padding:var(--mat-dialog-headline-padding, 0 24px 9px)}.mat-mdc-dialog-content{display:block}.mat-mdc-dialog-container .mat-mdc-dialog-content{padding:var(--mat-dialog-content-padding, 20px 24px)}.mat-mdc-dialog-container-with-actions .mat-mdc-dialog-content{padding:var(--mat-dialog-with-actions-content-padding, 20px 24px)}.mat-mdc-dialog-container .mat-mdc-dialog-title+.mat-mdc-dialog-content{padding-top:0}.mat-mdc-dialog-actions{padding:var(--mat-dialog-actions-padding, 8px);justify-content:var(--mat-dialog-actions-alignment, start)}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-start,.mat-mdc-dialog-actions[align=start]{justify-content:start}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-center,.mat-mdc-dialog-actions[align=center]{justify-content:center}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-end,.mat-mdc-dialog-actions[align=end]{justify-content:flex-end}.mat-mdc-dialog-actions .mat-button-base+.mat-button-base,.mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-mdc-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\"], dependencies: [{ kind: \"directive\", type: CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDialogContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-dialog-container', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, standalone: true, imports: [CdkPortalOutlet], host: {\n                        'class': 'mat-mdc-dialog-container mdc-dialog',\n                        'tabindex': '-1',\n                        '[attr.aria-modal]': '_config.ariaModal',\n                        '[id]': '_config.id',\n                        '[attr.role]': '_config.role',\n                        '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledByQueue[0]',\n                        '[attr.aria-label]': '_config.ariaLabel',\n                        '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n                        '[class._mat-animation-noopable]': '!_animationsEnabled',\n                        '[class.mat-mdc-dialog-container-with-actions]': '_actionSectionCount > 0',\n                    }, template: \"<div class=\\\"mdc-dialog__container\\\">\\n  <div class=\\\"mat-mdc-dialog-surface mdc-dialog__surface\\\">\\n    <ng-template cdkPortalOutlet />\\n  </div>\\n</div>\\n\", styles: [\".mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-dialog,.mdc-dialog__scrim{position:fixed;top:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;width:100%;height:100%}.mdc-dialog{display:none;z-index:var(--mdc-dialog-z-index, 7)}.mdc-dialog .mdc-dialog__content{padding:20px 24px 20px 24px}.mdc-dialog .mdc-dialog__surface{min-width:280px}@media(max-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:calc(100vw - 32px)}}@media(min-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:560px}}.mdc-dialog .mdc-dialog__surface{max-height:calc(100% - 32px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-width:none}@media(max-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px;width:560px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 112px)}}@media(max-width: 720px)and (min-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:560px}}@media(max-width: 720px)and (max-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:calc(100vh - 160px)}}@media(max-width: 720px)and (min-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px}}@media(max-width: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-height: 400px),(max-width: 600px),(min-width: 720px)and (max-height: 400px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{height:100%;max-height:100vh;max-width:100vw;width:100vw;border-radius:0}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{order:-1;left:-12px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__header{padding:0 16px 9px;justify-content:flex-start}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__title{margin-left:calc(16px - 2 * 12px)}}@media(min-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 400px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}.mdc-dialog.mdc-dialog__scrim--hidden .mdc-dialog__scrim{opacity:0}.mdc-dialog__scrim{opacity:0;z-index:-1}.mdc-dialog__container{display:flex;flex-direction:row;align-items:center;justify-content:space-around;box-sizing:border-box;height:100%;opacity:0;pointer-events:none}.mdc-dialog__surface{position:relative;display:flex;flex-direction:column;flex-grow:0;flex-shrink:0;box-sizing:border-box;max-width:100%;max-height:100%;pointer-events:auto;overflow-y:auto;outline:0;transform:scale(0.8)}.mdc-dialog__surface .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}[dir=rtl] .mdc-dialog__surface,.mdc-dialog__surface[dir=rtl]{text-align:right}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-dialog__surface{outline:2px solid windowText}}.mdc-dialog__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:2px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-dialog__surface::before{border-color:CanvasText}}@media screen and (-ms-high-contrast: active),screen and (-ms-high-contrast: none){.mdc-dialog__surface::before{content:none}}.mdc-dialog__title{display:block;margin-top:0;position:relative;flex-shrink:0;box-sizing:border-box;margin:0 0 1px;padding:0 24px 9px}.mdc-dialog__title::before{display:inline-block;width:0;height:40px;content:\\\"\\\";vertical-align:0}[dir=rtl] .mdc-dialog__title,.mdc-dialog__title[dir=rtl]{text-align:right}.mdc-dialog--scrollable .mdc-dialog__title{margin-bottom:1px;padding-bottom:15px}.mdc-dialog--fullscreen .mdc-dialog__header{align-items:baseline;border-bottom:1px solid rgba(0,0,0,0);display:inline-flex;justify-content:space-between;padding:0 24px 9px;z-index:1}@media screen and (forced-colors: active){.mdc-dialog--fullscreen .mdc-dialog__header{border-bottom-color:CanvasText}}.mdc-dialog--fullscreen .mdc-dialog__header .mdc-dialog__close{right:-12px}.mdc-dialog--fullscreen .mdc-dialog__title{margin-bottom:0;padding:0;border-bottom:0}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__title{border-bottom:0;margin-bottom:0}.mdc-dialog--fullscreen .mdc-dialog__close{top:5px}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top:1px solid rgba(0,0,0,0)}@media screen and (forced-colors: active){.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--fullscreen--titleless .mdc-dialog__close{margin-top:4px}.mdc-dialog--fullscreen--titleless.mdc-dialog--scrollable .mdc-dialog__close{margin-top:0}.mdc-dialog__content{flex-grow:1;box-sizing:border-box;margin:0;overflow:auto}.mdc-dialog__content>:first-child{margin-top:0}.mdc-dialog__content>:last-child{margin-bottom:0}.mdc-dialog__title+.mdc-dialog__content,.mdc-dialog__header+.mdc-dialog__content{padding-top:0}.mdc-dialog--scrollable .mdc-dialog__title+.mdc-dialog__content{padding-top:8px;padding-bottom:8px}.mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:6px 0 0}.mdc-dialog--scrollable .mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:0}.mdc-dialog__actions{display:flex;position:relative;flex-shrink:0;flex-wrap:wrap;align-items:center;justify-content:flex-end;box-sizing:border-box;min-height:52px;margin:0;padding:8px;border-top:1px solid rgba(0,0,0,0)}@media screen and (forced-colors: active){.mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--stacked .mdc-dialog__actions{flex-direction:column;align-items:flex-end}.mdc-dialog__button{margin-left:8px;margin-right:0;max-width:100%;text-align:right}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{margin-left:0;margin-right:8px}.mdc-dialog__button:first-child{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button:first-child,.mdc-dialog__button:first-child[dir=rtl]{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{text-align:left}.mdc-dialog--stacked .mdc-dialog__button:not(:first-child){margin-top:12px}.mdc-dialog--open,.mdc-dialog--opening,.mdc-dialog--closing{display:flex}.mdc-dialog--opening .mdc-dialog__scrim{transition:opacity 150ms linear}.mdc-dialog--opening .mdc-dialog__container{transition:opacity 75ms linear,transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-dialog--closing .mdc-dialog__scrim,.mdc-dialog--closing .mdc-dialog__container{transition:opacity 75ms linear}.mdc-dialog--closing .mdc-dialog__container{transform:none}.mdc-dialog--closing .mdc-dialog__surface{transform:none}.mdc-dialog--open .mdc-dialog__scrim{opacity:1}.mdc-dialog--open .mdc-dialog__container{opacity:1}.mdc-dialog--open .mdc-dialog__surface{transform:none}.mdc-dialog--open.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim{opacity:1}.mdc-dialog--open.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{transition:opacity 75ms linear}.mdc-dialog--open.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim{transition:opacity 150ms linear}.mdc-dialog__surface-scrim{display:none;opacity:0;position:absolute;width:100%;height:100%;z-index:1}.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{display:block}.mdc-dialog-scroll-lock{overflow:hidden}.mdc-dialog--no-content-padding .mdc-dialog__content{padding:0}.mdc-dialog--sheet .mdc-dialog__container .mdc-dialog__close{right:12px;top:9px;position:absolute;z-index:1}.mdc-dialog__scrim--removed{pointer-events:none}.mdc-dialog__scrim--removed .mdc-dialog__scrim,.mdc-dialog__scrim--removed .mdc-dialog__surface-scrim{display:none}.mat-mdc-dialog-content{max-height:65vh}.mat-mdc-dialog-container{position:static;display:block}.mat-mdc-dialog-container,.mat-mdc-dialog-container .mdc-dialog__container,.mat-mdc-dialog-container .mdc-dialog__surface{max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit}.mat-mdc-dialog-container .mdc-dialog__surface{width:100%;height:100%}.mat-mdc-dialog-component-host{display:contents}.mat-mdc-dialog-container{--mdc-dialog-container-elevation: var(--mdc-dialog-container-elevation-shadow);outline:0}.mat-mdc-dialog-container .mdc-dialog__surface{background-color:var(--mdc-dialog-container-color, white)}.mat-mdc-dialog-container .mdc-dialog__surface{box-shadow:var(--mdc-dialog-container-elevation, 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12))}.mat-mdc-dialog-container .mdc-dialog__surface{border-radius:var(--mdc-dialog-container-shape, 4px)}.mat-mdc-dialog-container .mdc-dialog__title{font-family:var(--mdc-dialog-subhead-font, Roboto, sans-serif);line-height:var(--mdc-dialog-subhead-line-height, 1.5rem);font-size:var(--mdc-dialog-subhead-size, 1rem);font-weight:var(--mdc-dialog-subhead-weight, 400);letter-spacing:var(--mdc-dialog-subhead-tracking, 0.03125em)}.mat-mdc-dialog-container .mdc-dialog__title{color:var(--mdc-dialog-subhead-color, rgba(0, 0, 0, 0.87))}.mat-mdc-dialog-container .mdc-dialog__content{font-family:var(--mdc-dialog-supporting-text-font, Roboto, sans-serif);line-height:var(--mdc-dialog-supporting-text-line-height, 1.5rem);font-size:var(--mdc-dialog-supporting-text-size, 1rem);font-weight:var(--mdc-dialog-supporting-text-weight, 400);letter-spacing:var(--mdc-dialog-supporting-text-tracking, 0.03125em)}.mat-mdc-dialog-container .mdc-dialog__content{color:var(--mdc-dialog-supporting-text-color, rgba(0, 0, 0, 0.6))}.mat-mdc-dialog-container .mdc-dialog__container{transition:opacity linear var(--mat-dialog-transition-duration, 0ms)}.mat-mdc-dialog-container .mdc-dialog__surface{transition:transform var(--mat-dialog-transition-duration, 0ms) 0ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-dialog-container._mat-animation-noopable .mdc-dialog__container,.mat-mdc-dialog-container._mat-animation-noopable .mdc-dialog__surface{transition:none}.cdk-overlay-pane.mat-mdc-dialog-panel{max-width:var(--mat-dialog-container-max-width, 80vw);min-width:var(--mat-dialog-container-min-width, 0)}@media(max-width: 599px){.cdk-overlay-pane.mat-mdc-dialog-panel{max-width:var(--mat-dialog-container-small-max-width, 80vw)}}.mat-mdc-dialog-title{padding:var(--mat-dialog-headline-padding, 0 24px 9px)}.mat-mdc-dialog-content{display:block}.mat-mdc-dialog-container .mat-mdc-dialog-content{padding:var(--mat-dialog-content-padding, 20px 24px)}.mat-mdc-dialog-container-with-actions .mat-mdc-dialog-content{padding:var(--mat-dialog-with-actions-content-padding, 20px 24px)}.mat-mdc-dialog-container .mat-mdc-dialog-title+.mat-mdc-dialog-content{padding-top:0}.mat-mdc-dialog-actions{padding:var(--mat-dialog-actions-padding, 8px);justify-content:var(--mat-dialog-actions-alignment, start)}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-start,.mat-mdc-dialog-actions[align=start]{justify-content:start}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-center,.mat-mdc-dialog-actions[align=center]{justify-content:center}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-end,.mat-mdc-dialog-actions[align=end]{justify-content:flex-end}.mat-mdc-dialog-actions .mat-button-base+.mat-button-base,.mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-mdc-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i1.FocusTrapFactory }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: MatDialogConfig }, { type: i1.InteractivityChecker }, { type: i0.NgZone }, { type: i1$1.OverlayRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: i1.FocusMonitor }] });\nconst TRANSITION_DURATION_PROPERTY = '--mat-dialog-transition-duration';\n// TODO(mmalerba): Remove this function after animation durations are required\n//  to be numbers.\n/**\n * Converts a CSS time string to a number in ms. If the given time is already a\n * number, it is assumed to be in ms.\n */\nfunction parseCssTime(time) {\n    if (time == null) {\n        return null;\n    }\n    if (typeof time === 'number') {\n        return time;\n    }\n    if (time.endsWith('ms')) {\n        return coerceNumberProperty(time.substring(0, time.length - 2));\n    }\n    if (time.endsWith('s')) {\n        return coerceNumberProperty(time.substring(0, time.length - 1)) * 1000;\n    }\n    if (time === '0') {\n        return 0;\n    }\n    return null; // anything else is invalid.\n}\n\nvar MatDialogState;\n(function (MatDialogState) {\n    MatDialogState[MatDialogState[\"OPEN\"] = 0] = \"OPEN\";\n    MatDialogState[MatDialogState[\"CLOSING\"] = 1] = \"CLOSING\";\n    MatDialogState[MatDialogState[\"CLOSED\"] = 2] = \"CLOSED\";\n})(MatDialogState || (MatDialogState = {}));\n/**\n * Reference to a dialog opened via the MatDialog service.\n */\nclass MatDialogRef {\n    constructor(_ref, config, _containerInstance) {\n        this._ref = _ref;\n        this._containerInstance = _containerInstance;\n        /** Subject for notifying the user that the dialog has finished opening. */\n        this._afterOpened = new Subject();\n        /** Subject for notifying the user that the dialog has started closing. */\n        this._beforeClosed = new Subject();\n        /** Current state of the dialog. */\n        this._state = MatDialogState.OPEN;\n        this.disableClose = config.disableClose;\n        this.id = _ref.id;\n        // Used to target panels specifically tied to dialogs.\n        _ref.addPanelClass('mat-mdc-dialog-panel');\n        // Emit when opening animation completes\n        _containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'opened'), take(1))\n            .subscribe(() => {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        });\n        // Dispose overlay when closing animation is complete\n        _containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'closed'), take(1))\n            .subscribe(() => {\n            clearTimeout(this._closeFallbackTimeout);\n            this._finishDialogClose();\n        });\n        _ref.overlayRef.detachments().subscribe(() => {\n            this._beforeClosed.next(this._result);\n            this._beforeClosed.complete();\n            this._finishDialogClose();\n        });\n        merge(this.backdropClick(), this.keydownEvents().pipe(filter(event => event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)))).subscribe(event => {\n            if (!this.disableClose) {\n                event.preventDefault();\n                _closeDialogVia(this, event.type === 'keydown' ? 'keyboard' : 'mouse');\n            }\n        });\n    }\n    /**\n     * Close the dialog.\n     * @param dialogResult Optional result to return to the dialog opener.\n     */\n    close(dialogResult) {\n        this._result = dialogResult;\n        // Transition the backdrop in parallel to the dialog.\n        this._containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'closing'), take(1))\n            .subscribe(event => {\n            this._beforeClosed.next(dialogResult);\n            this._beforeClosed.complete();\n            this._ref.overlayRef.detachBackdrop();\n            // The logic that disposes of the overlay depends on the exit animation completing, however\n            // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n            // timeout which will clean everything up if the animation hasn't fired within the specified\n            // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n            // vast majority of cases the timeout will have been cleared before it has the chance to fire.\n            this._closeFallbackTimeout = setTimeout(() => this._finishDialogClose(), event.totalTime + 100);\n        });\n        this._state = MatDialogState.CLOSING;\n        this._containerInstance._startExitAnimation();\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished opening.\n     */\n    afterOpened() {\n        return this._afterOpened;\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished closing.\n     */\n    afterClosed() {\n        return this._ref.closed;\n    }\n    /**\n     * Gets an observable that is notified when the dialog has started closing.\n     */\n    beforeClosed() {\n        return this._beforeClosed;\n    }\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     */\n    backdropClick() {\n        return this._ref.backdropClick;\n    }\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     */\n    keydownEvents() {\n        return this._ref.keydownEvents;\n    }\n    /**\n     * Updates the dialog's position.\n     * @param position New dialog position.\n     */\n    updatePosition(position) {\n        let strategy = this._ref.config.positionStrategy;\n        if (position && (position.left || position.right)) {\n            position.left ? strategy.left(position.left) : strategy.right(position.right);\n        }\n        else {\n            strategy.centerHorizontally();\n        }\n        if (position && (position.top || position.bottom)) {\n            position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n        }\n        else {\n            strategy.centerVertically();\n        }\n        this._ref.updatePosition();\n        return this;\n    }\n    /**\n     * Updates the dialog's width and height.\n     * @param width New width of the dialog.\n     * @param height New height of the dialog.\n     */\n    updateSize(width = '', height = '') {\n        this._ref.updateSize(width, height);\n        return this;\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        this._ref.addPanelClass(classes);\n        return this;\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        this._ref.removePanelClass(classes);\n        return this;\n    }\n    /** Gets the current state of the dialog's lifecycle. */\n    getState() {\n        return this._state;\n    }\n    /**\n     * Finishes the dialog close by updating the state of the dialog\n     * and disposing the overlay.\n     */\n    _finishDialogClose() {\n        this._state = MatDialogState.CLOSED;\n        this._ref.close(this._result, { focusOrigin: this._closeInteractionType });\n        this.componentInstance = null;\n    }\n}\n/**\n * Closes the dialog with the specified interaction type. This is currently not part of\n * `MatDialogRef` as that would conflict with custom dialog ref mocks provided in tests.\n * More details. See: https://github.com/angular/components/pull/9257#issuecomment-651342226.\n */\n// TODO: Move this back into `MatDialogRef` when we provide an official mock dialog ref.\nfunction _closeDialogVia(ref, interactionType, result) {\n    ref._closeInteractionType = interactionType;\n    return ref.close(result);\n}\n\n/** Injection token that can be used to access the data that was passed in to a dialog. */\nconst MAT_DIALOG_DATA = new InjectionToken('MatMdcDialogData');\n/** Injection token that can be used to specify default dialog options. */\nconst MAT_DIALOG_DEFAULT_OPTIONS = new InjectionToken('mat-mdc-dialog-default-options');\n/** Injection token that determines the scroll handling while the dialog is open. */\nconst MAT_DIALOG_SCROLL_STRATEGY = new InjectionToken('mat-mdc-dialog-scroll-strategy', {\n    providedIn: 'root',\n    factory: () => {\n        const overlay = inject(Overlay);\n        return () => overlay.scrollStrategies.block();\n    },\n});\n/**\n * @docs-private\n * @deprecated No longer used. To be removed.\n * @breaking-change 19.0.0\n */\nfunction MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.block();\n}\n/**\n * @docs-private\n * @deprecated No longer used. To be removed.\n * @breaking-change 19.0.0\n */\nconst MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_DIALOG_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n// Counter for unique dialog ids.\nlet uniqueId = 0;\n/**\n * Service to open Material Design modal dialogs.\n */\nclass MatDialog {\n    /** Keeps track of the currently-open dialogs. */\n    get openDialogs() {\n        return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n    }\n    /** Stream that emits when a dialog has been opened. */\n    get afterOpened() {\n        return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n    }\n    _getAfterAllClosed() {\n        const parent = this._parentDialog;\n        return parent ? parent._getAfterAllClosed() : this._afterAllClosedAtThisLevel;\n    }\n    constructor(_overlay, injector, \n    /**\n     * @deprecated `_location` parameter to be removed.\n     * @breaking-change 10.0.0\n     */\n    location, _defaultOptions, _scrollStrategy, _parentDialog, \n    /**\n     * @deprecated No longer used. To be removed.\n     * @breaking-change 15.0.0\n     */\n    _overlayContainer, \n    /**\n     * @deprecated No longer used. To be removed.\n     * @breaking-change 14.0.0\n     */\n    _animationMode) {\n        this._overlay = _overlay;\n        this._defaultOptions = _defaultOptions;\n        this._scrollStrategy = _scrollStrategy;\n        this._parentDialog = _parentDialog;\n        this._openDialogsAtThisLevel = [];\n        this._afterAllClosedAtThisLevel = new Subject();\n        this._afterOpenedAtThisLevel = new Subject();\n        this.dialogConfigClass = MatDialogConfig;\n        /**\n         * Stream that emits when all open dialog have finished closing.\n         * Will emit on subscribe if there are no open dialogs to begin with.\n         */\n        this.afterAllClosed = defer(() => this.openDialogs.length\n            ? this._getAfterAllClosed()\n            : this._getAfterAllClosed().pipe(startWith(undefined)));\n        this._dialog = injector.get(Dialog);\n        this._dialogRefConstructor = MatDialogRef;\n        this._dialogContainerType = MatDialogContainer;\n        this._dialogDataToken = MAT_DIALOG_DATA;\n    }\n    open(componentOrTemplateRef, config) {\n        let dialogRef;\n        config = { ...(this._defaultOptions || new MatDialogConfig()), ...config };\n        config.id = config.id || `mat-mdc-dialog-${uniqueId++}`;\n        config.scrollStrategy = config.scrollStrategy || this._scrollStrategy();\n        const cdkRef = this._dialog.open(componentOrTemplateRef, {\n            ...config,\n            positionStrategy: this._overlay.position().global().centerHorizontally().centerVertically(),\n            // Disable closing since we need to sync it up to the animation ourselves.\n            disableClose: true,\n            // Disable closing on destroy, because this service cleans up its open dialogs as well.\n            // We want to do the cleanup here, rather than the CDK service, because the CDK destroys\n            // the dialogs immediately whereas we want it to wait for the animations to finish.\n            closeOnDestroy: false,\n            // Disable closing on detachments so that we can sync up the animation.\n            // The Material dialog ref handles this manually.\n            closeOnOverlayDetachments: false,\n            container: {\n                type: this._dialogContainerType,\n                providers: () => [\n                    // Provide our config as the CDK config as well since it has the same interface as the\n                    // CDK one, but it contains the actual values passed in by the user for things like\n                    // `disableClose` which we disable for the CDK dialog since we handle it ourselves.\n                    { provide: this.dialogConfigClass, useValue: config },\n                    { provide: DialogConfig, useValue: config },\n                ],\n            },\n            templateContext: () => ({ dialogRef }),\n            providers: (ref, cdkConfig, dialogContainer) => {\n                dialogRef = new this._dialogRefConstructor(ref, config, dialogContainer);\n                dialogRef.updatePosition(config?.position);\n                return [\n                    { provide: this._dialogContainerType, useValue: dialogContainer },\n                    { provide: this._dialogDataToken, useValue: cdkConfig.data },\n                    { provide: this._dialogRefConstructor, useValue: dialogRef },\n                ];\n            },\n        });\n        // This can't be assigned in the `providers` callback, because\n        // the instance hasn't been assigned to the CDK ref yet.\n        dialogRef.componentRef = cdkRef.componentRef;\n        dialogRef.componentInstance = cdkRef.componentInstance;\n        this.openDialogs.push(dialogRef);\n        this.afterOpened.next(dialogRef);\n        dialogRef.afterClosed().subscribe(() => {\n            const index = this.openDialogs.indexOf(dialogRef);\n            if (index > -1) {\n                this.openDialogs.splice(index, 1);\n                if (!this.openDialogs.length) {\n                    this._getAfterAllClosed().next();\n                }\n            }\n        });\n        return dialogRef;\n    }\n    /**\n     * Closes all of the currently-open dialogs.\n     */\n    closeAll() {\n        this._closeDialogs(this.openDialogs);\n    }\n    /**\n     * Finds an open dialog by its id.\n     * @param id ID to use when looking up the dialog.\n     */\n    getDialogById(id) {\n        return this.openDialogs.find(dialog => dialog.id === id);\n    }\n    ngOnDestroy() {\n        // Only close the dialogs at this level on destroy\n        // since the parent service may still be active.\n        this._closeDialogs(this._openDialogsAtThisLevel);\n        this._afterAllClosedAtThisLevel.complete();\n        this._afterOpenedAtThisLevel.complete();\n    }\n    _closeDialogs(dialogs) {\n        let i = dialogs.length;\n        while (i--) {\n            dialogs[i].close();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDialog, deps: [{ token: i1$1.Overlay }, { token: i0.Injector }, { token: i2.Location, optional: true }, { token: MAT_DIALOG_DEFAULT_OPTIONS, optional: true }, { token: MAT_DIALOG_SCROLL_STRATEGY }, { token: MatDialog, optional: true, skipSelf: true }, { token: i1$1.OverlayContainer }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDialog, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDialog, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1$1.Overlay }, { type: i0.Injector }, { type: i2.Location, decorators: [{\n                    type: Optional\n                }] }, { type: MatDialogConfig, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DIALOG_DEFAULT_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_DIALOG_SCROLL_STRATEGY]\n                }] }, { type: MatDialog, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: i1$1.OverlayContainer }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }] });\n\n/** Counter used to generate unique IDs for dialog elements. */\nlet dialogElementUid = 0;\n/**\n * Button that will close the current dialog.\n */\nclass MatDialogClose {\n    constructor(\n    // The dialog title directive is always used in combination with a `MatDialogRef`.\n    // tslint:disable-next-line: lightweight-tokens\n    dialogRef, _elementRef, _dialog) {\n        this.dialogRef = dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        /** Default to \"button\" to prevents accidental form submits. */\n        this.type = 'button';\n    }\n    ngOnInit() {\n        if (!this.dialogRef) {\n            // When this directive is included in a dialog via TemplateRef (rather than being\n            // in a Component), the DialogRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the DialogRef by\n            // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n            // be resolved at constructor time.\n            this.dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n        }\n    }\n    ngOnChanges(changes) {\n        const proxiedChange = changes['_matDialogClose'] || changes['_matDialogCloseResult'];\n        if (proxiedChange) {\n            this.dialogResult = proxiedChange.currentValue;\n        }\n    }\n    _onButtonClick(event) {\n        // Determinate the focus origin using the click event, because using the FocusMonitor will\n        // result in incorrect origins. Most of the time, close buttons will be auto focused in the\n        // dialog, and therefore clicking the button won't result in a focus change. This means that\n        // the FocusMonitor won't detect any origin change, and will always output `program`.\n        _closeDialogVia(this.dialogRef, event.screenX === 0 && event.screenY === 0 ? 'keyboard' : 'mouse', this.dialogResult);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDialogClose, deps: [{ token: MatDialogRef, optional: true }, { token: i0.ElementRef }, { token: MatDialog }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.2.0\", type: MatDialogClose, isStandalone: true, selector: \"[mat-dialog-close], [matDialogClose]\", inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], type: \"type\", dialogResult: [\"mat-dialog-close\", \"dialogResult\"], _matDialogClose: [\"matDialogClose\", \"_matDialogClose\"] }, host: { listeners: { \"click\": \"_onButtonClick($event)\" }, properties: { \"attr.aria-label\": \"ariaLabel || null\", \"attr.type\": \"type\" } }, exportAs: [\"matDialogClose\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDialogClose, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-dialog-close], [matDialogClose]',\n                    exportAs: 'matDialogClose',\n                    standalone: true,\n                    host: {\n                        '(click)': '_onButtonClick($event)',\n                        '[attr.aria-label]': 'ariaLabel || null',\n                        '[attr.type]': 'type',\n                    },\n                }]\n        }], ctorParameters: () => [{ type: MatDialogRef, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ElementRef }, { type: MatDialog }], propDecorators: { ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], type: [{\n                type: Input\n            }], dialogResult: [{\n                type: Input,\n                args: ['mat-dialog-close']\n            }], _matDialogClose: [{\n                type: Input,\n                args: ['matDialogClose']\n            }] } });\nclass MatDialogLayoutSection {\n    constructor(\n    // The dialog title directive is always used in combination with a `MatDialogRef`.\n    // tslint:disable-next-line: lightweight-tokens\n    _dialogRef, _elementRef, _dialog) {\n        this._dialogRef = _dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n    }\n    ngOnInit() {\n        if (!this._dialogRef) {\n            this._dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n        }\n        if (this._dialogRef) {\n            Promise.resolve().then(() => {\n                this._onAdd();\n            });\n        }\n    }\n    ngOnDestroy() {\n        // Note: we null check because there are some internal\n        // tests that are mocking out `MatDialogRef` incorrectly.\n        const instance = this._dialogRef?._containerInstance;\n        if (instance) {\n            Promise.resolve().then(() => {\n                this._onRemove();\n            });\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDialogLayoutSection, deps: [{ token: MatDialogRef, optional: true }, { token: i0.ElementRef }, { token: MatDialog }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.2.0\", type: MatDialogLayoutSection, isStandalone: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDialogLayoutSection, decorators: [{\n            type: Directive,\n            args: [{ standalone: true }]\n        }], ctorParameters: () => [{ type: MatDialogRef, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ElementRef }, { type: MatDialog }] });\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\nclass MatDialogTitle extends MatDialogLayoutSection {\n    constructor() {\n        super(...arguments);\n        this.id = `mat-mdc-dialog-title-${dialogElementUid++}`;\n    }\n    _onAdd() {\n        // Note: we null check the queue, because there are some internal\n        // tests that are mocking out `MatDialogRef` incorrectly.\n        this._dialogRef._containerInstance?._addAriaLabelledBy?.(this.id);\n    }\n    _onRemove() {\n        this._dialogRef?._containerInstance?._removeAriaLabelledBy?.(this.id);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDialogTitle, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.2.0\", type: MatDialogTitle, isStandalone: true, selector: \"[mat-dialog-title], [matDialogTitle]\", inputs: { id: \"id\" }, host: { properties: { \"id\": \"id\" }, classAttribute: \"mat-mdc-dialog-title mdc-dialog__title\" }, exportAs: [\"matDialogTitle\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDialogTitle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-dialog-title], [matDialogTitle]',\n                    exportAs: 'matDialogTitle',\n                    standalone: true,\n                    host: {\n                        'class': 'mat-mdc-dialog-title mdc-dialog__title',\n                        '[id]': 'id',\n                    },\n                }]\n        }], propDecorators: { id: [{\n                type: Input\n            }] } });\n/**\n * Scrollable content container of a dialog.\n */\nclass MatDialogContent {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDialogContent, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.2.0\", type: MatDialogContent, isStandalone: true, selector: \"[mat-dialog-content], mat-dialog-content, [matDialogContent]\", host: { classAttribute: \"mat-mdc-dialog-content mdc-dialog__content\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDialogContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-dialog-content], mat-dialog-content, [matDialogContent]`,\n                    host: { 'class': 'mat-mdc-dialog-content mdc-dialog__content' },\n                    standalone: true,\n                }]\n        }] });\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\nclass MatDialogActions extends MatDialogLayoutSection {\n    _onAdd() {\n        this._dialogRef._containerInstance?._updateActionSectionCount?.(1);\n    }\n    _onRemove() {\n        this._dialogRef._containerInstance?._updateActionSectionCount?.(-1);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDialogActions, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.2.0\", type: MatDialogActions, isStandalone: true, selector: \"[mat-dialog-actions], mat-dialog-actions, [matDialogActions]\", inputs: { align: \"align\" }, host: { properties: { \"class.mat-mdc-dialog-actions-align-start\": \"align === \\\"start\\\"\", \"class.mat-mdc-dialog-actions-align-center\": \"align === \\\"center\\\"\", \"class.mat-mdc-dialog-actions-align-end\": \"align === \\\"end\\\"\" }, classAttribute: \"mat-mdc-dialog-actions mdc-dialog__actions\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDialogActions, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-dialog-actions], mat-dialog-actions, [matDialogActions]`,\n                    standalone: true,\n                    host: {\n                        'class': 'mat-mdc-dialog-actions mdc-dialog__actions',\n                        '[class.mat-mdc-dialog-actions-align-start]': 'align === \"start\"',\n                        '[class.mat-mdc-dialog-actions-align-center]': 'align === \"center\"',\n                        '[class.mat-mdc-dialog-actions-align-end]': 'align === \"end\"',\n                    },\n                }]\n        }], propDecorators: { align: [{\n                type: Input\n            }] } });\n/**\n * Finds the closest MatDialogRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a dialog.\n * @param openDialogs References to the currently-open dialogs.\n */\nfunction getClosestDialog(element, openDialogs) {\n    let parent = element.nativeElement.parentElement;\n    while (parent && !parent.classList.contains('mat-mdc-dialog-container')) {\n        parent = parent.parentElement;\n    }\n    return parent ? openDialogs.find(dialog => dialog.id === parent.id) : null;\n}\n\nconst DIRECTIVES = [\n    MatDialogContainer,\n    MatDialogClose,\n    MatDialogTitle,\n    MatDialogActions,\n    MatDialogContent,\n];\nclass MatDialogModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDialogModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDialogModule, imports: [DialogModule, OverlayModule, PortalModule, MatCommonModule, MatDialogContainer,\n            MatDialogClose,\n            MatDialogTitle,\n            MatDialogActions,\n            MatDialogContent], exports: [MatCommonModule, MatDialogContainer,\n            MatDialogClose,\n            MatDialogTitle,\n            MatDialogActions,\n            MatDialogContent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDialogModule, providers: [MatDialog], imports: [DialogModule, OverlayModule, PortalModule, MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDialogModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [DialogModule, OverlayModule, PortalModule, MatCommonModule, ...DIRECTIVES],\n                    exports: [MatCommonModule, ...DIRECTIVES],\n                    providers: [MatDialog],\n                }]\n        }] });\n\n/**\n * Default parameters for the animation for backwards compatibility.\n * @docs-private\n */\nconst _defaultParams = {\n    params: { enterAnimationDuration: '150ms', exitAnimationDuration: '75ms' },\n};\n/**\n * Animations used by MatDialog.\n * @docs-private\n */\nconst matDialogAnimations = {\n    /** Animation that is applied on the dialog container by default. */\n    dialogContainer: trigger('dialogContainer', [\n        // Note: The `enter` animation transitions to `transform: none`, because for some reason\n        // specifying the transform explicitly, causes IE both to blur the dialog content and\n        // decimate the animation performance. Leaving it as `none` solves both issues.\n        state('void, exit', style({ opacity: 0, transform: 'scale(0.7)' })),\n        state('enter', style({ transform: 'none' })),\n        transition('* => enter', group([\n            animate('{{enterAnimationDuration}} cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'none', opacity: 1 })),\n            query('@*', animateChild(), { optional: true }),\n        ]), _defaultParams),\n        transition('* => void, * => exit', group([\n            animate('{{exitAnimationDuration}} cubic-bezier(0.4, 0.0, 0.2, 1)', style({ opacity: 0 })),\n            query('@*', animateChild(), { optional: true }),\n        ]), _defaultParams),\n    ]),\n};\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS, MAT_DIALOG_SCROLL_STRATEGY, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, MatDialog, MatDialogActions, MatDialogClose, MatDialogConfig, MatDialogContainer, MatDialogContent, MatDialogModule, MatDialogRef, MatDialogState, MatDialogTitle, _closeDialogVia, _defaultParams, matDialogAnimations };\n","import { takeUntil, take } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, Directive, Inject, Optional, Input, ANIMATION_MODULE_TYPE, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport { DOCUMENT, NgClass, CommonModule } from '@angular/common';\nimport * as i2 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport * as i3 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i4 from '@angular/cdk/bidi';\nimport * as i1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { Subject } from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { MatCommonModule } from '@angular/material/core';\n\n/** Time in ms to throttle repositioning after scroll events. */\nconst SCROLL_THROTTLE_MS = 20;\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @docs-private\n */\nfunction getMatTooltipInvalidPositionError(position) {\n    return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n/** Injection token that determines the scroll handling while a tooltip is visible. */\nconst MAT_TOOLTIP_SCROLL_STRATEGY = new InjectionToken('mat-tooltip-scroll-strategy', {\n    providedIn: 'root',\n    factory: () => {\n        const overlay = inject(Overlay);\n        return () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS });\n    },\n});\n/** @docs-private */\nfunction MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS });\n}\n/** @docs-private */\nconst MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\n};\n/** @docs-private */\nfunction MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        showDelay: 0,\n        hideDelay: 0,\n        touchendHideDelay: 1500,\n    };\n}\n/** Injection token to be used to override the default options for `matTooltip`. */\nconst MAT_TOOLTIP_DEFAULT_OPTIONS = new InjectionToken('mat-tooltip-default-options', {\n    providedIn: 'root',\n    factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * CSS class that will be attached to the overlay panel.\n * @deprecated\n * @breaking-change 13.0.0 remove this variable\n */\nconst TOOLTIP_PANEL_CLASS = 'mat-mdc-tooltip-panel';\nconst PANEL_CLASS = 'tooltip-panel';\n/** Options used to bind passive event listeners. */\nconst passiveListenerOptions = normalizePassiveListenerOptions({ passive: true });\n// These constants were taken from MDC's `numbers` object. We can't import them from MDC,\n// because they have some top-level references to `window` which break during SSR.\nconst MIN_VIEWPORT_TOOLTIP_THRESHOLD = 8;\nconst UNBOUNDED_ANCHOR_GAP = 8;\nconst MIN_HEIGHT = 24;\nconst MAX_WIDTH = 200;\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\nclass MatTooltip {\n    /** Allows the user to define the position of the tooltip relative to the parent element */\n    get position() {\n        return this._position;\n    }\n    set position(value) {\n        if (value !== this._position) {\n            this._position = value;\n            if (this._overlayRef) {\n                this._updatePosition(this._overlayRef);\n                this._tooltipInstance?.show(0);\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    /**\n     * Whether tooltip should be relative to the click or touch origin\n     * instead of outside the element bounding box.\n     */\n    get positionAtOrigin() {\n        return this._positionAtOrigin;\n    }\n    set positionAtOrigin(value) {\n        this._positionAtOrigin = coerceBooleanProperty(value);\n        this._detach();\n        this._overlayRef = null;\n    }\n    /** Disables the display of the tooltip. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // If tooltip is disabled, hide immediately.\n        if (this._disabled) {\n            this.hide(0);\n        }\n        else {\n            this._setupPointerEnterEventsIfNeeded();\n        }\n    }\n    /** The default delay in ms before showing the tooltip after show is called */\n    get showDelay() {\n        return this._showDelay;\n    }\n    set showDelay(value) {\n        this._showDelay = coerceNumberProperty(value);\n    }\n    /** The default delay in ms before hiding the tooltip after hide is called */\n    get hideDelay() {\n        return this._hideDelay;\n    }\n    set hideDelay(value) {\n        this._hideDelay = coerceNumberProperty(value);\n        if (this._tooltipInstance) {\n            this._tooltipInstance._mouseLeaveHideDelay = this._hideDelay;\n        }\n    }\n    /** The message to be displayed in the tooltip */\n    get message() {\n        return this._message;\n    }\n    set message(value) {\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message, 'tooltip');\n        // If the message is not a string (e.g. number), convert it to a string and trim it.\n        // Must convert with `String(value)`, not `${value}`, otherwise Closure Compiler optimises\n        // away the string-conversion: https://github.com/angular/components/issues/20684\n        this._message = value != null ? String(value).trim() : '';\n        if (!this._message && this._isTooltipVisible()) {\n            this.hide(0);\n        }\n        else {\n            this._setupPointerEnterEventsIfNeeded();\n            this._updateTooltipMessage();\n            this._ngZone.runOutsideAngular(() => {\n                // The `AriaDescriber` has some functionality that avoids adding a description if it's the\n                // same as the `aria-label` of an element, however we can't know whether the tooltip trigger\n                // has a data-bound `aria-label` or when it'll be set for the first time. We can avoid the\n                // issue by deferring the description by a tick so Angular has time to set the `aria-label`.\n                Promise.resolve().then(() => {\n                    this._ariaDescriber.describe(this._elementRef.nativeElement, this.message, 'tooltip');\n                });\n            });\n        }\n    }\n    /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */\n    get tooltipClass() {\n        return this._tooltipClass;\n    }\n    set tooltipClass(value) {\n        this._tooltipClass = value;\n        if (this._tooltipInstance) {\n            this._setTooltipClass(this._tooltipClass);\n        }\n    }\n    constructor(_overlay, _elementRef, _scrollDispatcher, _viewContainerRef, _ngZone, _platform, _ariaDescriber, _focusMonitor, scrollStrategy, _dir, _defaultOptions, _document) {\n        this._overlay = _overlay;\n        this._elementRef = _elementRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._ariaDescriber = _ariaDescriber;\n        this._focusMonitor = _focusMonitor;\n        this._dir = _dir;\n        this._defaultOptions = _defaultOptions;\n        this._position = 'below';\n        this._positionAtOrigin = false;\n        this._disabled = false;\n        this._viewInitialized = false;\n        this._pointerExitEventsInitialized = false;\n        this._tooltipComponent = TooltipComponent;\n        this._viewportMargin = 8;\n        this._cssClassPrefix = 'mat-mdc';\n        /**\n         * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n         * uses a long press gesture to show and hide, however it can conflict with the native browser\n         * gestures. To work around the conflict, Angular Material disables native gestures on the\n         * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n         * elements). The different values for this option configure the touch event handling as follows:\n         * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n         *   browser gestures on particular elements. In particular, it allows text selection on inputs\n         *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n         * - `on` - Enables touch gestures for all elements and disables native\n         *   browser gestures with no exceptions.\n         * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n         *   showing on touch devices.\n         */\n        this.touchGestures = 'auto';\n        this._message = '';\n        /** Manually-bound passive event listeners. */\n        this._passiveListeners = [];\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        this._scrollStrategy = scrollStrategy;\n        this._document = _document;\n        if (_defaultOptions) {\n            this._showDelay = _defaultOptions.showDelay;\n            this._hideDelay = _defaultOptions.hideDelay;\n            if (_defaultOptions.position) {\n                this.position = _defaultOptions.position;\n            }\n            if (_defaultOptions.positionAtOrigin) {\n                this.positionAtOrigin = _defaultOptions.positionAtOrigin;\n            }\n            if (_defaultOptions.touchGestures) {\n                this.touchGestures = _defaultOptions.touchGestures;\n            }\n        }\n        _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            if (this._overlayRef) {\n                this._updatePosition(this._overlayRef);\n            }\n        });\n        this._viewportMargin = MIN_VIEWPORT_TOOLTIP_THRESHOLD;\n    }\n    ngAfterViewInit() {\n        // This needs to happen after view init so the initial values for all inputs have been set.\n        this._viewInitialized = true;\n        this._setupPointerEnterEventsIfNeeded();\n        this._focusMonitor\n            .monitor(this._elementRef)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(origin => {\n            // Note that the focus monitor runs outside the Angular zone.\n            if (!origin) {\n                this._ngZone.run(() => this.hide(0));\n            }\n            else if (origin === 'keyboard') {\n                this._ngZone.run(() => this.show());\n            }\n        });\n    }\n    /**\n     * Dispose the tooltip when destroyed.\n     */\n    ngOnDestroy() {\n        const nativeElement = this._elementRef.nativeElement;\n        clearTimeout(this._touchstartTimeout);\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._tooltipInstance = null;\n        }\n        // Clean up the event listeners set in the constructor\n        this._passiveListeners.forEach(([event, listener]) => {\n            nativeElement.removeEventListener(event, listener, passiveListenerOptions);\n        });\n        this._passiveListeners.length = 0;\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._ariaDescriber.removeDescription(nativeElement, this.message, 'tooltip');\n        this._focusMonitor.stopMonitoring(nativeElement);\n    }\n    /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n    show(delay = this.showDelay, origin) {\n        if (this.disabled || !this.message || this._isTooltipVisible()) {\n            this._tooltipInstance?._cancelPendingAnimations();\n            return;\n        }\n        const overlayRef = this._createOverlay(origin);\n        this._detach();\n        this._portal =\n            this._portal || new ComponentPortal(this._tooltipComponent, this._viewContainerRef);\n        const instance = (this._tooltipInstance = overlayRef.attach(this._portal).instance);\n        instance._triggerElement = this._elementRef.nativeElement;\n        instance._mouseLeaveHideDelay = this._hideDelay;\n        instance\n            .afterHidden()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        this._setTooltipClass(this._tooltipClass);\n        this._updateTooltipMessage();\n        instance.show(delay);\n    }\n    /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n    hide(delay = this.hideDelay) {\n        const instance = this._tooltipInstance;\n        if (instance) {\n            if (instance.isVisible()) {\n                instance.hide(delay);\n            }\n            else {\n                instance._cancelPendingAnimations();\n                this._detach();\n            }\n        }\n    }\n    /** Shows/hides the tooltip */\n    toggle(origin) {\n        this._isTooltipVisible() ? this.hide() : this.show(undefined, origin);\n    }\n    /** Returns true if the tooltip is currently visible to the user */\n    _isTooltipVisible() {\n        return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n    }\n    /** Create the overlay config and position strategy */\n    _createOverlay(origin) {\n        if (this._overlayRef) {\n            const existingStrategy = this._overlayRef.getConfig()\n                .positionStrategy;\n            if ((!this.positionAtOrigin || !origin) && existingStrategy._origin instanceof ElementRef) {\n                return this._overlayRef;\n            }\n            this._detach();\n        }\n        const scrollableAncestors = this._scrollDispatcher.getAncestorScrollContainers(this._elementRef);\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this._overlay\n            .position()\n            .flexibleConnectedTo(this.positionAtOrigin ? origin || this._elementRef : this._elementRef)\n            .withTransformOriginOn(`.${this._cssClassPrefix}-tooltip`)\n            .withFlexibleDimensions(false)\n            .withViewportMargin(this._viewportMargin)\n            .withScrollableContainers(scrollableAncestors);\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n            this._updateCurrentPositionClass(change.connectionPair);\n            if (this._tooltipInstance) {\n                if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run(() => this.hide(0));\n                }\n            }\n        });\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: `${this._cssClassPrefix}-${PANEL_CLASS}`,\n            scrollStrategy: this._scrollStrategy(),\n        });\n        this._updatePosition(this._overlayRef);\n        this._overlayRef\n            .detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        this._overlayRef\n            .outsidePointerEvents()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._tooltipInstance?._handleBodyInteraction());\n        this._overlayRef\n            .keydownEvents()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(event => {\n            if (this._isTooltipVisible() && event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                this._ngZone.run(() => this.hide(0));\n            }\n        });\n        if (this._defaultOptions?.disableTooltipInteractivity) {\n            this._overlayRef.addPanelClass(`${this._cssClassPrefix}-tooltip-panel-non-interactive`);\n        }\n        return this._overlayRef;\n    }\n    /** Detaches the currently-attached tooltip. */\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n        this._tooltipInstance = null;\n    }\n    /** Updates the position of the current tooltip. */\n    _updatePosition(overlayRef) {\n        const position = overlayRef.getConfig().positionStrategy;\n        const origin = this._getOrigin();\n        const overlay = this._getOverlayPosition();\n        position.withPositions([\n            this._addOffset({ ...origin.main, ...overlay.main }),\n            this._addOffset({ ...origin.fallback, ...overlay.fallback }),\n        ]);\n    }\n    /** Adds the configured offset to a position. Used as a hook for child classes. */\n    _addOffset(position) {\n        const offset = UNBOUNDED_ANCHOR_GAP;\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        if (position.originY === 'top') {\n            position.offsetY = -offset;\n        }\n        else if (position.originY === 'bottom') {\n            position.offsetY = offset;\n        }\n        else if (position.originX === 'start') {\n            position.offsetX = isLtr ? -offset : offset;\n        }\n        else if (position.originX === 'end') {\n            position.offsetX = isLtr ? offset : -offset;\n        }\n        return position;\n    }\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    _getOrigin() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let originPosition;\n        if (position == 'above' || position == 'below') {\n            originPosition = { originX: 'center', originY: position == 'above' ? 'top' : 'bottom' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            originPosition = { originX: 'start', originY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            originPosition = { originX: 'end', originY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(originPosition.originX, originPosition.originY);\n        return {\n            main: originPosition,\n            fallback: { originX: x, originY: y },\n        };\n    }\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    _getOverlayPosition() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let overlayPosition;\n        if (position == 'above') {\n            overlayPosition = { overlayX: 'center', overlayY: 'bottom' };\n        }\n        else if (position == 'below') {\n            overlayPosition = { overlayX: 'center', overlayY: 'top' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            overlayPosition = { overlayX: 'end', overlayY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            overlayPosition = { overlayX: 'start', overlayY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n        return {\n            main: overlayPosition,\n            fallback: { overlayX: x, overlayY: y },\n        };\n    }\n    /** Updates the tooltip message and repositions the overlay according to the new message length */\n    _updateTooltipMessage() {\n        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n        // calculate the correct positioning based on the size of the text.\n        if (this._tooltipInstance) {\n            this._tooltipInstance.message = this.message;\n            this._tooltipInstance._markForCheck();\n            this._ngZone.onMicrotaskEmpty.pipe(take(1), takeUntil(this._destroyed)).subscribe(() => {\n                if (this._tooltipInstance) {\n                    this._overlayRef.updatePosition();\n                }\n            });\n        }\n    }\n    /** Updates the tooltip class */\n    _setTooltipClass(tooltipClass) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.tooltipClass = tooltipClass;\n            this._tooltipInstance._markForCheck();\n        }\n    }\n    /** Inverts an overlay position. */\n    _invertPosition(x, y) {\n        if (this.position === 'above' || this.position === 'below') {\n            if (y === 'top') {\n                y = 'bottom';\n            }\n            else if (y === 'bottom') {\n                y = 'top';\n            }\n        }\n        else {\n            if (x === 'end') {\n                x = 'start';\n            }\n            else if (x === 'start') {\n                x = 'end';\n            }\n        }\n        return { x, y };\n    }\n    /** Updates the class on the overlay panel based on the current position of the tooltip. */\n    _updateCurrentPositionClass(connectionPair) {\n        const { overlayY, originX, originY } = connectionPair;\n        let newPosition;\n        // If the overlay is in the middle along the Y axis,\n        // it means that it's either before or after.\n        if (overlayY === 'center') {\n            // Note that since this information is used for styling, we want to\n            // resolve `start` and `end` to their real values, otherwise consumers\n            // would have to remember to do it themselves on each consumption.\n            if (this._dir && this._dir.value === 'rtl') {\n                newPosition = originX === 'end' ? 'left' : 'right';\n            }\n            else {\n                newPosition = originX === 'start' ? 'left' : 'right';\n            }\n        }\n        else {\n            newPosition = overlayY === 'bottom' && originY === 'top' ? 'above' : 'below';\n        }\n        if (newPosition !== this._currentPosition) {\n            const overlayRef = this._overlayRef;\n            if (overlayRef) {\n                const classPrefix = `${this._cssClassPrefix}-${PANEL_CLASS}-`;\n                overlayRef.removePanelClass(classPrefix + this._currentPosition);\n                overlayRef.addPanelClass(classPrefix + newPosition);\n            }\n            this._currentPosition = newPosition;\n        }\n    }\n    /** Binds the pointer events to the tooltip trigger. */\n    _setupPointerEnterEventsIfNeeded() {\n        // Optimization: Defer hooking up events if there's no message or the tooltip is disabled.\n        if (this._disabled ||\n            !this.message ||\n            !this._viewInitialized ||\n            this._passiveListeners.length) {\n            return;\n        }\n        // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n        // first tap from firing its click event or can cause the tooltip to open for clicks.\n        if (this._platformSupportsMouseEvents()) {\n            this._passiveListeners.push([\n                'mouseenter',\n                event => {\n                    this._setupPointerExitEventsIfNeeded();\n                    let point = undefined;\n                    if (event.x !== undefined && event.y !== undefined) {\n                        point = event;\n                    }\n                    this.show(undefined, point);\n                },\n            ]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            this._passiveListeners.push([\n                'touchstart',\n                event => {\n                    const touch = event.targetTouches?.[0];\n                    const origin = touch ? { x: touch.clientX, y: touch.clientY } : undefined;\n                    // Note that it's important that we don't `preventDefault` here,\n                    // because it can prevent click events from firing on the element.\n                    this._setupPointerExitEventsIfNeeded();\n                    clearTimeout(this._touchstartTimeout);\n                    const DEFAULT_LONGPRESS_DELAY = 500;\n                    this._touchstartTimeout = setTimeout(() => this.show(undefined, origin), this._defaultOptions.touchLongPressShowDelay ?? DEFAULT_LONGPRESS_DELAY);\n                },\n            ]);\n        }\n        this._addListeners(this._passiveListeners);\n    }\n    _setupPointerExitEventsIfNeeded() {\n        if (this._pointerExitEventsInitialized) {\n            return;\n        }\n        this._pointerExitEventsInitialized = true;\n        const exitListeners = [];\n        if (this._platformSupportsMouseEvents()) {\n            exitListeners.push([\n                'mouseleave',\n                event => {\n                    const newTarget = event.relatedTarget;\n                    if (!newTarget || !this._overlayRef?.overlayElement.contains(newTarget)) {\n                        this.hide();\n                    }\n                },\n            ], ['wheel', event => this._wheelListener(event)]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            const touchendListener = () => {\n                clearTimeout(this._touchstartTimeout);\n                this.hide(this._defaultOptions.touchendHideDelay);\n            };\n            exitListeners.push(['touchend', touchendListener], ['touchcancel', touchendListener]);\n        }\n        this._addListeners(exitListeners);\n        this._passiveListeners.push(...exitListeners);\n    }\n    _addListeners(listeners) {\n        listeners.forEach(([event, listener]) => {\n            this._elementRef.nativeElement.addEventListener(event, listener, passiveListenerOptions);\n        });\n    }\n    _platformSupportsMouseEvents() {\n        return !this._platform.IOS && !this._platform.ANDROID;\n    }\n    /** Listener for the `wheel` event on the element. */\n    _wheelListener(event) {\n        if (this._isTooltipVisible()) {\n            const elementUnderPointer = this._document.elementFromPoint(event.clientX, event.clientY);\n            const element = this._elementRef.nativeElement;\n            // On non-touch devices we depend on the `mouseleave` event to close the tooltip, but it\n            // won't fire if the user scrolls away using the wheel without moving their cursor. We\n            // work around it by finding the element under the user's cursor and closing the tooltip\n            // if it's not the trigger.\n            if (elementUnderPointer !== element && !element.contains(elementUnderPointer)) {\n                this.hide();\n            }\n        }\n    }\n    /** Disables the native browser gestures, based on how the tooltip has been configured. */\n    _disableNativeGesturesIfNecessary() {\n        const gestures = this.touchGestures;\n        if (gestures !== 'off') {\n            const element = this._elementRef.nativeElement;\n            const style = element.style;\n            // If gestures are set to `auto`, we don't disable text selection on inputs and\n            // textareas, because it prevents the user from typing into them on iOS Safari.\n            if (gestures === 'on' || (element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA')) {\n                style.userSelect =\n                    style.msUserSelect =\n                        style.webkitUserSelect =\n                            style.MozUserSelect =\n                                'none';\n            }\n            // If we have `auto` gestures and the element uses native HTML dragging,\n            // we don't set `-webkit-user-drag` because it prevents the native behavior.\n            if (gestures === 'on' || !element.draggable) {\n                style.webkitUserDrag = 'none';\n            }\n            style.touchAction = 'none';\n            style.webkitTapHighlightColor = 'transparent';\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatTooltip, deps: [{ token: i1.Overlay }, { token: i0.ElementRef }, { token: i1.ScrollDispatcher }, { token: i0.ViewContainerRef }, { token: i0.NgZone }, { token: i2.Platform }, { token: i3.AriaDescriber }, { token: i3.FocusMonitor }, { token: MAT_TOOLTIP_SCROLL_STRATEGY }, { token: i4.Directionality }, { token: MAT_TOOLTIP_DEFAULT_OPTIONS, optional: true }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.2.0\", type: MatTooltip, isStandalone: true, selector: \"[matTooltip]\", inputs: { position: [\"matTooltipPosition\", \"position\"], positionAtOrigin: [\"matTooltipPositionAtOrigin\", \"positionAtOrigin\"], disabled: [\"matTooltipDisabled\", \"disabled\"], showDelay: [\"matTooltipShowDelay\", \"showDelay\"], hideDelay: [\"matTooltipHideDelay\", \"hideDelay\"], touchGestures: [\"matTooltipTouchGestures\", \"touchGestures\"], message: [\"matTooltip\", \"message\"], tooltipClass: [\"matTooltipClass\", \"tooltipClass\"] }, host: { properties: { \"class.mat-mdc-tooltip-disabled\": \"disabled\" }, classAttribute: \"mat-mdc-tooltip-trigger\" }, exportAs: [\"matTooltip\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatTooltip, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTooltip]',\n                    exportAs: 'matTooltip',\n                    host: {\n                        'class': 'mat-mdc-tooltip-trigger',\n                        '[class.mat-mdc-tooltip-disabled]': 'disabled',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i1.Overlay }, { type: i0.ElementRef }, { type: i1.ScrollDispatcher }, { type: i0.ViewContainerRef }, { type: i0.NgZone }, { type: i2.Platform }, { type: i3.AriaDescriber }, { type: i3.FocusMonitor }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_TOOLTIP_SCROLL_STRATEGY]\n                }] }, { type: i4.Directionality }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_TOOLTIP_DEFAULT_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }], propDecorators: { position: [{\n                type: Input,\n                args: ['matTooltipPosition']\n            }], positionAtOrigin: [{\n                type: Input,\n                args: ['matTooltipPositionAtOrigin']\n            }], disabled: [{\n                type: Input,\n                args: ['matTooltipDisabled']\n            }], showDelay: [{\n                type: Input,\n                args: ['matTooltipShowDelay']\n            }], hideDelay: [{\n                type: Input,\n                args: ['matTooltipHideDelay']\n            }], touchGestures: [{\n                type: Input,\n                args: ['matTooltipTouchGestures']\n            }], message: [{\n                type: Input,\n                args: ['matTooltip']\n            }], tooltipClass: [{\n                type: Input,\n                args: ['matTooltipClass']\n            }] } });\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\nclass TooltipComponent {\n    constructor(_changeDetectorRef, _elementRef, animationMode) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        /* Whether the tooltip text overflows to multiple lines */\n        this._isMultiline = false;\n        /** Whether interactions on the page should close the tooltip */\n        this._closeOnInteraction = false;\n        /** Whether the tooltip is currently visible. */\n        this._isVisible = false;\n        /** Subject for notifying that the tooltip has been hidden from the view */\n        this._onHide = new Subject();\n        /** Name of the show animation and the class that toggles it. */\n        this._showAnimation = 'mat-mdc-tooltip-show';\n        /** Name of the hide animation and the class that toggles it. */\n        this._hideAnimation = 'mat-mdc-tooltip-hide';\n        this._animationsDisabled = animationMode === 'NoopAnimations';\n    }\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param delay Amount of milliseconds to the delay showing the tooltip.\n     */\n    show(delay) {\n        // Cancel the delayed hide if it is scheduled\n        if (this._hideTimeoutId != null) {\n            clearTimeout(this._hideTimeoutId);\n        }\n        this._showTimeoutId = setTimeout(() => {\n            this._toggleVisibility(true);\n            this._showTimeoutId = undefined;\n        }, delay);\n    }\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param delay Amount of milliseconds to delay showing the tooltip.\n     */\n    hide(delay) {\n        // Cancel the delayed show if it is scheduled\n        if (this._showTimeoutId != null) {\n            clearTimeout(this._showTimeoutId);\n        }\n        this._hideTimeoutId = setTimeout(() => {\n            this._toggleVisibility(false);\n            this._hideTimeoutId = undefined;\n        }, delay);\n    }\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden() {\n        return this._onHide;\n    }\n    /** Whether the tooltip is being displayed. */\n    isVisible() {\n        return this._isVisible;\n    }\n    ngOnDestroy() {\n        this._cancelPendingAnimations();\n        this._onHide.complete();\n        this._triggerElement = null;\n    }\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.io/design/components/tooltips.html#behavior\n     */\n    _handleBodyInteraction() {\n        if (this._closeOnInteraction) {\n            this.hide(0);\n        }\n    }\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     */\n    _markForCheck() {\n        this._changeDetectorRef.markForCheck();\n    }\n    _handleMouseLeave({ relatedTarget }) {\n        if (!relatedTarget || !this._triggerElement.contains(relatedTarget)) {\n            if (this.isVisible()) {\n                this.hide(this._mouseLeaveHideDelay);\n            }\n            else {\n                this._finalizeAnimation(false);\n            }\n        }\n    }\n    /**\n     * Callback for when the timeout in this.show() gets completed.\n     * This method is only needed by the mdc-tooltip, and so it is only implemented\n     * in the mdc-tooltip, not here.\n     */\n    _onShow() {\n        this._isMultiline = this._isTooltipMultiline();\n        this._markForCheck();\n    }\n    /** Whether the tooltip text has overflown to the next line */\n    _isTooltipMultiline() {\n        const rect = this._elementRef.nativeElement.getBoundingClientRect();\n        return rect.height > MIN_HEIGHT && rect.width >= MAX_WIDTH;\n    }\n    /** Event listener dispatched when an animation on the tooltip finishes. */\n    _handleAnimationEnd({ animationName }) {\n        if (animationName === this._showAnimation || animationName === this._hideAnimation) {\n            this._finalizeAnimation(animationName === this._showAnimation);\n        }\n    }\n    /** Cancels any pending animation sequences. */\n    _cancelPendingAnimations() {\n        if (this._showTimeoutId != null) {\n            clearTimeout(this._showTimeoutId);\n        }\n        if (this._hideTimeoutId != null) {\n            clearTimeout(this._hideTimeoutId);\n        }\n        this._showTimeoutId = this._hideTimeoutId = undefined;\n    }\n    /** Handles the cleanup after an animation has finished. */\n    _finalizeAnimation(toVisible) {\n        if (toVisible) {\n            this._closeOnInteraction = true;\n        }\n        else if (!this.isVisible()) {\n            this._onHide.next();\n        }\n    }\n    /** Toggles the visibility of the tooltip element. */\n    _toggleVisibility(isVisible) {\n        // We set the classes directly here ourselves so that toggling the tooltip state\n        // isn't bound by change detection. This allows us to hide it even if the\n        // view ref has been detached from the CD tree.\n        const tooltip = this._tooltip.nativeElement;\n        const showClass = this._showAnimation;\n        const hideClass = this._hideAnimation;\n        tooltip.classList.remove(isVisible ? hideClass : showClass);\n        tooltip.classList.add(isVisible ? showClass : hideClass);\n        if (this._isVisible !== isVisible) {\n            this._isVisible = isVisible;\n            this._changeDetectorRef.markForCheck();\n        }\n        // It's common for internal apps to disable animations using `* { animation: none !important }`\n        // which can break the opening sequence. Try to detect such cases and work around them.\n        if (isVisible && !this._animationsDisabled && typeof getComputedStyle === 'function') {\n            const styles = getComputedStyle(tooltip);\n            // Use `getPropertyValue` to avoid issues with property renaming.\n            if (styles.getPropertyValue('animation-duration') === '0s' ||\n                styles.getPropertyValue('animation-name') === 'none') {\n                this._animationsDisabled = true;\n            }\n        }\n        if (isVisible) {\n            this._onShow();\n        }\n        if (this._animationsDisabled) {\n            tooltip.classList.add('_mat-animation-noopable');\n            this._finalizeAnimation(isVisible);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: TooltipComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.0\", type: TooltipComponent, isStandalone: true, selector: \"mat-tooltip-component\", host: { attributes: { \"aria-hidden\": \"true\" }, listeners: { \"mouseleave\": \"_handleMouseLeave($event)\" }, properties: { \"style.zoom\": \"isVisible() ? 1 : null\" } }, viewQueries: [{ propertyName: \"_tooltip\", first: true, predicate: [\"tooltip\"], descendants: true, static: true }], ngImport: i0, template: \"<div\\n  #tooltip\\n  class=\\\"mdc-tooltip mdc-tooltip--shown mat-mdc-tooltip\\\"\\n  [ngClass]=\\\"tooltipClass\\\"\\n  (animationend)=\\\"_handleAnimationEnd($event)\\\"\\n  [class.mdc-tooltip--multiline]=\\\"_isMultiline\\\">\\n  <div class=\\\"mdc-tooltip__surface mdc-tooltip__surface-animation\\\">{{message}}</div>\\n</div>\\n\", styles: [\".mdc-tooltip__surface{word-break:break-all;word-break:var(--mdc-tooltip-word-break, normal);overflow-wrap:anywhere}.mdc-tooltip--showing-transition .mdc-tooltip__surface-animation{transition:opacity 150ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-tooltip--hide-transition .mdc-tooltip__surface-animation{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-tooltip{position:fixed;display:none;z-index:9}.mdc-tooltip-wrapper--rich{position:relative}.mdc-tooltip--shown,.mdc-tooltip--showing,.mdc-tooltip--hide{display:inline-flex}.mdc-tooltip--shown.mdc-tooltip--rich,.mdc-tooltip--showing.mdc-tooltip--rich,.mdc-tooltip--hide.mdc-tooltip--rich{display:inline-block;left:-320px;position:absolute}.mdc-tooltip__surface{line-height:16px;padding:4px 8px;min-width:40px;max-width:200px;min-height:24px;max-height:40vh;box-sizing:border-box;overflow:hidden;text-align:center}.mdc-tooltip__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-tooltip__surface::before{border-color:CanvasText}}.mdc-tooltip--rich .mdc-tooltip__surface{align-items:flex-start;display:flex;flex-direction:column;min-height:24px;min-width:40px;max-width:320px;position:relative}.mdc-tooltip--multiline .mdc-tooltip__surface{text-align:left}[dir=rtl] .mdc-tooltip--multiline .mdc-tooltip__surface,.mdc-tooltip--multiline .mdc-tooltip__surface[dir=rtl]{text-align:right}.mdc-tooltip__surface .mdc-tooltip__title{margin:0 8px}.mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(200px - 2*8px);margin:8px;text-align:left}[dir=rtl] .mdc-tooltip__surface .mdc-tooltip__content,.mdc-tooltip__surface .mdc-tooltip__content[dir=rtl]{text-align:right}.mdc-tooltip--rich .mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(320px - 2*8px);align-self:stretch}.mdc-tooltip__surface .mdc-tooltip__content-link{text-decoration:none}.mdc-tooltip--rich-actions,.mdc-tooltip__content,.mdc-tooltip__title{z-index:1}.mdc-tooltip__surface-animation{opacity:0;transform:scale(0.8);will-change:transform,opacity}.mdc-tooltip--shown .mdc-tooltip__surface-animation{transform:scale(1);opacity:1}.mdc-tooltip--hide .mdc-tooltip__surface-animation{transform:scale(1)}.mdc-tooltip__caret-surface-top,.mdc-tooltip__caret-surface-bottom{position:absolute;height:24px;width:24px;transform:rotate(35deg) skewY(20deg) scaleX(0.9396926208)}.mdc-tooltip__caret-surface-top .mdc-elevation-overlay,.mdc-tooltip__caret-surface-bottom .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-tooltip__caret-surface-bottom{box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);outline:1px solid rgba(0,0,0,0);z-index:-1}@media screen and (forced-colors: active){.mdc-tooltip__caret-surface-bottom{outline-color:CanvasText}}.mat-mdc-tooltip .mdc-tooltip__surface{background-color:var(--mdc-plain-tooltip-container-color)}.mat-mdc-tooltip .mdc-tooltip__surface{border-radius:var(--mdc-plain-tooltip-container-shape)}.mat-mdc-tooltip .mdc-tooltip__caret-surface-top,.mat-mdc-tooltip .mdc-tooltip__caret-surface-bottom{border-radius:var(--mdc-plain-tooltip-container-shape)}.mat-mdc-tooltip .mdc-tooltip__surface{color:var(--mdc-plain-tooltip-supporting-text-color)}.mat-mdc-tooltip .mdc-tooltip__surface{font-family:var(--mdc-plain-tooltip-supporting-text-font);line-height:var(--mdc-plain-tooltip-supporting-text-line-height);font-size:var(--mdc-plain-tooltip-supporting-text-size);font-weight:var(--mdc-plain-tooltip-supporting-text-weight);letter-spacing:var(--mdc-plain-tooltip-supporting-text-tracking)}.mat-mdc-tooltip{position:relative;transform:scale(0)}.mat-mdc-tooltip::before{content:\\\"\\\";top:0;right:0;bottom:0;left:0;z-index:-1;position:absolute}.mat-mdc-tooltip-panel-below .mat-mdc-tooltip::before{top:-8px}.mat-mdc-tooltip-panel-above .mat-mdc-tooltip::before{bottom:-8px}.mat-mdc-tooltip-panel-right .mat-mdc-tooltip::before{left:-8px}.mat-mdc-tooltip-panel-left .mat-mdc-tooltip::before{right:-8px}.mat-mdc-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.mat-mdc-tooltip-panel.mat-mdc-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-mdc-tooltip-show{0%{opacity:0;transform:scale(0.8)}100%{opacity:1;transform:scale(1)}}@keyframes mat-mdc-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.8)}}.mat-mdc-tooltip-show{animation:mat-mdc-tooltip-show 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-mdc-tooltip-hide{animation:mat-mdc-tooltip-hide 75ms cubic-bezier(0.4, 0, 1, 1) forwards}\"], dependencies: [{ kind: \"directive\", type: NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: TooltipComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tooltip-component', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n                        // won't be rendered if the animations are disabled or there is no web animations polyfill.\n                        '[style.zoom]': 'isVisible() ? 1 : null',\n                        '(mouseleave)': '_handleMouseLeave($event)',\n                        'aria-hidden': 'true',\n                    }, standalone: true, imports: [NgClass], template: \"<div\\n  #tooltip\\n  class=\\\"mdc-tooltip mdc-tooltip--shown mat-mdc-tooltip\\\"\\n  [ngClass]=\\\"tooltipClass\\\"\\n  (animationend)=\\\"_handleAnimationEnd($event)\\\"\\n  [class.mdc-tooltip--multiline]=\\\"_isMultiline\\\">\\n  <div class=\\\"mdc-tooltip__surface mdc-tooltip__surface-animation\\\">{{message}}</div>\\n</div>\\n\", styles: [\".mdc-tooltip__surface{word-break:break-all;word-break:var(--mdc-tooltip-word-break, normal);overflow-wrap:anywhere}.mdc-tooltip--showing-transition .mdc-tooltip__surface-animation{transition:opacity 150ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-tooltip--hide-transition .mdc-tooltip__surface-animation{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-tooltip{position:fixed;display:none;z-index:9}.mdc-tooltip-wrapper--rich{position:relative}.mdc-tooltip--shown,.mdc-tooltip--showing,.mdc-tooltip--hide{display:inline-flex}.mdc-tooltip--shown.mdc-tooltip--rich,.mdc-tooltip--showing.mdc-tooltip--rich,.mdc-tooltip--hide.mdc-tooltip--rich{display:inline-block;left:-320px;position:absolute}.mdc-tooltip__surface{line-height:16px;padding:4px 8px;min-width:40px;max-width:200px;min-height:24px;max-height:40vh;box-sizing:border-box;overflow:hidden;text-align:center}.mdc-tooltip__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-tooltip__surface::before{border-color:CanvasText}}.mdc-tooltip--rich .mdc-tooltip__surface{align-items:flex-start;display:flex;flex-direction:column;min-height:24px;min-width:40px;max-width:320px;position:relative}.mdc-tooltip--multiline .mdc-tooltip__surface{text-align:left}[dir=rtl] .mdc-tooltip--multiline .mdc-tooltip__surface,.mdc-tooltip--multiline .mdc-tooltip__surface[dir=rtl]{text-align:right}.mdc-tooltip__surface .mdc-tooltip__title{margin:0 8px}.mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(200px - 2*8px);margin:8px;text-align:left}[dir=rtl] .mdc-tooltip__surface .mdc-tooltip__content,.mdc-tooltip__surface .mdc-tooltip__content[dir=rtl]{text-align:right}.mdc-tooltip--rich .mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(320px - 2*8px);align-self:stretch}.mdc-tooltip__surface .mdc-tooltip__content-link{text-decoration:none}.mdc-tooltip--rich-actions,.mdc-tooltip__content,.mdc-tooltip__title{z-index:1}.mdc-tooltip__surface-animation{opacity:0;transform:scale(0.8);will-change:transform,opacity}.mdc-tooltip--shown .mdc-tooltip__surface-animation{transform:scale(1);opacity:1}.mdc-tooltip--hide .mdc-tooltip__surface-animation{transform:scale(1)}.mdc-tooltip__caret-surface-top,.mdc-tooltip__caret-surface-bottom{position:absolute;height:24px;width:24px;transform:rotate(35deg) skewY(20deg) scaleX(0.9396926208)}.mdc-tooltip__caret-surface-top .mdc-elevation-overlay,.mdc-tooltip__caret-surface-bottom .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-tooltip__caret-surface-bottom{box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);outline:1px solid rgba(0,0,0,0);z-index:-1}@media screen and (forced-colors: active){.mdc-tooltip__caret-surface-bottom{outline-color:CanvasText}}.mat-mdc-tooltip .mdc-tooltip__surface{background-color:var(--mdc-plain-tooltip-container-color)}.mat-mdc-tooltip .mdc-tooltip__surface{border-radius:var(--mdc-plain-tooltip-container-shape)}.mat-mdc-tooltip .mdc-tooltip__caret-surface-top,.mat-mdc-tooltip .mdc-tooltip__caret-surface-bottom{border-radius:var(--mdc-plain-tooltip-container-shape)}.mat-mdc-tooltip .mdc-tooltip__surface{color:var(--mdc-plain-tooltip-supporting-text-color)}.mat-mdc-tooltip .mdc-tooltip__surface{font-family:var(--mdc-plain-tooltip-supporting-text-font);line-height:var(--mdc-plain-tooltip-supporting-text-line-height);font-size:var(--mdc-plain-tooltip-supporting-text-size);font-weight:var(--mdc-plain-tooltip-supporting-text-weight);letter-spacing:var(--mdc-plain-tooltip-supporting-text-tracking)}.mat-mdc-tooltip{position:relative;transform:scale(0)}.mat-mdc-tooltip::before{content:\\\"\\\";top:0;right:0;bottom:0;left:0;z-index:-1;position:absolute}.mat-mdc-tooltip-panel-below .mat-mdc-tooltip::before{top:-8px}.mat-mdc-tooltip-panel-above .mat-mdc-tooltip::before{bottom:-8px}.mat-mdc-tooltip-panel-right .mat-mdc-tooltip::before{left:-8px}.mat-mdc-tooltip-panel-left .mat-mdc-tooltip::before{right:-8px}.mat-mdc-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.mat-mdc-tooltip-panel.mat-mdc-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-mdc-tooltip-show{0%{opacity:0;transform:scale(0.8)}100%{opacity:1;transform:scale(1)}}@keyframes mat-mdc-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.8)}}.mat-mdc-tooltip-show{animation:mat-mdc-tooltip-show 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-mdc-tooltip-hide{animation:mat-mdc-tooltip-hide 75ms cubic-bezier(0.4, 0, 1, 1) forwards}\"] }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }], propDecorators: { _tooltip: [{\n                type: ViewChild,\n                args: ['tooltip', {\n                        // Use a static query here since we interact directly with\n                        // the DOM which can happen before `ngAfterViewInit`.\n                        static: true,\n                    }]\n            }] } });\n\n/**\n * Animations used by MatTooltip.\n * @docs-private\n */\nconst matTooltipAnimations = {\n    /** Animation that transitions a tooltip in and out. */\n    tooltipState: trigger('state', [\n        // TODO(crisbeto): these values are based on MDC's CSS.\n        // We should be able to use their styles directly once we land #19432.\n        state('initial, void, hidden', style({ opacity: 0, transform: 'scale(0.8)' })),\n        state('visible', style({ transform: 'scale(1)' })),\n        transition('* => visible', animate('150ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => hidden', animate('75ms cubic-bezier(0.4, 0, 1, 1)')),\n    ]),\n};\n\nclass MatTooltipModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatTooltipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.2.0\", ngImport: i0, type: MatTooltipModule, imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule, MatTooltip, TooltipComponent], exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatTooltipModule, providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule, MatCommonModule, CdkScrollableModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatTooltipModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule, MatTooltip, TooltipComponent],\n                    exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule],\n                    providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TOOLTIP_DEFAULT_OPTIONS, MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER, MatTooltip, MatTooltipModule, SCROLL_THROTTLE_MS, TOOLTIP_PANEL_CLASS, TooltipComponent, getMatTooltipInvalidPositionError, matTooltipAnimations };\n"],"names":["HttpParams","BehaviorSubject","throwError","tap","catchError","environment","FondoService","constructor","http","apiUrl","fondosSubject","fondos$","asObservable","obtenerFondos","tipo","console","log","params","set","get","pipe","fondos","next","localStorage","setItem","JSON","stringify","error","mensaje","status","message","obtenerFondoPorId","id","crearFondo","fondo","post","nuevoFondo","fondosActuales","value","actualizarFondo","patch","fondoActualizado","index","findIndex","f","_id","eliminarFondo","delete","response","fondosFiltrados","filter","obtenerEstadisticasFondo","obtenerEstadisticasGenerales","obtenerTiposFondo","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn","A11yModule","i1$1","Overlay","OverlayConfig","OverlayRef","OverlayModule","Platform","_getFocusedElementPierceShadowDom","BasePortalOutlet","CdkPortalOutlet","ComponentPortal","TemplatePortal","PortalModule","DOCUMENT","inject","ChangeDetectorRef","Component","ViewEncapsulation","ChangeDetectionStrategy","Optional","Inject","ViewChild","InjectionToken","Injector","TemplateRef","Injectable","SkipSelf","NgModule","ESCAPE","hasModifierKey","Subject","defer","of","Directionality","startWith","CdkDialogContainer_ng_template_0_Template","rf","ctx","DialogConfig","role","panelClass","hasBackdrop","backdropClass","disableClose","width","height","data","ariaDescribedBy","ariaLabelledBy","ariaLabel","ariaModal","autoFocus","restoreFocus","closeOnNavigation","closeOnDestroy","closeOnOverlayDetachments","throwDialogContentAlreadyAttachedError","Error","CdkDialogContainer","_elementRef","_focusTrapFactory","_document","_config","_interactivityChecker","_ngZone","_overlayRef","_focusMonitor","_platform","_focusTrap","_elementFocusedBeforeDialogWasOpened","_closeInteractionType","_ariaLabelledByQueue","_changeDetectorRef","attachDomPortal","portal","_portalOutlet","hasAttached","ngDevMode","result","_contentAttached","push","_addAriaLabelledBy","markForCheck","_removeAriaLabelledBy","indexOf","splice","_initializeFocusTrap","_handleBackdropClicks","_captureInitialFocus","_trapFocus","ngOnDestroy","_restoreFocus","attachComponentPortal","attachTemplatePortal","_recaptureFocus","_containsFocus","_forceFocus","element","options","isFocusable","tabIndex","runOutsideAngular","callback","removeEventListener","removeAttribute","addEventListener","focus","_focusByCssSelector","selector","elementToFocus","nativeElement","querySelector","focusInitialElementWhenReady","then","focusedSuccessfully","_focusDialogContainer","focusConfig","focusTargetElement","activeElement","body","contains","focusVia","destroy","isBrowser","create","backdropClick","subscribe","CdkDialogContainer_Factory","t","ɵɵdirectiveInject","ElementRef","FocusTrapFactory","InteractivityChecker","NgZone","FocusMonitor","ɵcmp","ɵɵdefineComponent","type","selectors","viewQuery","CdkDialogContainer_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostAttrs","hostVars","hostBindings","CdkDialogContainer_HostBindings","ɵɵattribute","standalone","features","ɵɵInheritDefinitionFeature","ɵɵStandaloneFeature","decls","vars","consts","template","CdkDialogContainer_Template","ɵɵtemplate","dependencies","styles","encapsulation","ɵsetClassMetadata","args","None","changeDetection","Default","imports","host","undefined","decorators","static","DialogRef","overlayRef","config","closed","keydownEvents","outsidePointerEvents","event","keyCode","preventDefault","close","focusOrigin","_detachSubscription","detachments","containerInstance","closedSubject","unsubscribe","dispose","complete","componentInstance","updatePosition","updateSize","addPanelClass","classes","removePanelClass","DIALOG_SCROLL_STRATEGY","overlay","scrollStrategies","block","DIALOG_DATA","DEFAULT_DIALOG_CONFIG","DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY","DIALOG_SCROLL_STRATEGY_PROVIDER","provide","deps","useFactory","uniqueId","Dialog","openDialogs","_parentDialog","_openDialogsAtThisLevel","afterOpened","_afterOpenedAtThisLevel","_overlay","_injector","_defaultOptions","_overlayContainer","scrollStrategy","_afterAllClosedAtThisLevel","_ariaHiddenElements","Map","afterAllClosed","length","_getAfterAllClosed","_scrollStrategy","open","componentOrTemplateRef","defaults","getDialogById","overlayConfig","_getOverlayConfig","dialogRef","dialogContainer","_attachContainer","_attachDialogContent","_hideNonDialogContentFromAssistiveTechnology","_removeOpenDialog","closeAll","reverseForEach","dialog","find","state","positionStrategy","position","global","centerHorizontally","centerVertically","direction","minWidth","minHeight","maxWidth","maxHeight","disposeOnNavigation","userInjector","injector","viewContainerRef","providers","useValue","containerType","container","containerPortal","parent","componentFactoryResolver","containerRef","attach","instance","_createInjector","context","$implicit","templateContext","contentRef","componentRef","fallbackInjector","optional","change","emitEvent","forEach","previousValue","setAttribute","clear","overlayContainer","getContainerElement","parentElement","siblings","children","i","sibling","nodeName","hasAttribute","getAttribute","Dialog_Factory","OverlayContainer","ɵprov","ɵɵdefineInjectable","token","items","DialogModule","DialogModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","exports","i2","EventEmitter","ANIMATION_MODULE_TYPE","Directive","Input","coerceNumberProperty","merge","take","MatCommonModule","trigger","style","transition","group","animate","query","animateChild","MatDialogContainer_ng_template_2_Template","MatDialogConfig","delayFocusTrap","OPEN_CLASS","OPENING_CLASS","CLOSING_CLASS","OPEN_ANIMATION_DURATION","CLOSE_ANIMATION_DURATION","MatDialogContainer","elementRef","focusTrapFactory","dialogConfig","interactivityChecker","ngZone","_animationMode","focusMonitor","_animationStateChanged","_animationsEnabled","_actionSectionCount","_hostElement","_enterAnimationDuration","parseCssTime","enterAnimationDuration","_exitAnimationDuration","exitAnimationDuration","_animationTimer","_finishDialogOpen","_clearAnimationClasses","_openAnimationDone","_finishDialogClose","emit","totalTime","_startOpenAnimation","setProperty","TRANSITION_DURATION_PROPERTY","_requestAnimationFrame","classList","add","_waitForAnimationToComplete","Promise","resolve","_startExitAnimation","remove","_updateActionSectionCount","delta","duration","clearTimeout","setTimeout","requestAnimationFrame","ref","location","MatDialogContainer_Factory","MatDialogContainer_HostBindings","ɵɵhostProperty","ɵɵclassProp","MatDialogContainer_Template","ɵɵelementStart","ɵɵelementEnd","time","endsWith","substring","MatDialogState","MatDialogRef","_ref","_containerInstance","_afterOpened","_beforeClosed","_state","OPEN","_closeFallbackTimeout","_result","_closeDialogVia","dialogResult","detachBackdrop","CLOSING","afterClosed","beforeClosed","strategy","left","right","top","bottom","getState","CLOSED","interactionType","MAT_DIALOG_DATA","MAT_DIALOG_DEFAULT_OPTIONS","MAT_DIALOG_SCROLL_STRATEGY","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER","MatDialog","dialogConfigClass","_dialog","_dialogRefConstructor","_dialogContainerType","_dialogDataToken","cdkRef","cdkConfig","_closeDialogs","dialogs","MatDialog_Factory","Location","dialogElementUid","MatDialogClose","ngOnInit","getClosestDialog","ngOnChanges","changes","proxiedChange","currentValue","_onButtonClick","screenX","screenY","MatDialogClose_Factory","ɵdir","ɵɵdefineDirective","MatDialogClose_HostBindings","ɵɵlistener","MatDialogClose_click_HostBindingHandler","$event","inputs","ɵɵInputFlags","_matDialogClose","exportAs","ɵɵNgOnChangesFeature","MatDialogLayoutSection","_dialogRef","_onAdd","_onRemove","MatDialogLayoutSection_Factory","MatDialogTitle","arguments","ɵMatDialogTitle_BaseFactory","MatDialogTitle_Factory","ɵɵgetInheritedFactory","MatDialogTitle_HostBindings","MatDialogContent","MatDialogContent_Factory","MatDialogActions","ɵMatDialogActions_BaseFactory","MatDialogActions_Factory","MatDialogActions_HostBindings","align","DIRECTIVES","MatDialogModule","MatDialogModule_Factory","_defaultParams","matDialogAnimations","opacity","transform","takeUntil","coerceBooleanProperty","NgClass","CommonModule","normalizePassiveListenerOptions","i3","i4","CdkScrollableModule","_c0","SCROLL_THROTTLE_MS","getMatTooltipInvalidPositionError","MAT_TOOLTIP_SCROLL_STRATEGY","reposition","scrollThrottle","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY","showDelay","hideDelay","touchendHideDelay","MAT_TOOLTIP_DEFAULT_OPTIONS","TOOLTIP_PANEL_CLASS","PANEL_CLASS","passiveListenerOptions","passive","MIN_VIEWPORT_TOOLTIP_THRESHOLD","UNBOUNDED_ANCHOR_GAP","MIN_HEIGHT","MAX_WIDTH","MatTooltip","_position","_updatePosition","_tooltipInstance","show","positionAtOrigin","_positionAtOrigin","_detach","disabled","_disabled","hide","_setupPointerEnterEventsIfNeeded","_showDelay","_hideDelay","_mouseLeaveHideDelay","_message","_ariaDescriber","removeDescription","String","trim","_isTooltipVisible","_updateTooltipMessage","describe","tooltipClass","_tooltipClass","_setTooltipClass","_scrollDispatcher","_viewContainerRef","_dir","_viewInitialized","_pointerExitEventsInitialized","_tooltipComponent","TooltipComponent","_viewportMargin","_cssClassPrefix","touchGestures","_passiveListeners","_destroyed","ngAfterViewInit","monitor","origin","run","_touchstartTimeout","listener","stopMonitoring","delay","_cancelPendingAnimations","_createOverlay","_portal","_triggerElement","afterHidden","isVisible","toggle","existingStrategy","getConfig","_origin","scrollableAncestors","getAncestorScrollContainers","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withScrollableContainers","positionChanges","_updateCurrentPositionClass","connectionPair","scrollableViewProperties","isOverlayClipped","_handleBodyInteraction","stopPropagation","disableTooltipInteractivity","detach","_getOrigin","_getOverlayPosition","withPositions","_addOffset","main","fallback","offset","isLtr","originY","offsetY","originX","offsetX","originPosition","x","y","_invertPosition","overlayPosition","overlayX","overlayY","_markForCheck","onMicrotaskEmpty","newPosition","_currentPosition","classPrefix","_platformSupportsMouseEvents","_setupPointerExitEventsIfNeeded","point","_disableNativeGesturesIfNecessary","touch","targetTouches","clientX","clientY","DEFAULT_LONGPRESS_DELAY","touchLongPressShowDelay","_addListeners","exitListeners","newTarget","relatedTarget","overlayElement","_wheelListener","touchendListener","listeners","IOS","ANDROID","elementUnderPointer","elementFromPoint","gestures","userSelect","msUserSelect","webkitUserSelect","MozUserSelect","draggable","webkitUserDrag","touchAction","webkitTapHighlightColor","MatTooltip_Factory","ScrollDispatcher","ViewContainerRef","AriaDescriber","MatTooltip_HostBindings","animationMode","_isMultiline","_closeOnInteraction","_isVisible","_onHide","_showAnimation","_hideAnimation","_animationsDisabled","_hideTimeoutId","_showTimeoutId","_toggleVisibility","_handleMouseLeave","_finalizeAnimation","_onShow","_isTooltipMultiline","rect","getBoundingClientRect","_handleAnimationEnd","animationName","toVisible","tooltip","_tooltip","showClass","hideClass","getComputedStyle","getPropertyValue","TooltipComponent_Factory","TooltipComponent_Query","TooltipComponent_HostBindings","TooltipComponent_mouseleave_HostBindingHandler","ɵɵstyleProp","TooltipComponent_Template","_r1","ɵɵgetCurrentView","TooltipComponent_Template_div_animationend_0_listener","ɵɵrestoreView","ɵɵresetView","ɵɵtext","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate","OnPush","matTooltipAnimations","tooltipState","MatTooltipModule","MatTooltipModule_Factory"],"sourceRoot":"webpack:///","x_google_ignoreList":[1,2,3]}