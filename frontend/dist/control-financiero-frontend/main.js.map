{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.config.ts","./src/app/app.routes.ts","./src/app/core/guards/auth.guard.ts","./src/app/core/interceptors/auth.interceptor.ts","./src/app/core/interceptors/error.interceptor.ts","./src/app/core/services/auth.service.ts","./src/app/core/services/notification.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterOutlet, RouterModule, Router } from '@angular/router';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatSidenavModule, MatSidenav } from '@angular/material/sidenav';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\nimport { Observable } from 'rxjs';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\n\r\nimport { AuthService } from './core/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    RouterOutlet,\r\n    RouterModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatListModule,\r\n    MatMenuModule\r\n  ],\r\n  template: `\r\n    <!-- Mostrar layout completo solo si está autenticado -->\r\n    <div *ngIf=\"authService.isLoggedIn$ | async; else loginView\">\r\n      <mat-sidenav-container class=\"sidenav-container\">\r\n        <mat-sidenav \r\n          #drawer \r\n          class=\"sidenav\" \r\n          fixedInViewport\r\n          [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\r\n          [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\r\n          [opened]=\"!(isHandset$ | async)\">\r\n          \r\n          <mat-toolbar class=\"sidenav-header\">\r\n            <span>Control Financiero</span>\r\n            <button mat-icon-button (click)=\"drawer.close()\" *ngIf=\"isHandset$ | async\">\r\n              <mat-icon>close</mat-icon>\r\n            </button>\r\n          </mat-toolbar>\r\n          \r\n          <mat-nav-list>\r\n            <a mat-list-item \r\n               routerLink=\"/dashboard\" \r\n               routerLinkActive=\"active-link\"\r\n               (click)=\"closeDrawerOnMobile()\">\r\n              <mat-icon matListItemIcon>dashboard</mat-icon>\r\n              <span matListItemTitle>Dashboard</span>\r\n            </a>\r\n            \r\n            <a mat-list-item \r\n               routerLink=\"/transacciones\" \r\n               routerLinkActive=\"active-link\"\r\n               (click)=\"closeDrawerOnMobile()\">\r\n              <mat-icon matListItemIcon>account_balance_wallet</mat-icon>\r\n              <span matListItemTitle>Transacciones</span>\r\n            </a>\r\n            \r\n            <a mat-list-item \r\n               routerLink=\"/fondos\" \r\n               routerLinkActive=\"active-link\"\r\n               (click)=\"closeDrawerOnMobile()\">\r\n              <mat-icon matListItemIcon>savings</mat-icon>\r\n              <span matListItemTitle>Fondos</span>\r\n            </a>\r\n            \r\n            <a mat-list-item \r\n               routerLink=\"/reportes\" \r\n               routerLinkActive=\"active-link\"\r\n               (click)=\"closeDrawerOnMobile()\">\r\n              <mat-icon matListItemIcon>assessment</mat-icon>\r\n              <span matListItemTitle>Reportes Financieros</span>\r\n            </a>\r\n\r\n            <mat-divider></mat-divider>\r\n\r\n            <a mat-list-item (click)=\"logout()\">\r\n              <mat-icon matListItemIcon>logout</mat-icon>\r\n              <span matListItemTitle>Cerrar Sesión</span>\r\n            </a>\r\n          </mat-nav-list>\r\n        </mat-sidenav>\r\n        \r\n        <mat-sidenav-content>\r\n          <mat-toolbar color=\"primary\" class=\"main-toolbar\">\r\n            <button\r\n              type=\"button\"\r\n              aria-label=\"Toggle sidenav\"\r\n              mat-icon-button\r\n              (click)=\"drawer.toggle()\">\r\n              <mat-icon>menu</mat-icon>\r\n            </button>\r\n            \r\n            <span class=\"app-title\">Control Financiero</span>\r\n            <span class=\"spacer\"></span>\r\n            \r\n            <span class=\"user-info\" *ngIf=\"authService.currentUser$ | async as user\">\r\n              <mat-icon>account_circle</mat-icon>\r\n              {{ user.nombre }}\r\n            </span>\r\n            \r\n            <button mat-icon-button [matMenuTriggerFor]=\"userMenu\">\r\n              <mat-icon>more_vert</mat-icon>\r\n            </button>\r\n            \r\n            <mat-menu #userMenu=\"matMenu\">\r\n              <button mat-menu-item (click)=\"logout()\">\r\n                <mat-icon>logout</mat-icon>\r\n                <span>Cerrar Sesión</span>\r\n              </button>\r\n            </mat-menu>\r\n          </mat-toolbar>\r\n          \r\n          <div class=\"main-content\">\r\n            <router-outlet></router-outlet>\r\n          </div>\r\n        </mat-sidenav-content>\r\n      </mat-sidenav-container>\r\n    </div>\r\n\r\n    <!-- Vista de login -->\r\n    <ng-template #loginView>\r\n      <router-outlet></router-outlet>\r\n    </ng-template>\r\n  `,\r\n  styles: [`\r\n    .sidenav-container {\r\n      height: 100vh;\r\n    }\r\n    \r\n    .sidenav {\r\n      width: 260px;\r\n      box-shadow: 3px 0 6px rgba(0,0,0,.24);\r\n    }\r\n    \r\n    .sidenav-header {\r\n      background: #1976d2;\r\n      color: white;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      padding: 0 16px;\r\n    }\r\n    \r\n    .main-toolbar {\r\n      position: sticky;\r\n      top: 0;\r\n      z-index: 1000;\r\n      box-shadow: 0 2px 4px rgba(0,0,0,.1);\r\n    }\r\n    \r\n    .app-title {\r\n      font-weight: 500;\r\n      margin-left: 8px;\r\n    }\r\n    \r\n    .main-content {\r\n      padding: 20px;\r\n      min-height: calc(100vh - 64px);\r\n      background-color: #fafafa;\r\n    }\r\n    \r\n    .active-link {\r\n      background-color: rgba(63, 81, 181, 0.1) !important;\r\n      border-right: 3px solid #3f51b5;\r\n    }\r\n    \r\n    .active-link .mat-list-item-icon {\r\n      color: #3f51b5;\r\n    }\r\n\r\n    .user-info {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n      font-size: 0.9em;\r\n      margin-right: 8px;\r\n    }\r\n    \r\n    .spacer {\r\n      flex: 1 1 auto;\r\n    }\r\n\r\n    mat-nav-list .mat-list-item {\r\n      border-radius: 0 25px 25px 0;\r\n      margin: 4px 8px 4px 0;\r\n      transition: all 0.3s ease;\r\n    }\r\n\r\n    mat-nav-list .mat-list-item:hover {\r\n      background-color: rgba(0, 0, 0, 0.04);\r\n    }\r\n    \r\n    @media (max-width: 768px) {\r\n      .sidenav {\r\n        width: 280px;\r\n      }\r\n      \r\n      .main-content {\r\n        padding: 16px;\r\n        min-height: calc(100vh - 56px);\r\n      }\r\n\r\n      .user-info span {\r\n        display: none;\r\n      }\r\n\r\n      .app-title {\r\n        font-size: 1.1em;\r\n      }\r\n    }\r\n\r\n    @media (max-width: 480px) {\r\n      .user-info {\r\n        display: none;\r\n      }\r\n    }\r\n  `]\r\n})\r\nexport class AppComponent implements OnInit {\r\n  @ViewChild('drawer') drawer!: MatSidenav;\r\n  title = 'Control Financiero';\r\n\r\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map(result => result.matches),\r\n      shareReplay()\r\n    );\r\n\r\n  constructor(\r\n    private breakpointObserver: BreakpointObserver,\r\n    private router: Router,\r\n    public authService: AuthService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // Verificar autenticación al iniciar\r\n    this.authService.isLoggedIn$.subscribe(isLoggedIn => {\r\n      if (!isLoggedIn && !this.router.url.includes('login') && !this.router.url.includes('register')) {\r\n        this.router.navigate(['/login']);\r\n      }\r\n    });\r\n  }\r\n\r\n  closeDrawerOnMobile(): void {\r\n    this.isHandset$.subscribe(isHandset => {\r\n      if (isHandset && this.drawer) {\r\n        this.drawer.close();\r\n      }\r\n    });\r\n  }\r\n\r\n  logout(): void {\r\n    this.authService.logout();\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n","import { ApplicationConfig, importProvidersFrom } from '@angular/core';\nimport { provideRouter } from '@angular/router';\nimport { provideAnimations } from '@angular/platform-browser/animations';\nimport { provideHttpClient, withInterceptors } from '@angular/common/http';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\nimport { routes } from './app.routes';\nimport { authInterceptor } from './core/interceptors/auth.interceptor';\nimport { errorInterceptor } from './core/interceptors/error.interceptor';\n\nexport const appConfig: ApplicationConfig = {\n  providers: [\n    provideRouter(routes),\n    provideAnimations(),\n    provideHttpClient(\n      withInterceptors([authInterceptor, errorInterceptor])\n    ),\n    importProvidersFrom(\n      MatNativeDateModule,\n      MatSnackBarModule\n    )\n  ]\n};\n","import { Routes } from '@angular/router';\r\nimport { AuthGuard } from './core/guards/auth.guard';\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: '/login',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'login',\r\n    loadComponent: () => import('./features/auth/login.component').then(m => m.LoginComponent)\r\n  },\r\n  {\r\n    path: 'register',\r\n    loadComponent: () => import('./features/auth/register.component').then(m => m.RegisterComponent)\r\n  },\r\n  {\r\n    path: 'dashboard',\r\n    loadComponent: () => import('./features/dashboard/dashboard.component').then(m => m.DashboardComponent),\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'transacciones',\r\n    loadComponent: () => import('./features/transacciones/transacciones.component').then(m => m.TransaccionesComponent),\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'fondos',\r\n    loadComponent: () => import('./features/fondos/fondos.component').then(m => m.FondosComponent),\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'reportes',\r\n    loadComponent: () => import('./features/reportes/reportes.component').then(m => m.ReportesComponent),\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: '/login'\r\n  }\r\n];\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  \n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> {\n    \n    return this.authService.isLoggedIn$.pipe(\n      take(1),\n      map(isLoggedIn => {\n        if (isLoggedIn) {\n          return true;\n        } else {\n          // Redirigir a login guardando la URL original\n          this.router.navigate(['/login'], { \n            queryParams: { returnUrl: state.url } \n          });\n          return false;\n        }\n      })\n    );\n  }\n}\n","import { HttpInterceptorFn, HttpErrorResponse } from '@angular/common/http';\nimport { inject } from '@angular/core';\nimport { catchError, throwError } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { environment } from '../../../environments/environment';\n\nexport const authInterceptor: HttpInterceptorFn = (req, next) => {\n  const router = inject(Router);\n  \n  let authReq = req;\n  \n  // Solo agregar el token a las peticiones a nuestra API\n  if (req.url.includes(environment.apiUrl)) {\n    const token = localStorage.getItem('cf_auth_token');\n    \n    if (token) {\n      authReq = req.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n    }\n  }\n  \n  return next(authReq).pipe(\n    catchError((error: HttpErrorResponse) => {\n      // Solo manejar errores 401 para endpoints críticos\n      if (error.status === 401 && error.url?.includes('/perfil')) {\n        localStorage.clear();\n        router.navigate(['/login']);\n      }\n      \n      return throwError(() => error);\n    })\n  );\n};\n","import { HttpInterceptorFn, HttpErrorResponse } from '@angular/common/http';\r\nimport { inject } from '@angular/core';\r\nimport { catchError, throwError } from 'rxjs';\r\nimport { NotificationService } from '../services/notification.service';\r\n\r\nexport const errorInterceptor: HttpInterceptorFn = (req, next) => {\r\n  const notificationService = inject(NotificationService);\r\n  \r\n  return next(req).pipe(\r\n    catchError((error: HttpErrorResponse) => {\r\n      console.error('🔥 Error HTTP Global:', {\r\n        status: error.status,\r\n        url: error.url,\r\n        message: error.message,\r\n        error: error.error\r\n      });\r\n      \r\n      // Manejar errores específicos que no fueron manejados por otros interceptores\r\n      if (error.status === 404) {\r\n        notificationService.warning('Recurso no encontrado');\r\n      } else if (error.status === 400) {\r\n        const message = error.error?.message || 'Datos inválidos';\r\n        notificationService.error(message);\r\n      }\r\n      \r\n      return throwError(() => error);\r\n    })\r\n  );\r\n};\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, BehaviorSubject, throwError, of } from 'rxjs';\nimport { tap, catchError, map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { environment } from '../../../environments/environment';\n\nexport interface Usuario {\n  id: string;\n  nombre: string;\n  apellido?: string;\n  email: string;\n  rol?: string;\n  telefono?: string;\n  avatar?: string;\n  fechaRegistro?: Date;\n  ultimoLogin?: Date;\n}\n\nexport interface LoginDto {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterDto {\n  nombre: string;\n  apellido?: string;\n  email: string;\n  password: string;\n  telefono?: string;\n}\n\nexport interface AuthResponse {\n  access_token: string;\n  usuario: Usuario; // CORREGIDO: 'usuario' en lugar de 'user'\n  expires_in?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private apiUrl = `${environment.apiUrl}/auth`;\n  private currentUserSubject = new BehaviorSubject<Usuario | null>(null);\n  private isLoggedInSubject = new BehaviorSubject<boolean>(false);\n  \n  public currentUser$ = this.currentUserSubject.asObservable();\n  public isLoggedIn$ = this.isLoggedInSubject.asObservable();\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) {\n    this.verificarSesionExistente();\n  }\n\n  /**\n   * Verificar si hay una sesión activa al inicializar el servicio\n   */\n  private verificarSesionExistente(): void {\n    const token = this.getToken();\n    if (token && this.isTokenValid(token)) {\n      console.log('🔍 Verificando token existente con el servidor...');\n      \n      // Verificar si el token es válido obteniendo el perfil\n      this.obtenerPerfil().subscribe({\n        next: (user) => {\n          console.log('✅ Token válido, usuario autenticado:', user);\n          this.currentUserSubject.next(user);\n          this.isLoggedInSubject.next(true);\n        },\n        error: (error) => {\n          console.error('❌ Token inválido, limpiando sesión:', error);\n          this.limpiarSesion();\n        }\n      });\n    } else {\n      console.log('🚫 No hay token válido guardado');\n      this.limpiarSesion();\n    }\n  }\n\n  private isTokenValid(token: string): boolean {\n    try {\n      const payload = this.decodeToken(token);\n      const now = Date.now() / 1000;\n      return payload.exp > now;\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * Iniciar sesión\n   */\n  login(credentials: LoginDto): Observable<AuthResponse> {\n    console.log('🔐 Intentando login con:', { email: credentials.email });\n    \n    return this.http.post<AuthResponse>(`${this.apiUrl}/login`, credentials)\n      .pipe(\n        tap(response => {\n          console.log('✅ Login exitoso - respuesta completa:', response);\n          console.log('🎩 Token recibido:', response.access_token.substring(0, 20) + '...');\n          console.log('👤 Usuario recibido:', response.usuario);\n          \n          this.setToken(response.access_token);\n          this.currentUserSubject.next(response.usuario);\n          this.isLoggedInSubject.next(true);\n          \n          console.log('💾 Token guardado en localStorage');\n          console.log('📋 Estado actualizado - isLoggedIn: true');\n        }),\n        catchError(error => {\n          console.error('❌ Error en login - NO se usará fallback:', error);\n          \n          let mensaje = 'Error de autenticación';\n          if (error.status === 0) {\n            mensaje = 'No se puede conectar con el servidor. Verifica que el backend esté ejecutándose.';\n          } else if (error.status === 401) {\n            mensaje = 'Credenciales incorrectas. Verifica tu email y contraseña.';\n          } else if (error.status === 500) {\n            mensaje = 'Error interno del servidor. Verifica que MongoDB esté ejecutándose.';\n          }\n          \n          return throwError(() => ({\n            ...error,\n            message: mensaje\n          }));\n        })\n      );\n  }\n\n  /**\n   * Registrar nuevo usuario\n   */\n  register(userData: RegisterDto): Observable<AuthResponse> {\n    console.log('📝 Intentando registro con:', { email: userData.email, nombre: userData.nombre });\n    \n    return this.http.post<AuthResponse>(`${this.apiUrl}/registro`, userData)\n      .pipe(\n        tap(response => {\n          console.log('✅ Registro exitoso:', response);\n          this.setToken(response.access_token);\n          this.currentUserSubject.next(response.usuario);\n          this.isLoggedInSubject.next(true);\n        }),\n        catchError(error => {\n          console.error('❌ Error en registro - NO se usará fallback:', error);\n          \n          let mensaje = 'Error en el registro';\n          if (error.status === 0) {\n            mensaje = 'No se puede conectar con el servidor. Verifica que el backend esté ejecutándose.';\n          } else if (error.status === 400) {\n            mensaje = error.error?.message || 'Datos inválidos. Verifica la información ingresada.';\n          } else if (error.status === 500) {\n            mensaje = 'Error interno del servidor. Verifica que MongoDB esté ejecutándose.';\n          }\n          \n          return throwError(() => ({\n            ...error,\n            message: mensaje\n          }));\n        })\n      );\n  }\n\n  /**\n   * Obtener perfil del usuario actual\n   */\n  obtenerPerfil(): Observable<Usuario> {\n    return this.http.get<Usuario>(`${this.apiUrl}/perfil`)\n      .pipe(\n        catchError(error => {\n          console.error('Error al obtener perfil:', error);\n          throw error;\n        })\n      );\n  }\n\n  /**\n   * Verificar si un email está disponible\n   */\n  verificarEmailDisponible(email: string): Observable<boolean> {\n    if (!email || email.trim() === '') {\n      return of(true); // Email vacío se considera disponible\n    }\n    \n    return this.http.post<{disponible: boolean}>(`${this.apiUrl}/verificar-email`, { email })\n      .pipe(\n        map(response => response?.disponible ?? true),\n        catchError((error) => {\n          console.error('Error verificando email:', error);\n          return of(true); // En caso de error, asumir que está disponible\n        })\n      );\n  }\n\n  /**\n   * Cambiar contraseña\n   */\n  cambiarPassword(passwordActual: string, passwordNueva: string): Observable<{message: string}> {\n    return this.http.patch<{message: string}>(`${this.apiUrl}/cambiar-password`, {\n      passwordActual,\n      passwordNueva\n    });\n  }\n\n  /**\n   * Renovar token\n   */\n  renovarToken(): Observable<AuthResponse> {\n    return this.http.post<AuthResponse>(`${this.apiUrl}/renovar-token`, {})\n      .pipe(\n        tap(response => {\n          this.setToken(response.access_token);\n          this.currentUserSubject.next(response.usuario);\n        })\n      );\n  }\n\n  /**\n   * Cerrar sesión\n   */\n  logout(): void {\n    const token = this.getToken();\n    console.log('🚪 Cerrando sesión...');\n    \n    if (token) {\n      // Llamar al endpoint de logout\n      this.http.post(`${this.apiUrl}/logout`, {}).subscribe({\n        next: () => {\n          console.log('✅ Logout exitoso en servidor');\n          this.limpiarSesion();\n        },\n        error: (error) => {\n          console.error('❌ Error en logout del servidor:', error);\n          // Limpiar sesión local aunque falle el logout del servidor\n          this.limpiarSesion();\n        }\n      });\n    } else {\n      this.limpiarSesion();\n    }\n  }\n\n  /**\n   * Verificar si el usuario está autenticado\n   */\n  isAuthenticated(): boolean {\n    const token = this.getToken();\n    if (!token) {\n      console.log('🚫 isAuthenticated: No hay token');\n      return false;\n    }\n    \n    // Verificar si el token no ha expirado\n    try {\n      const payload = this.decodeToken(token);\n      const now = Date.now() / 1000;\n      const isValid = payload.exp > now;\n      \n      if (!isValid) {\n        console.log('⏰ Token expirado, limpiando sesión');\n        this.limpiarSesion();\n      } else {\n        console.log('✅ Token válido');\n      }\n      \n      return isValid;\n    } catch (error) {\n      console.error('❌ Error decodificando token:', error);\n      this.limpiarSesion();\n      return false;\n    }\n  }\n\n  /**\n   * Obtener token del localStorage\n   */\n  getToken(): string | null {\n    const token = localStorage.getItem('cf_auth_token');\n    // Solo hacer log cuando es necesario para debugging\n    return token;\n  }\n\n  /**\n   * Obtener usuario actual\n   */\n  getCurrentUser(): Usuario | null {\n    return this.currentUserSubject.value;\n  }\n\n  /**\n   * Guardar token en localStorage\n   */\n  private setToken(token: string): void {\n    console.log('💾 Guardando token en localStorage:', token.substring(0, 20) + '...');\n    localStorage.setItem('cf_auth_token', token);\n    console.log('✅ Token guardado exitosamente');\n  }\n\n  /**\n   * Limpiar sesión completa\n   */\n  private limpiarSesion(): void {\n    console.log('🧽 Limpiando sesión completa...');\n    localStorage.removeItem('cf_auth_token');\n    this.currentUserSubject.next(null);\n    this.isLoggedInSubject.next(false);\n    console.log('✅ Sesión limpiada - usuario deslogueado');\n  }\n\n  /**\n   * Decodificar token JWT (sin verificación)\n   */\n  private decodeToken(token: string): any {\n    try {\n      const payload = token.split('.')[1];\n      return JSON.parse(atob(payload));\n    } catch (error) {\n      console.error('Error decodificando token:', error);\n      return {};\n    }\n  }\n\n  /**\n   * Método para verificar conectividad con el backend\n   */\n  verificarConectividad(): Observable<boolean> {\n    // Intentar el endpoint de test de auth\n    return this.http.get(`${this.apiUrl}/test`, { responseType: 'json' })\n      .pipe(\n        map((response: any) => {\n          console.log('✅ Backend auth disponible:', response);\n          return true;\n        }),\n        catchError((error) => {\n          console.error('❌ Backend auth test falló:', error);\n          // Intentar endpoint básico de health\n          return this.http.get(`${environment.apiUrl}/health`, { responseType: 'json' })\n            .pipe(\n              map((response: any) => {\n                console.log('✅ Backend health disponible:', response);\n                return true;\n              }),\n              catchError((healthError) => {\n                console.error('❌ Backend completamente no disponible');\n                return of(false);\n              })\n            );\n        })\n      );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n  \n  constructor(private snackBar: MatSnackBar) {}\n\n  private show(message: string, type: string, duration: number = 3000): void {\n    const config: MatSnackBarConfig = {\n      duration,\n      horizontalPosition: 'right',\n      verticalPosition: 'top',\n      panelClass: [`snackbar-${type}`]\n    };\n\n    this.snackBar.open(message, 'Cerrar', config);\n  }\n\n  success(message: string, duration?: number): void {\n    this.show(message, 'success', duration);\n  }\n\n  error(message: string, duration?: number): void {\n    this.show(message, 'error', duration || 5000);\n  }\n\n  warning(message: string, duration?: number): void {\n    this.show(message, 'warning', duration || 4000);\n  }\n\n  info(message: string, duration?: number): void {\n    this.show(message, 'info', duration);\n  }\n}\n","export const environment = {\n  production: false,\n  apiUrl: 'http://localhost:3000/api'  // Cambiado para desarrollo local\n};\n","import { bootstrapApplication } from '@angular/platform-browser';\r\nimport { AppComponent } from './app/app.component';\r\nimport { appConfig } from './app/app.config';\r\n\r\nbootstrapApplication(AppComponent, appConfig)\r\n  .catch(err => console.error(err));\r\n"],"names":["CommonModule","RouterOutlet","RouterModule","MatToolbarModule","MatSidenavModule","MatIconModule","MatButtonModule","MatListModule","MatMenuModule","Breakpoints","map","shareReplay","i0","ɵɵelementStart","ɵɵlistener","AppComponent_div_0_button_10_Template_button_click_0_listener","ɵɵrestoreView","_r2","ɵɵnextContext","drawer_r3","ɵɵreference","ɵɵresetView","close","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","user_r5","nombre","ɵɵtemplate","AppComponent_div_0_button_10_Template","AppComponent_div_0_Template_a_click_13_listener","_r1","ctx_r3","closeDrawerOnMobile","AppComponent_div_0_Template_a_click_18_listener","AppComponent_div_0_Template_a_click_23_listener","AppComponent_div_0_Template_a_click_28_listener","ɵɵelement","AppComponent_div_0_Template_a_click_34_listener","logout","AppComponent_div_0_Template_button_click_41_listener","toggle","AppComponent_div_0_span_47_Template","AppComponent_div_0_Template_button_click_54_listener","ɵɵproperty","ɵɵpipeBind1","isHandset$","authService","currentUser$","userMenu_r6","AppComponent","constructor","breakpointObserver","router","title","observe","Handset","pipe","result","matches","ngOnInit","isLoggedIn$","subscribe","isLoggedIn","url","includes","navigate","isHandset","drawer","ɵɵdirectiveInject","i1","BreakpointObserver","i2","Router","i3","AuthService","selectors","viewQuery","AppComponent_Query","rf","ctx","AppComponent_div_0_Template","AppComponent_ng_template_2_Template","ɵɵtemplateRefExtractor","loginView_r7","i4","NgIf","AsyncPipe","RouterLink","RouterLinkActive","i5","MatToolbar","i6","MatSidenav","MatSidenavContainer","MatSidenavContent","i7","MatIcon","i8","MatIconButton","i9","MatNavList","MatListItem","MatListItemIcon","i10","MatDivider","MatListItemTitle","i11","MatMenu","MatMenuItem","MatMenuTrigger","styles","importProvidersFrom","provideRouter","provideAnimations","provideHttpClient","withInterceptors","MatNativeDateModule","MatSnackBarModule","routes","authInterceptor","errorInterceptor","appConfig","providers","AuthGuard","path","redirectTo","pathMatch","loadComponent","then","m","LoginComponent","RegisterComponent","DashboardComponent","canActivate","TransaccionesComponent","FondosComponent","ReportesComponent","take","route","state","queryParams","returnUrl","ɵɵinject","factory","ɵfac","providedIn","inject","catchError","throwError","environment","req","next","authReq","apiUrl","token","localStorage","getItem","clone","setHeaders","Authorization","error","status","clear","NotificationService","notificationService","console","message","warning","BehaviorSubject","of","tap","http","currentUserSubject","isLoggedInSubject","asObservable","verificarSesionExistente","getToken","isTokenValid","log","obtenerPerfil","user","limpiarSesion","payload","decodeToken","now","Date","exp","login","credentials","email","post","response","access_token","substring","usuario","setToken","mensaje","register","userData","get","verificarEmailDisponible","trim","disponible","cambiarPassword","passwordActual","passwordNueva","patch","renovarToken","isAuthenticated","isValid","getCurrentUser","value","setItem","removeItem","split","JSON","parse","atob","verificarConectividad","responseType","healthError","HttpClient","snackBar","show","type","duration","config","horizontalPosition","verticalPosition","panelClass","open","success","info","MatSnackBar","production","bootstrapApplication","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}