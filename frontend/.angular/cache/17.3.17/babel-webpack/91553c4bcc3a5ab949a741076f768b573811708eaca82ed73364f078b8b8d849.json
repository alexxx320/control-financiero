{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BaseChartDirective } from 'ng2-charts';\nimport { Subject } from 'rxjs';\nimport { takeUntil, finalize } from 'rxjs/operators';\nlet DashboardComponent = class DashboardComponent {\n  constructor(fb, dashboardService, fondoService, transaccionService) {\n    this.fb = fb;\n    this.dashboardService = dashboardService;\n    this.fondoService = fondoService;\n    this.transaccionService = transaccionService;\n    this.destroy$ = new Subject();\n    this.resumenFinanciero = null;\n    this.estadisticas = null;\n    this.fondos = [];\n    this.cargando = false;\n    // Configuración de gráficos\n    this.chartOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          position: 'top'\n        }\n      }\n    };\n    this.ingresosGastosData = {\n      labels: ['Ingresos', 'Gastos'],\n      datasets: [{\n        data: [0, 0],\n        backgroundColor: ['#4caf50', '#f44336'],\n        hoverBackgroundColor: ['#45a049', '#da190b']\n      }]\n    };\n    this.categoriesData = {\n      labels: [],\n      datasets: [{\n        label: 'Gastos por Categoría',\n        data: [],\n        backgroundColor: '#2196f3',\n        hoverBackgroundColor: '#1976d2'\n      }]\n    };\n    this.filtrosForm = this.fb.group({\n      fechaInicio: [null],\n      fechaFin: [null]\n    });\n  }\n  ngOnInit() {\n    this.cargarDatos();\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  cargarDatos() {\n    this.cargando = true;\n    // Cargar resumen financiero\n    this.dashboardService.obtenerResumenFinanciero().pipe(takeUntil(this.destroy$), finalize(() => this.cargando = false)).subscribe({\n      next: resumen => {\n        this.resumenFinanciero = resumen;\n        this.actualizarGraficos();\n      },\n      error: error => console.error('Error al cargar resumen:', error)\n    });\n    // Cargar estadísticas\n    this.dashboardService.obtenerEstadisticas().pipe(takeUntil(this.destroy$)).subscribe({\n      next: stats => this.estadisticas = stats,\n      error: error => console.error('Error al cargar estadísticas:', error)\n    });\n    // Cargar fondos\n    this.fondoService.obtenerFondos(true).pipe(takeUntil(this.destroy$)).subscribe({\n      next: fondos => this.fondos = fondos,\n      error: error => console.error('Error al cargar fondos:', error)\n    });\n  }\n  aplicarFiltros() {\n    const filtros = this.filtrosForm.value;\n    const fechaInicio = filtros.fechaInicio ? filtros.fechaInicio.toISOString().split('T')[0] : undefined;\n    const fechaFin = filtros.fechaFin ? filtros.fechaFin.toISOString().split('T')[0] : undefined;\n    this.dashboardService.obtenerResumenFinanciero(fechaInicio, fechaFin).pipe(takeUntil(this.destroy$)).subscribe({\n      next: resumen => {\n        this.resumenFinanciero = resumen;\n        this.actualizarGraficos();\n      },\n      error: error => console.error('Error al aplicar filtros:', error)\n    });\n  }\n  actualizarGraficos() {\n    if (!this.resumenFinanciero) return;\n    // Actualizar gráfico de ingresos vs gastos\n    this.ingresosGastosData.datasets[0].data = [this.resumenFinanciero.totalIngresos, this.resumenFinanciero.totalGastos];\n    // Actualizar gráfico de categorías\n    const categorias = this.resumenFinanciero.transaccionesPorCategoria.filter(cat => cat.tipo === 'gasto').slice(0, 10); // Mostrar solo las 10 principales\n    this.categoriesData.labels = categorias.map(cat => cat.categoria);\n    this.categoriesData.datasets[0].data = categorias.map(cat => cat.monto);\n  }\n  calcularProgreso(fondo) {\n    // Aquí deberías obtener el balance actual del fondo\n    // Por ahora retornamos un valor aleatorio para demostración\n    return Math.floor(Math.random() * 100);\n  }\n};\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  standalone: true,\n  imports: [CommonModule, MatCardModule, MatGridListModule, MatIconModule, MatButtonModule, MatProgressBarModule, MatSelectModule, MatFormFieldModule, MatDatepickerModule, MatNativeDateModule, FormsModule, ReactiveFormsModule, BaseChartDirective],\n  template: `\n    <div class=\"dashboard-container\">\n      <!-- Filtros -->\n      <mat-card class=\"filtros-card mb-2\">\n        <mat-card-header>\n          <mat-card-title>Filtros</mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <form [formGroup]=\"filtrosForm\" class=\"filtros-form\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label>Fecha Inicio</mat-label>\n              <input matInput [matDatepicker]=\"fechaInicioPicker\" formControlName=\"fechaInicio\">\n              <mat-datepicker-toggle matIconSuffix [for]=\"fechaInicioPicker\"></mat-datepicker-toggle>\n              <mat-datepicker #fechaInicioPicker></mat-datepicker>\n            </mat-form-field>\n            \n            <mat-form-field appearance=\"outline\">\n              <mat-label>Fecha Fin</mat-label>\n              <input matInput [matDatepicker]=\"fechaFinPicker\" formControlName=\"fechaFin\">\n              <mat-datepicker-toggle matIconSuffix [for]=\"fechaFinPicker\"></mat-datepicker-toggle>\n              <mat-datepicker #fechaFinPicker></mat-datepicker>\n            </mat-form-field>\n            \n            <button mat-raised-button color=\"primary\" (click)=\"aplicarFiltros()\">\n              Aplicar Filtros\n            </button>\n          </form>\n        </mat-card-content>\n      </mat-card>\n\n      <!-- Tarjetas de estadísticas -->\n      <div class=\"estadisticas-grid mb-2\">\n        <mat-card class=\"stat-card ingresos\">\n          <mat-card-content>\n            <div class=\"stat-content\">\n              <div class=\"stat-icon\">\n                <mat-icon>trending_up</mat-icon>\n              </div>\n              <div class=\"stat-info\">\n                <h3>{{ resumenFinanciero?.totalIngresos | currency:'COP':'symbol':'1.0-0' }}</h3>\n                <p>Total Ingresos</p>\n              </div>\n            </div>\n          </mat-card-content>\n        </mat-card>\n\n        <mat-card class=\"stat-card gastos\">\n          <mat-card-content>\n            <div class=\"stat-content\">\n              <div class=\"stat-icon\">\n                <mat-icon>trending_down</mat-icon>\n              </div>\n              <div class=\"stat-info\">\n                <h3>{{ resumenFinanciero?.totalGastos | currency:'COP':'symbol':'1.0-0' }}</h3>\n                <p>Total Gastos</p>\n              </div>\n            </div>\n          </mat-card-content>\n        </mat-card>\n\n        <mat-card class=\"stat-card balance\" [ngClass]=\"{'positive': resumenFinanciero?.balance >= 0, 'negative': resumenFinanciero?.balance < 0}\">\n          <mat-card-content>\n            <div class=\"stat-content\">\n              <div class=\"stat-icon\">\n                <mat-icon>account_balance</mat-icon>\n              </div>\n              <div class=\"stat-info\">\n                <h3>{{ resumenFinanciero?.balance | currency:'COP':'symbol':'1.0-0' }}</h3>\n                <p>Balance</p>\n              </div>\n            </div>\n          </mat-card-content>\n        </mat-card>\n\n        <mat-card class=\"stat-card fondos\">\n          <mat-card-content>\n            <div class=\"stat-content\">\n              <div class=\"stat-icon\">\n                <mat-icon>savings</mat-icon>\n              </div>\n              <div class=\"stat-info\">\n                <h3>{{ estadisticas?.fondosActivos || 0 }}</h3>\n                <p>Fondos Activos</p>\n              </div>\n            </div>\n          </mat-card-content>\n        </mat-card>\n      </div>\n\n      <!-- Gráficos -->\n      <div class=\"graficos-grid mb-2\">\n        <mat-card class=\"grafico-card\">\n          <mat-card-header>\n            <mat-card-title>Ingresos vs Gastos</mat-card-title>\n          </mat-card-header>\n          <mat-card-content>\n            <div class=\"chart-container\">\n              <canvas \n                baseChart\n                [data]=\"ingresosGastosData\"\n                [options]=\"chartOptions\"\n                [type]=\"'doughnut'\">\n              </canvas>\n            </div>\n          </mat-card-content>\n        </mat-card>\n\n        <mat-card class=\"grafico-card\">\n          <mat-card-header>\n            <mat-card-title>Gastos por Categoría</mat-card-title>\n          </mat-card-header>\n          <mat-card-content>\n            <div class=\"chart-container\">\n              <canvas \n                baseChart\n                [data]=\"categoriesData\"\n                [options]=\"chartOptions\"\n                [type]=\"'bar'\">\n              </canvas>\n            </div>\n          </mat-card-content>\n        </mat-card>\n      </div>\n\n      <!-- Fondos y progreso -->\n      <mat-card class=\"fondos-card\">\n        <mat-card-header>\n          <mat-card-title>Progreso de Fondos</mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <div class=\"fondos-list\">\n            <div *ngFor=\"let fondo of fondos\" class=\"fondo-item\">\n              <div class=\"fondo-info\">\n                <h4>{{ fondo.nombre }}</h4>\n                <p>{{ fondo.tipo | titlecase }}</p>\n              </div>\n              <div class=\"fondo-progreso\">\n                <mat-progress-bar \n                  mode=\"determinate\" \n                  [value]=\"calcularProgreso(fondo)\">\n                </mat-progress-bar>\n                <span class=\"progreso-text\">{{ calcularProgreso(fondo) }}%</span>\n              </div>\n            </div>\n          </div>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  `,\n  styles: [`\n    .dashboard-container {\n      max-width: 1200px;\n      margin: 0 auto;\n      padding: 20px;\n    }\n\n    .filtros-card {\n      margin-bottom: 20px;\n    }\n\n    .filtros-form {\n      display: flex;\n      gap: 16px;\n      align-items: center;\n      flex-wrap: wrap;\n    }\n\n    .filtros-form mat-form-field {\n      min-width: 200px;\n    }\n\n    .estadisticas-grid {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n      gap: 16px;\n      margin-bottom: 20px;\n    }\n\n    .stat-card {\n      border-left: 4px solid;\n    }\n\n    .stat-card.ingresos {\n      border-left-color: #4caf50;\n    }\n\n    .stat-card.gastos {\n      border-left-color: #f44336;\n    }\n\n    .stat-card.balance.positive {\n      border-left-color: #4caf50;\n    }\n\n    .stat-card.balance.negative {\n      border-left-color: #f44336;\n    }\n\n    .stat-card.fondos {\n      border-left-color: #2196f3;\n    }\n\n    .stat-content {\n      display: flex;\n      align-items: center;\n      gap: 16px;\n    }\n\n    .stat-icon {\n      background: rgba(0, 0, 0, 0.1);\n      border-radius: 50%;\n      padding: 12px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n\n    .stat-icon mat-icon {\n      font-size: 24px;\n      width: 24px;\n      height: 24px;\n    }\n\n    .stat-info h3 {\n      margin: 0;\n      font-size: 1.5em;\n      font-weight: 500;\n    }\n\n    .stat-info p {\n      margin: 4px 0 0;\n      color: rgba(0, 0, 0, 0.6);\n      font-size: 0.9em;\n    }\n\n    .graficos-grid {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\n      gap: 20px;\n      margin-bottom: 20px;\n    }\n\n    .chart-container {\n      position: relative;\n      height: 300px;\n      width: 100%;\n    }\n\n    .fondos-card {\n      margin-bottom: 20px;\n    }\n\n    .fondos-list {\n      display: flex;\n      flex-direction: column;\n      gap: 16px;\n    }\n\n    .fondo-item {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 16px;\n      border: 1px solid rgba(0, 0, 0, 0.1);\n      border-radius: 8px;\n    }\n\n    .fondo-info h4 {\n      margin: 0;\n      font-size: 1.1em;\n    }\n\n    .fondo-info p {\n      margin: 4px 0 0;\n      color: rgba(0, 0, 0, 0.6);\n      font-size: 0.9em;\n    }\n\n    .fondo-progreso {\n      display: flex;\n      align-items: center;\n      gap: 12px;\n      min-width: 200px;\n    }\n\n    .fondo-progreso mat-progress-bar {\n      flex: 1;\n    }\n\n    .progreso-text {\n      font-weight: 500;\n      min-width: 40px;\n      text-align: right;\n    }\n\n    @media (max-width: 768px) {\n      .dashboard-container {\n        padding: 16px;\n      }\n\n      .filtros-form {\n        flex-direction: column;\n        align-items: stretch;\n      }\n\n      .filtros-form mat-form-field {\n        min-width: auto;\n      }\n\n      .estadisticas-grid {\n        grid-template-columns: 1fr;\n      }\n\n      .graficos-grid {\n        grid-template-columns: 1fr;\n      }\n\n      .fondo-item {\n        flex-direction: column;\n        align-items: flex-start;\n        gap: 12px;\n      }\n\n      .fondo-progreso {\n        width: 100%;\n      }\n    }\n  `]\n})], DashboardComponent);\nexport { DashboardComponent };","map":{"version":3,"names":["Component","CommonModule","MatCardModule","MatGridListModule","MatIconModule","MatButtonModule","MatProgressBarModule","MatSelectModule","MatFormFieldModule","MatDatepickerModule","MatNativeDateModule","FormsModule","ReactiveFormsModule","BaseChartDirective","Subject","takeUntil","finalize","DashboardComponent","constructor","fb","dashboardService","fondoService","transaccionService","destroy$","resumenFinanciero","estadisticas","fondos","cargando","chartOptions","responsive","maintainAspectRatio","plugins","legend","position","ingresosGastosData","labels","datasets","data","backgroundColor","hoverBackgroundColor","categoriesData","label","filtrosForm","group","fechaInicio","fechaFin","ngOnInit","cargarDatos","ngOnDestroy","next","complete","obtenerResumenFinanciero","pipe","subscribe","resumen","actualizarGraficos","error","console","obtenerEstadisticas","stats","obtenerFondos","aplicarFiltros","filtros","value","toISOString","split","undefined","totalIngresos","totalGastos","categorias","transaccionesPorCategoria","filter","cat","tipo","slice","map","categoria","monto","calcularProgreso","fondo","Math","floor","random","__decorate","selector","standalone","imports","template","styles"],"sources":["C:\\Users\\alext\\ControlFinanciero\\frontend\\src\\app\\features\\dashboard\\dashboard.component.ts"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { FormsModule, FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { BaseChartDirective } from 'ng2-charts';\nimport { ChartConfiguration, ChartType } from 'chart.js';\nimport { Subject } from 'rxjs';\nimport { takeUntil, finalize } from 'rxjs/operators';\n\nimport { DashboardService } from '../../core/services/dashboard.service';\nimport { FondoService } from '../../core/services/fondo.service';\nimport { TransaccionService } from '../../core/services/transaccion.service';\nimport { ResumenFinanciero, EstadisticasDashboard } from '../../core/models/dashboard.model';\nimport { Fondo } from '../../core/models/fondo.model';\n\n@Component({\n  selector: 'app-dashboard',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatCardModule,\n    MatGridListModule,\n    MatIconModule,\n    MatButtonModule,\n    MatProgressBarModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BaseChartDirective\n  ],\n  template: `\n    <div class=\"dashboard-container\">\n      <!-- Filtros -->\n      <mat-card class=\"filtros-card mb-2\">\n        <mat-card-header>\n          <mat-card-title>Filtros</mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <form [formGroup]=\"filtrosForm\" class=\"filtros-form\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label>Fecha Inicio</mat-label>\n              <input matInput [matDatepicker]=\"fechaInicioPicker\" formControlName=\"fechaInicio\">\n              <mat-datepicker-toggle matIconSuffix [for]=\"fechaInicioPicker\"></mat-datepicker-toggle>\n              <mat-datepicker #fechaInicioPicker></mat-datepicker>\n            </mat-form-field>\n            \n            <mat-form-field appearance=\"outline\">\n              <mat-label>Fecha Fin</mat-label>\n              <input matInput [matDatepicker]=\"fechaFinPicker\" formControlName=\"fechaFin\">\n              <mat-datepicker-toggle matIconSuffix [for]=\"fechaFinPicker\"></mat-datepicker-toggle>\n              <mat-datepicker #fechaFinPicker></mat-datepicker>\n            </mat-form-field>\n            \n            <button mat-raised-button color=\"primary\" (click)=\"aplicarFiltros()\">\n              Aplicar Filtros\n            </button>\n          </form>\n        </mat-card-content>\n      </mat-card>\n\n      <!-- Tarjetas de estadísticas -->\n      <div class=\"estadisticas-grid mb-2\">\n        <mat-card class=\"stat-card ingresos\">\n          <mat-card-content>\n            <div class=\"stat-content\">\n              <div class=\"stat-icon\">\n                <mat-icon>trending_up</mat-icon>\n              </div>\n              <div class=\"stat-info\">\n                <h3>{{ resumenFinanciero?.totalIngresos | currency:'COP':'symbol':'1.0-0' }}</h3>\n                <p>Total Ingresos</p>\n              </div>\n            </div>\n          </mat-card-content>\n        </mat-card>\n\n        <mat-card class=\"stat-card gastos\">\n          <mat-card-content>\n            <div class=\"stat-content\">\n              <div class=\"stat-icon\">\n                <mat-icon>trending_down</mat-icon>\n              </div>\n              <div class=\"stat-info\">\n                <h3>{{ resumenFinanciero?.totalGastos | currency:'COP':'symbol':'1.0-0' }}</h3>\n                <p>Total Gastos</p>\n              </div>\n            </div>\n          </mat-card-content>\n        </mat-card>\n\n        <mat-card class=\"stat-card balance\" [ngClass]=\"{'positive': resumenFinanciero?.balance >= 0, 'negative': resumenFinanciero?.balance < 0}\">\n          <mat-card-content>\n            <div class=\"stat-content\">\n              <div class=\"stat-icon\">\n                <mat-icon>account_balance</mat-icon>\n              </div>\n              <div class=\"stat-info\">\n                <h3>{{ resumenFinanciero?.balance | currency:'COP':'symbol':'1.0-0' }}</h3>\n                <p>Balance</p>\n              </div>\n            </div>\n          </mat-card-content>\n        </mat-card>\n\n        <mat-card class=\"stat-card fondos\">\n          <mat-card-content>\n            <div class=\"stat-content\">\n              <div class=\"stat-icon\">\n                <mat-icon>savings</mat-icon>\n              </div>\n              <div class=\"stat-info\">\n                <h3>{{ estadisticas?.fondosActivos || 0 }}</h3>\n                <p>Fondos Activos</p>\n              </div>\n            </div>\n          </mat-card-content>\n        </mat-card>\n      </div>\n\n      <!-- Gráficos -->\n      <div class=\"graficos-grid mb-2\">\n        <mat-card class=\"grafico-card\">\n          <mat-card-header>\n            <mat-card-title>Ingresos vs Gastos</mat-card-title>\n          </mat-card-header>\n          <mat-card-content>\n            <div class=\"chart-container\">\n              <canvas \n                baseChart\n                [data]=\"ingresosGastosData\"\n                [options]=\"chartOptions\"\n                [type]=\"'doughnut'\">\n              </canvas>\n            </div>\n          </mat-card-content>\n        </mat-card>\n\n        <mat-card class=\"grafico-card\">\n          <mat-card-header>\n            <mat-card-title>Gastos por Categoría</mat-card-title>\n          </mat-card-header>\n          <mat-card-content>\n            <div class=\"chart-container\">\n              <canvas \n                baseChart\n                [data]=\"categoriesData\"\n                [options]=\"chartOptions\"\n                [type]=\"'bar'\">\n              </canvas>\n            </div>\n          </mat-card-content>\n        </mat-card>\n      </div>\n\n      <!-- Fondos y progreso -->\n      <mat-card class=\"fondos-card\">\n        <mat-card-header>\n          <mat-card-title>Progreso de Fondos</mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <div class=\"fondos-list\">\n            <div *ngFor=\"let fondo of fondos\" class=\"fondo-item\">\n              <div class=\"fondo-info\">\n                <h4>{{ fondo.nombre }}</h4>\n                <p>{{ fondo.tipo | titlecase }}</p>\n              </div>\n              <div class=\"fondo-progreso\">\n                <mat-progress-bar \n                  mode=\"determinate\" \n                  [value]=\"calcularProgreso(fondo)\">\n                </mat-progress-bar>\n                <span class=\"progreso-text\">{{ calcularProgreso(fondo) }}%</span>\n              </div>\n            </div>\n          </div>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  `,\n  styles: [`\n    .dashboard-container {\n      max-width: 1200px;\n      margin: 0 auto;\n      padding: 20px;\n    }\n\n    .filtros-card {\n      margin-bottom: 20px;\n    }\n\n    .filtros-form {\n      display: flex;\n      gap: 16px;\n      align-items: center;\n      flex-wrap: wrap;\n    }\n\n    .filtros-form mat-form-field {\n      min-width: 200px;\n    }\n\n    .estadisticas-grid {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n      gap: 16px;\n      margin-bottom: 20px;\n    }\n\n    .stat-card {\n      border-left: 4px solid;\n    }\n\n    .stat-card.ingresos {\n      border-left-color: #4caf50;\n    }\n\n    .stat-card.gastos {\n      border-left-color: #f44336;\n    }\n\n    .stat-card.balance.positive {\n      border-left-color: #4caf50;\n    }\n\n    .stat-card.balance.negative {\n      border-left-color: #f44336;\n    }\n\n    .stat-card.fondos {\n      border-left-color: #2196f3;\n    }\n\n    .stat-content {\n      display: flex;\n      align-items: center;\n      gap: 16px;\n    }\n\n    .stat-icon {\n      background: rgba(0, 0, 0, 0.1);\n      border-radius: 50%;\n      padding: 12px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n\n    .stat-icon mat-icon {\n      font-size: 24px;\n      width: 24px;\n      height: 24px;\n    }\n\n    .stat-info h3 {\n      margin: 0;\n      font-size: 1.5em;\n      font-weight: 500;\n    }\n\n    .stat-info p {\n      margin: 4px 0 0;\n      color: rgba(0, 0, 0, 0.6);\n      font-size: 0.9em;\n    }\n\n    .graficos-grid {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\n      gap: 20px;\n      margin-bottom: 20px;\n    }\n\n    .chart-container {\n      position: relative;\n      height: 300px;\n      width: 100%;\n    }\n\n    .fondos-card {\n      margin-bottom: 20px;\n    }\n\n    .fondos-list {\n      display: flex;\n      flex-direction: column;\n      gap: 16px;\n    }\n\n    .fondo-item {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 16px;\n      border: 1px solid rgba(0, 0, 0, 0.1);\n      border-radius: 8px;\n    }\n\n    .fondo-info h4 {\n      margin: 0;\n      font-size: 1.1em;\n    }\n\n    .fondo-info p {\n      margin: 4px 0 0;\n      color: rgba(0, 0, 0, 0.6);\n      font-size: 0.9em;\n    }\n\n    .fondo-progreso {\n      display: flex;\n      align-items: center;\n      gap: 12px;\n      min-width: 200px;\n    }\n\n    .fondo-progreso mat-progress-bar {\n      flex: 1;\n    }\n\n    .progreso-text {\n      font-weight: 500;\n      min-width: 40px;\n      text-align: right;\n    }\n\n    @media (max-width: 768px) {\n      .dashboard-container {\n        padding: 16px;\n      }\n\n      .filtros-form {\n        flex-direction: column;\n        align-items: stretch;\n      }\n\n      .filtros-form mat-form-field {\n        min-width: auto;\n      }\n\n      .estadisticas-grid {\n        grid-template-columns: 1fr;\n      }\n\n      .graficos-grid {\n        grid-template-columns: 1fr;\n      }\n\n      .fondo-item {\n        flex-direction: column;\n        align-items: flex-start;\n        gap: 12px;\n      }\n\n      .fondo-progreso {\n        width: 100%;\n      }\n    }\n  `]\n})\nexport class DashboardComponent implements OnInit, OnDestroy {\n  private destroy$ = new Subject<void>();\n  \n  filtrosForm: FormGroup;\n  resumenFinanciero: ResumenFinanciero | null = null;\n  estadisticas: EstadisticasDashboard | null = null;\n  fondos: Fondo[] = [];\n  cargando = false;\n\n  // Configuración de gráficos\n  chartOptions: ChartConfiguration['options'] = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top',\n      }\n    }\n  };\n\n  ingresosGastosData: ChartConfiguration['data'] = {\n    labels: ['Ingresos', 'Gastos'],\n    datasets: [\n      {\n        data: [0, 0],\n        backgroundColor: ['#4caf50', '#f44336'],\n        hoverBackgroundColor: ['#45a049', '#da190b']\n      }\n    ]\n  };\n\n  categoriesData: ChartConfiguration['data'] = {\n    labels: [],\n    datasets: [\n      {\n        label: 'Gastos por Categoría',\n        data: [],\n        backgroundColor: '#2196f3',\n        hoverBackgroundColor: '#1976d2'\n      }\n    ]\n  };\n\n  constructor(\n    private fb: FormBuilder,\n    private dashboardService: DashboardService,\n    private fondoService: FondoService,\n    private transaccionService: TransaccionService\n  ) {\n    this.filtrosForm = this.fb.group({\n      fechaInicio: [null],\n      fechaFin: [null]\n    });\n  }\n\n  ngOnInit(): void {\n    this.cargarDatos();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  cargarDatos(): void {\n    this.cargando = true;\n    \n    // Cargar resumen financiero\n    this.dashboardService.obtenerResumenFinanciero()\n      .pipe(\n        takeUntil(this.destroy$),\n        finalize(() => this.cargando = false)\n      )\n      .subscribe({\n        next: (resumen) => {\n          this.resumenFinanciero = resumen;\n          this.actualizarGraficos();\n        },\n        error: (error) => console.error('Error al cargar resumen:', error)\n      });\n\n    // Cargar estadísticas\n    this.dashboardService.obtenerEstadisticas()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (stats) => this.estadisticas = stats,\n        error: (error) => console.error('Error al cargar estadísticas:', error)\n      });\n\n    // Cargar fondos\n    this.fondoService.obtenerFondos(true)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (fondos) => this.fondos = fondos,\n        error: (error) => console.error('Error al cargar fondos:', error)\n      });\n  }\n\n  aplicarFiltros(): void {\n    const filtros = this.filtrosForm.value;\n    const fechaInicio = filtros.fechaInicio ? filtros.fechaInicio.toISOString().split('T')[0] : undefined;\n    const fechaFin = filtros.fechaFin ? filtros.fechaFin.toISOString().split('T')[0] : undefined;\n\n    this.dashboardService.obtenerResumenFinanciero(fechaInicio, fechaFin)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (resumen) => {\n          this.resumenFinanciero = resumen;\n          this.actualizarGraficos();\n        },\n        error: (error) => console.error('Error al aplicar filtros:', error)\n      });\n  }\n\n  private actualizarGraficos(): void {\n    if (!this.resumenFinanciero) return;\n\n    // Actualizar gráfico de ingresos vs gastos\n    this.ingresosGastosData.datasets[0].data = [\n      this.resumenFinanciero.totalIngresos,\n      this.resumenFinanciero.totalGastos\n    ];\n\n    // Actualizar gráfico de categorías\n    const categorias = this.resumenFinanciero.transaccionesPorCategoria\n      .filter(cat => cat.tipo === 'gasto')\n      .slice(0, 10); // Mostrar solo las 10 principales\n\n    this.categoriesData.labels = categorias.map(cat => cat.categoria);\n    this.categoriesData.datasets[0].data = categorias.map(cat => cat.monto);\n  }\n\n  calcularProgreso(fondo: Fondo): number {\n    // Aquí deberías obtener el balance actual del fondo\n    // Por ahora retornamos un valor aleatorio para demostración\n    return Math.floor(Math.random() * 100);\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}