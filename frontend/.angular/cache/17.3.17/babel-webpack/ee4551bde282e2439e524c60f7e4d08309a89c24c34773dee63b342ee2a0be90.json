{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { RouterModule } from '@angular/router';\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../core/services/auth.service\";\nimport * as i3 from \"../../core/services/notification.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/card\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/icon\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/input\";\nimport * as i11 from \"@angular/material/checkbox\";\nimport * as i12 from \"@angular/material/progress-spinner\";\nfunction RegisterComponent_mat_error_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" El nombre es requerido \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_error_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" M\\u00EDnimo 2 caracteres \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_error_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" El email es requerido \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_error_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Ingresa un email v\\u00E1lido \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_error_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Este email ya est\\u00E1 registrado \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_hint_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-hint\");\n    i0.ɵɵelement(1, \"mat-spinner\", 23);\n    i0.ɵɵtext(2, \" Verificando disponibilidad... \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"diameter\", 16);\n  }\n}\nfunction RegisterComponent_mat_error_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" La contrase\\u00F1a es requerida \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_error_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" M\\u00EDnimo 6 caracteres \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_error_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Debe contener al menos una letra y un n\\u00FAmero \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_error_57_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Confirma tu contrase\\u00F1a \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_error_58_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Las contrase\\u00F1as no coinciden \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_error_64_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Debes aceptar los t\\u00E9rminos y condiciones \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_spinner_67_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\", 23);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"diameter\", 20);\n  }\n}\nfunction RegisterComponent_span_68_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Crear Cuenta\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_span_69_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Creando cuenta...\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class RegisterComponent {\n  constructor(fb, authService, notificationService, router) {\n    this.fb = fb;\n    this.authService = authService;\n    this.notificationService = notificationService;\n    this.router = router;\n    this.hidePassword = true;\n    this.hideConfirmPassword = true;\n    this.loading = false;\n    this.verificandoEmail = false;\n    this.registerForm = this.fb.group({\n      nombre: ['', [Validators.required, Validators.minLength(2)]],\n      apellido: [''],\n      email: ['', [Validators.required, Validators.email], [this.emailValidator.bind(this)]],\n      telefono: [''],\n      password: ['', [Validators.required, Validators.minLength(6), Validators.pattern(/^(?=.*[A-Za-z])(?=.*\\d)/)]],\n      confirmPassword: ['', [Validators.required]],\n      aceptaTerminos: [false, [Validators.requiredTrue]]\n    }, {\n      validators: this.passwordMatchValidator\n    });\n  }\n  ngOnInit() {\n    // Si ya está autenticado, redirigir al dashboard\n    if (this.authService.isAuthenticated()) {\n      this.router.navigate(['/dashboard']);\n    }\n  }\n  /**\n   * Validador personalizado para verificar que las contraseñas coincidan\n   */\n  passwordMatchValidator(control) {\n    const password = control.get('password');\n    const confirmPassword = control.get('confirmPassword');\n    if (password && confirmPassword && password.value !== confirmPassword.value) {\n      confirmPassword.setErrors({\n        passwordMismatch: true\n      });\n      return {\n        passwordMismatch: true\n      };\n    } else {\n      if (confirmPassword?.hasError('passwordMismatch')) {\n        confirmPassword.setErrors(null);\n      }\n      return null;\n    }\n  }\n  /**\n   * Validador asíncrono para verificar disponibilidad del email\n   */\n  emailValidator(control) {\n    if (!control.value || !control.value.includes('@')) {\n      return null;\n    }\n    this.verificandoEmail = true;\n    return control.valueChanges.pipe(debounceTime(500), distinctUntilChanged(), switchMap(email => this.authService.verificarEmailDisponible(email))).subscribe(disponible => {\n      this.verificandoEmail = false;\n      if (!disponible) {\n        control.setErrors({\n          emailTaken: true\n        });\n      }\n    });\n  }\n  register() {\n    if (this.registerForm.invalid || this.loading) return;\n    this.loading = true;\n    const formData = this.registerForm.value;\n    const registerData = {\n      nombre: formData.nombre,\n      apellido: formData.apellido || undefined,\n      email: formData.email,\n      password: formData.password,\n      telefono: formData.telefono || undefined\n    };\n    this.authService.register(registerData).subscribe({\n      next: response => {\n        this.notificationService.success(`¡Bienvenido, ${response.usuario.nombre}! Tu cuenta ha sido creada exitosamente.`);\n        this.router.navigate(['/dashboard']);\n      },\n      error: error => {\n        console.error('Error en registro:', error);\n        let mensaje = 'Error al crear la cuenta';\n        if (error.status === 400) {\n          mensaje = 'Los datos proporcionados no son válidos';\n        } else if (error.status === 409) {\n          mensaje = 'Este email ya está registrado';\n        }\n        this.notificationService.error(mensaje);\n        this.loading = false;\n      },\n      complete: () => {\n        this.loading = false;\n      }\n    });\n  }\n  mostrarTerminos(event) {\n    event.preventDefault();\n    this.notificationService.info('Los términos y condiciones están en desarrollo');\n  }\n  static {\n    this.ɵfac = function RegisterComponent_Factory(t) {\n      return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.NotificationService), i0.ɵɵdirectiveInject(i4.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RegisterComponent,\n      selectors: [[\"app-register\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 75,\n      vars: 21,\n      consts: [[1, \"register-container\"], [1, \"register-card\"], [1, \"register-form\", 3, \"ngSubmit\", \"formGroup\"], [1, \"form-row\"], [\"appearance\", \"outline\", 1, \"half-width\"], [\"matInput\", \"\", \"formControlName\", \"nombre\", \"placeholder\", \"Tu nombre\"], [\"matSuffix\", \"\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"apellido\", \"placeholder\", \"Tu apellido\"], [\"appearance\", \"outline\", 1, \"full-width\"], [\"matInput\", \"\", \"type\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"tu@email.com\"], [\"matInput\", \"\", \"formControlName\", \"telefono\", \"placeholder\", \"+57 300 123 4567\"], [\"matInput\", \"\", \"formControlName\", \"password\", 3, \"type\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", \"type\", \"button\", 3, \"click\"], [\"matInput\", \"\", \"formControlName\", \"confirmPassword\", 3, \"type\"], [1, \"checkbox-section\"], [\"formControlName\", \"aceptaTerminos\"], [\"href\", \"#\", 3, \"click\"], [1, \"register-actions\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"full-width\", 3, \"disabled\"], [3, \"diameter\", 4, \"ngIf\"], [1, \"login-link\"], [\"routerLink\", \"/login\", \"mat-button\", \"\", \"color\", \"primary\"], [3, \"diameter\"]],\n      template: function RegisterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-card\", 1)(2, \"mat-card-header\")(3, \"mat-card-title\")(4, \"mat-icon\");\n          i0.ɵɵtext(5, \"person_add\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(6, \" Crear Cuenta \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"mat-card-subtitle\");\n          i0.ɵɵtext(8, \"\\u00DAnete a Control Financiero\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(9, \"mat-card-content\")(10, \"form\", 2);\n          i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_10_listener() {\n            return ctx.register();\n          });\n          i0.ɵɵelementStart(11, \"div\", 3)(12, \"mat-form-field\", 4)(13, \"mat-label\");\n          i0.ɵɵtext(14, \"Nombre\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(15, \"input\", 5);\n          i0.ɵɵelementStart(16, \"mat-icon\", 6);\n          i0.ɵɵtext(17, \"person\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(18, RegisterComponent_mat_error_18_Template, 2, 0, \"mat-error\", 7)(19, RegisterComponent_mat_error_19_Template, 2, 0, \"mat-error\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"mat-form-field\", 4)(21, \"mat-label\");\n          i0.ɵɵtext(22, \"Apellido (Opcional)\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(23, \"input\", 8);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(24, \"mat-form-field\", 9)(25, \"mat-label\");\n          i0.ɵɵtext(26, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(27, \"input\", 10);\n          i0.ɵɵelementStart(28, \"mat-icon\", 6);\n          i0.ɵɵtext(29, \"email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(30, RegisterComponent_mat_error_30_Template, 2, 0, \"mat-error\", 7)(31, RegisterComponent_mat_error_31_Template, 2, 0, \"mat-error\", 7)(32, RegisterComponent_mat_error_32_Template, 2, 0, \"mat-error\", 7)(33, RegisterComponent_mat_hint_33_Template, 3, 1, \"mat-hint\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(34, \"mat-form-field\", 9)(35, \"mat-label\");\n          i0.ɵɵtext(36, \"Tel\\u00E9fono (Opcional)\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(37, \"input\", 11);\n          i0.ɵɵelementStart(38, \"mat-icon\", 6);\n          i0.ɵɵtext(39, \"phone\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(40, \"mat-form-field\", 9)(41, \"mat-label\");\n          i0.ɵɵtext(42, \"Contrase\\u00F1a\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(43, \"input\", 12);\n          i0.ɵɵelementStart(44, \"button\", 13);\n          i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_44_listener() {\n            return ctx.hidePassword = !ctx.hidePassword;\n          });\n          i0.ɵɵelementStart(45, \"mat-icon\");\n          i0.ɵɵtext(46);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(47, RegisterComponent_mat_error_47_Template, 2, 0, \"mat-error\", 7)(48, RegisterComponent_mat_error_48_Template, 2, 0, \"mat-error\", 7)(49, RegisterComponent_mat_error_49_Template, 2, 0, \"mat-error\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(50, \"mat-form-field\", 9)(51, \"mat-label\");\n          i0.ɵɵtext(52, \"Confirmar Contrase\\u00F1a\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(53, \"input\", 14);\n          i0.ɵɵelementStart(54, \"button\", 13);\n          i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_54_listener() {\n            return ctx.hideConfirmPassword = !ctx.hideConfirmPassword;\n          });\n          i0.ɵɵelementStart(55, \"mat-icon\");\n          i0.ɵɵtext(56);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(57, RegisterComponent_mat_error_57_Template, 2, 0, \"mat-error\", 7)(58, RegisterComponent_mat_error_58_Template, 2, 0, \"mat-error\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(59, \"div\", 15)(60, \"mat-checkbox\", 16);\n          i0.ɵɵtext(61, \" Acepto los \");\n          i0.ɵɵelementStart(62, \"a\", 17);\n          i0.ɵɵlistener(\"click\", function RegisterComponent_Template_a_click_62_listener($event) {\n            return ctx.mostrarTerminos($event);\n          });\n          i0.ɵɵtext(63, \"t\\u00E9rminos y condiciones\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(64, RegisterComponent_mat_error_64_Template, 2, 0, \"mat-error\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(65, \"div\", 18)(66, \"button\", 19);\n          i0.ɵɵtemplate(67, RegisterComponent_mat_spinner_67_Template, 1, 1, \"mat-spinner\", 20)(68, RegisterComponent_span_68_Template, 2, 0, \"span\", 7)(69, RegisterComponent_span_69_Template, 2, 0, \"span\", 7);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(70, \"mat-card-actions\")(71, \"div\", 21);\n          i0.ɵɵtext(72, \" \\u00BFYa tienes cuenta? \");\n          i0.ɵɵelementStart(73, \"a\", 22);\n          i0.ɵɵtext(74, \"Inicia Sesi\\u00F3n\");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          let tmp_2_0;\n          let tmp_3_0;\n          let tmp_4_0;\n          let tmp_5_0;\n          let tmp_9_0;\n          let tmp_10_0;\n          let tmp_11_0;\n          let tmp_14_0;\n          let tmp_15_0;\n          let tmp_16_0;\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx.registerForm.get(\"nombre\")) == null ? null : tmp_1_0.hasError(\"required\"));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx.registerForm.get(\"nombre\")) == null ? null : tmp_2_0.hasError(\"minlength\"));\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"ngIf\", (tmp_3_0 = ctx.registerForm.get(\"email\")) == null ? null : tmp_3_0.hasError(\"required\"));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_4_0 = ctx.registerForm.get(\"email\")) == null ? null : tmp_4_0.hasError(\"email\"));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_5_0 = ctx.registerForm.get(\"email\")) == null ? null : tmp_5_0.hasError(\"emailTaken\"));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.verificandoEmail);\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"type\", ctx.hidePassword ? \"password\" : \"text\");\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate(ctx.hidePassword ? \"visibility_off\" : \"visibility\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_9_0 = ctx.registerForm.get(\"password\")) == null ? null : tmp_9_0.hasError(\"required\"));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_10_0 = ctx.registerForm.get(\"password\")) == null ? null : tmp_10_0.hasError(\"minlength\"));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_11_0 = ctx.registerForm.get(\"password\")) == null ? null : tmp_11_0.hasError(\"pattern\"));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"type\", ctx.hideConfirmPassword ? \"password\" : \"text\");\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate(ctx.hideConfirmPassword ? \"visibility_off\" : \"visibility\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_14_0 = ctx.registerForm.get(\"confirmPassword\")) == null ? null : tmp_14_0.hasError(\"required\"));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", (tmp_15_0 = ctx.registerForm.get(\"confirmPassword\")) == null ? null : tmp_15_0.hasError(\"passwordMismatch\"));\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_16_0 = ctx.registerForm.get(\"aceptaTerminos\")) == null ? null : tmp_16_0.hasError(\"required\")) && ((tmp_16_0 = ctx.registerForm.get(\"aceptaTerminos\")) == null ? null : tmp_16_0.touched));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.registerForm.invalid || ctx.loading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        }\n      },\n      dependencies: [CommonModule, i5.NgIf, FormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, ReactiveFormsModule, i1.FormGroupDirective, i1.FormControlName, MatCardModule, i6.MatCard, i6.MatCardActions, i6.MatCardContent, i6.MatCardHeader, i6.MatCardSubtitle, i6.MatCardTitle, MatButtonModule, i7.MatAnchor, i7.MatButton, i7.MatIconButton, MatIconModule, i8.MatIcon, MatFormFieldModule, i9.MatFormField, i9.MatLabel, i9.MatHint, i9.MatError, i9.MatSuffix, MatInputModule, i10.MatInput, MatCheckboxModule, i11.MatCheckbox, MatProgressSpinnerModule, i12.MatProgressSpinner, RouterModule, i4.RouterLink],\n      styles: [\".register-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  min-height: 100vh;\\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\\n  padding: 20px;\\n}\\n\\n.register-card[_ngcontent-%COMP%] {\\n  width: 100%;\\n  max-width: 500px;\\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\\n}\\n\\n.register-card[_ngcontent-%COMP%]   mat-card-title[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n}\\n\\n.register-form[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 16px;\\n  margin-top: 16px;\\n}\\n\\n.form-row[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 16px;\\n}\\n\\n.full-width[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\n.half-width[_ngcontent-%COMP%] {\\n  flex: 1;\\n}\\n\\n.checkbox-section[_ngcontent-%COMP%] {\\n  margin: 8px 0;\\n}\\n\\n.checkbox-section[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n  color: #1976d2;\\n  text-decoration: none;\\n}\\n\\n.checkbox-section[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover {\\n  text-decoration: underline;\\n}\\n\\n.register-actions[_ngcontent-%COMP%] {\\n  margin-top: 16px;\\n}\\n\\n.register-actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  height: 48px;\\n  font-size: 16px;\\n}\\n\\n.login-link[_ngcontent-%COMP%] {\\n  text-align: center;\\n  width: 100%;\\n  padding: 16px;\\n}\\n\\n@media (max-width: 600px) {\\n  .register-container[_ngcontent-%COMP%] {\\n    padding: 16px;\\n  }\\n  .form-row[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n  }\\n  .half-width[_ngcontent-%COMP%] {\\n    width: 100%;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmVhdHVyZXMvYXV0aC9yZWdpc3Rlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0k7RUFDRSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtFQUNBLGlCQUFBO0VBQ0EsNkRBQUE7RUFDQSxhQUFBO0FBQU47O0FBR0k7RUFDRSxXQUFBO0VBQ0EsZ0JBQUE7RUFDQSx5Q0FBQTtBQUFOOztBQUdJO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsUUFBQTtBQUFOOztBQUdJO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsU0FBQTtFQUNBLGdCQUFBO0FBQU47O0FBR0k7RUFDRSxhQUFBO0VBQ0EsU0FBQTtBQUFOOztBQUdJO0VBQ0UsV0FBQTtBQUFOOztBQUdJO0VBQ0UsT0FBQTtBQUFOOztBQUdJO0VBQ0UsYUFBQTtBQUFOOztBQUdJO0VBQ0UsY0FBQTtFQUNBLHFCQUFBO0FBQU47O0FBR0k7RUFDRSwwQkFBQTtBQUFOOztBQUdJO0VBQ0UsZ0JBQUE7QUFBTjs7QUFHSTtFQUNFLFlBQUE7RUFDQSxlQUFBO0FBQU47O0FBR0k7RUFDRSxrQkFBQTtFQUNBLFdBQUE7RUFDQSxhQUFBO0FBQU47O0FBR0k7RUFDRTtJQUNFLGFBQUE7RUFBTjtFQUdJO0lBQ0Usc0JBQUE7RUFETjtFQUlJO0lBQ0UsV0FBQTtFQUZOO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgICAucmVnaXN0ZXItY29udGFpbmVyIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBtaW4taGVpZ2h0OiAxMDB2aDtcbiAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMzVkZWcsICM2NjdlZWEgMCUsICM3NjRiYTIgMTAwJSk7XG4gICAgICBwYWRkaW5nOiAyMHB4O1xuICAgIH1cblxuICAgIC5yZWdpc3Rlci1jYXJkIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgbWF4LXdpZHRoOiA1MDBweDtcbiAgICAgIGJveC1zaGFkb3c6IDAgOHB4IDMycHggcmdiYSgwLCAwLCAwLCAwLjEpO1xuICAgIH1cblxuICAgIC5yZWdpc3Rlci1jYXJkIG1hdC1jYXJkLXRpdGxlIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgZ2FwOiA4cHg7XG4gICAgfVxuXG4gICAgLnJlZ2lzdGVyLWZvcm0ge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICBnYXA6IDE2cHg7XG4gICAgICBtYXJnaW4tdG9wOiAxNnB4O1xuICAgIH1cblxuICAgIC5mb3JtLXJvdyB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZ2FwOiAxNnB4O1xuICAgIH1cblxuICAgIC5mdWxsLXdpZHRoIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cblxuICAgIC5oYWxmLXdpZHRoIHtcbiAgICAgIGZsZXg6IDE7XG4gICAgfVxuXG4gICAgLmNoZWNrYm94LXNlY3Rpb24ge1xuICAgICAgbWFyZ2luOiA4cHggMDtcbiAgICB9XG5cbiAgICAuY2hlY2tib3gtc2VjdGlvbiBhIHtcbiAgICAgIGNvbG9yOiAjMTk3NmQyO1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIH1cblxuICAgIC5jaGVja2JveC1zZWN0aW9uIGE6aG92ZXIge1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgfVxuXG4gICAgLnJlZ2lzdGVyLWFjdGlvbnMge1xuICAgICAgbWFyZ2luLXRvcDogMTZweDtcbiAgICB9XG5cbiAgICAucmVnaXN0ZXItYWN0aW9ucyBidXR0b24ge1xuICAgICAgaGVpZ2h0OiA0OHB4O1xuICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgIH1cblxuICAgIC5sb2dpbi1saW5rIHtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgcGFkZGluZzogMTZweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNjAwcHgpIHtcbiAgICAgIC5yZWdpc3Rlci1jb250YWluZXIge1xuICAgICAgICBwYWRkaW5nOiAxNnB4O1xuICAgICAgfVxuXG4gICAgICAuZm9ybS1yb3cge1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgfVxuXG4gICAgICAuaGFsZi13aWR0aCB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgfVxuICAgIH1cbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","FormsModule","ReactiveFormsModule","Validators","MatCardModule","MatButtonModule","MatIconModule","MatFormFieldModule","MatInputModule","MatCheckboxModule","MatProgressSpinnerModule","RouterModule","debounceTime","distinctUntilChanged","switchMap","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","RegisterComponent","constructor","fb","authService","notificationService","router","hidePassword","hideConfirmPassword","loading","verificandoEmail","registerForm","group","nombre","required","minLength","apellido","email","emailValidator","bind","telefono","password","pattern","confirmPassword","aceptaTerminos","requiredTrue","validators","passwordMatchValidator","ngOnInit","isAuthenticated","navigate","control","get","value","setErrors","passwordMismatch","hasError","includes","valueChanges","pipe","verificarEmailDisponible","subscribe","disponible","emailTaken","register","invalid","formData","registerData","undefined","next","response","success","usuario","error","console","mensaje","status","complete","mostrarTerminos","event","preventDefault","info","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","NotificationService","i4","Router","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵlistener","RegisterComponent_Template_form_ngSubmit_10_listener","ɵɵtemplate","RegisterComponent_mat_error_18_Template","RegisterComponent_mat_error_19_Template","RegisterComponent_mat_error_30_Template","RegisterComponent_mat_error_31_Template","RegisterComponent_mat_error_32_Template","RegisterComponent_mat_hint_33_Template","RegisterComponent_Template_button_click_44_listener","RegisterComponent_mat_error_47_Template","RegisterComponent_mat_error_48_Template","RegisterComponent_mat_error_49_Template","RegisterComponent_Template_button_click_54_listener","RegisterComponent_mat_error_57_Template","RegisterComponent_mat_error_58_Template","RegisterComponent_Template_a_click_62_listener","$event","RegisterComponent_mat_error_64_Template","RegisterComponent_mat_spinner_67_Template","RegisterComponent_span_68_Template","RegisterComponent_span_69_Template","tmp_1_0","tmp_2_0","tmp_3_0","tmp_4_0","tmp_5_0","ɵɵtextInterpolate","tmp_9_0","tmp_10_0","tmp_11_0","tmp_14_0","tmp_15_0","tmp_16_0","touched","i5","NgIf","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","i6","MatCard","MatCardActions","MatCardContent","MatCardHeader","MatCardSubtitle","MatCardTitle","i7","MatAnchor","MatButton","MatIconButton","i8","MatIcon","i9","MatFormField","MatLabel","MatHint","MatError","MatSuffix","i10","MatInput","i11","MatCheckbox","i12","MatProgressSpinner","RouterLink","styles"],"sources":["C:\\Users\\alext\\ControlFinanciero\\frontend\\src\\app\\features\\auth\\register.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { Router, RouterModule } from '@angular/router';\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\n\nimport { AuthService, RegisterDto } from '../../core/services/auth.service';\nimport { NotificationService } from '../../core/services/notification.service';\n\n@Component({\n  selector: 'app-register',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatProgressSpinnerModule,\n    RouterModule\n  ],\n  template: `\n    <div class=\"register-container\">\n      <mat-card class=\"register-card\">\n        <mat-card-header>\n          <mat-card-title>\n            <mat-icon>person_add</mat-icon>\n            Crear Cuenta\n          </mat-card-title>\n          <mat-card-subtitle>Únete a Control Financiero</mat-card-subtitle>\n        </mat-card-header>\n        \n        <mat-card-content>\n          <form [formGroup]=\"registerForm\" (ngSubmit)=\"register()\" class=\"register-form\">\n            \n            <div class=\"form-row\">\n              <mat-form-field appearance=\"outline\" class=\"half-width\">\n                <mat-label>Nombre</mat-label>\n                <input matInput formControlName=\"nombre\" placeholder=\"Tu nombre\">\n                <mat-icon matSuffix>person</mat-icon>\n                <mat-error *ngIf=\"registerForm.get('nombre')?.hasError('required')\">\n                  El nombre es requerido\n                </mat-error>\n                <mat-error *ngIf=\"registerForm.get('nombre')?.hasError('minlength')\">\n                  Mínimo 2 caracteres\n                </mat-error>\n              </mat-form-field>\n\n              <mat-form-field appearance=\"outline\" class=\"half-width\">\n                <mat-label>Apellido (Opcional)</mat-label>\n                <input matInput formControlName=\"apellido\" placeholder=\"Tu apellido\">\n              </mat-form-field>\n            </div>\n\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\n              <mat-label>Email</mat-label>\n              <input matInput type=\"email\" formControlName=\"email\" placeholder=\"tu@email.com\">\n              <mat-icon matSuffix>email</mat-icon>\n              <mat-error *ngIf=\"registerForm.get('email')?.hasError('required')\">\n                El email es requerido\n              </mat-error>\n              <mat-error *ngIf=\"registerForm.get('email')?.hasError('email')\">\n                Ingresa un email válido\n              </mat-error>\n              <mat-error *ngIf=\"registerForm.get('email')?.hasError('emailTaken')\">\n                Este email ya está registrado\n              </mat-error>\n              <mat-hint *ngIf=\"verificandoEmail\">\n                <mat-spinner [diameter]=\"16\"></mat-spinner>\n                Verificando disponibilidad...\n              </mat-hint>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\n              <mat-label>Teléfono (Opcional)</mat-label>\n              <input matInput formControlName=\"telefono\" placeholder=\"+57 300 123 4567\">\n              <mat-icon matSuffix>phone</mat-icon>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\n              <mat-label>Contraseña</mat-label>\n              <input matInput [type]=\"hidePassword ? 'password' : 'text'\" formControlName=\"password\">\n              <button mat-icon-button matSuffix (click)=\"hidePassword = !hidePassword\" type=\"button\">\n                <mat-icon>{{ hidePassword ? 'visibility_off' : 'visibility' }}</mat-icon>\n              </button>\n              <mat-error *ngIf=\"registerForm.get('password')?.hasError('required')\">\n                La contraseña es requerida\n              </mat-error>\n              <mat-error *ngIf=\"registerForm.get('password')?.hasError('minlength')\">\n                Mínimo 6 caracteres\n              </mat-error>\n              <mat-error *ngIf=\"registerForm.get('password')?.hasError('pattern')\">\n                Debe contener al menos una letra y un número\n              </mat-error>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\" class=\"full-width\">\n              <mat-label>Confirmar Contraseña</mat-label>\n              <input matInput [type]=\"hideConfirmPassword ? 'password' : 'text'\" formControlName=\"confirmPassword\">\n              <button mat-icon-button matSuffix (click)=\"hideConfirmPassword = !hideConfirmPassword\" type=\"button\">\n                <mat-icon>{{ hideConfirmPassword ? 'visibility_off' : 'visibility' }}</mat-icon>\n              </button>\n              <mat-error *ngIf=\"registerForm.get('confirmPassword')?.hasError('required')\">\n                Confirma tu contraseña\n              </mat-error>\n              <mat-error *ngIf=\"registerForm.get('confirmPassword')?.hasError('passwordMismatch')\">\n                Las contraseñas no coinciden\n              </mat-error>\n            </mat-form-field>\n\n            <div class=\"checkbox-section\">\n              <mat-checkbox formControlName=\"aceptaTerminos\">\n                Acepto los \n                <a href=\"#\" (click)=\"mostrarTerminos($event)\">términos y condiciones</a>\n              </mat-checkbox>\n              <mat-error *ngIf=\"registerForm.get('aceptaTerminos')?.hasError('required') && registerForm.get('aceptaTerminos')?.touched\">\n                Debes aceptar los términos y condiciones\n              </mat-error>\n            </div>\n\n            <div class=\"register-actions\">\n              <button mat-raised-button color=\"primary\" type=\"submit\" \n                      [disabled]=\"registerForm.invalid || loading\" class=\"full-width\">\n                <mat-spinner *ngIf=\"loading\" [diameter]=\"20\"></mat-spinner>\n                <span *ngIf=\"!loading\">Crear Cuenta</span>\n                <span *ngIf=\"loading\">Creando cuenta...</span>\n              </button>\n            </div>\n          </form>\n        </mat-card-content>\n\n        <mat-card-actions>\n          <div class=\"login-link\">\n            ¿Ya tienes cuenta? \n            <a routerLink=\"/login\" mat-button color=\"primary\">Inicia Sesión</a>\n          </div>\n        </mat-card-actions>\n      </mat-card>\n    </div>\n  `,\n  styles: [`\n    .register-container {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      min-height: 100vh;\n      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n      padding: 20px;\n    }\n\n    .register-card {\n      width: 100%;\n      max-width: 500px;\n      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n    }\n\n    .register-card mat-card-title {\n      display: flex;\n      align-items: center;\n      gap: 8px;\n    }\n\n    .register-form {\n      display: flex;\n      flex-direction: column;\n      gap: 16px;\n      margin-top: 16px;\n    }\n\n    .form-row {\n      display: flex;\n      gap: 16px;\n    }\n\n    .full-width {\n      width: 100%;\n    }\n\n    .half-width {\n      flex: 1;\n    }\n\n    .checkbox-section {\n      margin: 8px 0;\n    }\n\n    .checkbox-section a {\n      color: #1976d2;\n      text-decoration: none;\n    }\n\n    .checkbox-section a:hover {\n      text-decoration: underline;\n    }\n\n    .register-actions {\n      margin-top: 16px;\n    }\n\n    .register-actions button {\n      height: 48px;\n      font-size: 16px;\n    }\n\n    .login-link {\n      text-align: center;\n      width: 100%;\n      padding: 16px;\n    }\n\n    @media (max-width: 600px) {\n      .register-container {\n        padding: 16px;\n      }\n\n      .form-row {\n        flex-direction: column;\n      }\n\n      .half-width {\n        width: 100%;\n      }\n    }\n  `]\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  hidePassword = true;\n  hideConfirmPassword = true;\n  loading = false;\n  verificandoEmail = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private notificationService: NotificationService,\n    private router: Router\n  ) {\n    this.registerForm = this.fb.group({\n      nombre: ['', [Validators.required, Validators.minLength(2)]],\n      apellido: [''],\n      email: ['', [Validators.required, Validators.email], [this.emailValidator.bind(this)]],\n      telefono: [''],\n      password: ['', [\n        Validators.required, \n        Validators.minLength(6),\n        Validators.pattern(/^(?=.*[A-Za-z])(?=.*\\d)/)\n      ]],\n      confirmPassword: ['', [Validators.required]],\n      aceptaTerminos: [false, [Validators.requiredTrue]]\n    }, {\n      validators: this.passwordMatchValidator\n    });\n  }\n\n  ngOnInit(): void {\n    // Si ya está autenticado, redirigir al dashboard\n    if (this.authService.isAuthenticated()) {\n      this.router.navigate(['/dashboard']);\n    }\n  }\n\n  /**\n   * Validador personalizado para verificar que las contraseñas coincidan\n   */\n  passwordMatchValidator(control: AbstractControl): {[key: string]: any} | null {\n    const password = control.get('password');\n    const confirmPassword = control.get('confirmPassword');\n    \n    if (password && confirmPassword && password.value !== confirmPassword.value) {\n      confirmPassword.setErrors({ passwordMismatch: true });\n      return { passwordMismatch: true };\n    } else {\n      if (confirmPassword?.hasError('passwordMismatch')) {\n        confirmPassword.setErrors(null);\n      }\n      return null;\n    }\n  }\n\n  /**\n   * Validador asíncrono para verificar disponibilidad del email\n   */\n  emailValidator(control: AbstractControl) {\n    if (!control.value || !control.value.includes('@')) {\n      return null;\n    }\n\n    this.verificandoEmail = true;\n    \n    return control.valueChanges.pipe(\n      debounceTime(500),\n      distinctUntilChanged(),\n      switchMap(email => this.authService.verificarEmailDisponible(email)),\n    ).subscribe(disponible => {\n      this.verificandoEmail = false;\n      if (!disponible) {\n        control.setErrors({ emailTaken: true });\n      }\n    });\n  }\n\n  register(): void {\n    if (this.registerForm.invalid || this.loading) return;\n\n    this.loading = true;\n    const formData = this.registerForm.value;\n    \n    const registerData: RegisterDto = {\n      nombre: formData.nombre,\n      apellido: formData.apellido || undefined,\n      email: formData.email,\n      password: formData.password,\n      telefono: formData.telefono || undefined\n    };\n\n    this.authService.register(registerData).subscribe({\n      next: (response) => {\n        this.notificationService.success(`¡Bienvenido, ${response.usuario.nombre}! Tu cuenta ha sido creada exitosamente.`);\n        this.router.navigate(['/dashboard']);\n      },\n      error: (error) => {\n        console.error('Error en registro:', error);\n        let mensaje = 'Error al crear la cuenta';\n        \n        if (error.status === 400) {\n          mensaje = 'Los datos proporcionados no son válidos';\n        } else if (error.status === 409) {\n          mensaje = 'Este email ya está registrado';\n        }\n        \n        this.notificationService.error(mensaje);\n        this.loading = false;\n      },\n      complete: () => {\n        this.loading = false;\n      }\n    });\n  }\n\n  mostrarTerminos(event: Event): void {\n    event.preventDefault();\n    this.notificationService.info('Los términos y condiciones están en desarrollo');\n  }\n}\n"],"mappings":"AACA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,WAAW,EAAEC,mBAAmB,EAA0BC,UAAU,QAAyB,gBAAgB;AACtH,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,kBAAkB,QAAQ,8BAA8B;AACjE,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,iBAAiB,QAAQ,4BAA4B;AAC9D,SAASC,wBAAwB,QAAQ,oCAAoC;AAC7E,SAAiBC,YAAY,QAAQ,iBAAiB;AACtD,SAASC,YAAY,EAAEC,oBAAoB,EAAEC,SAAS,QAAQ,gBAAgB;;;;;;;;;;;;;;;;IAwC9DC,EAAA,CAAAC,cAAA,gBAAoE;IAClED,EAAA,CAAAE,MAAA,+BACF;IAAAF,EAAA,CAAAG,YAAA,EAAY;;;;;IACZH,EAAA,CAAAC,cAAA,gBAAqE;IACnED,EAAA,CAAAE,MAAA,iCACF;IAAAF,EAAA,CAAAG,YAAA,EAAY;;;;;IAadH,EAAA,CAAAC,cAAA,gBAAmE;IACjED,EAAA,CAAAE,MAAA,8BACF;IAAAF,EAAA,CAAAG,YAAA,EAAY;;;;;IACZH,EAAA,CAAAC,cAAA,gBAAgE;IAC9DD,EAAA,CAAAE,MAAA,qCACF;IAAAF,EAAA,CAAAG,YAAA,EAAY;;;;;IACZH,EAAA,CAAAC,cAAA,gBAAqE;IACnED,EAAA,CAAAE,MAAA,2CACF;IAAAF,EAAA,CAAAG,YAAA,EAAY;;;;;IACZH,EAAA,CAAAC,cAAA,eAAmC;IACjCD,EAAA,CAAAI,SAAA,sBAA2C;IAC3CJ,EAAA,CAAAE,MAAA,sCACF;IAAAF,EAAA,CAAAG,YAAA,EAAW;;;IAFIH,EAAA,CAAAK,SAAA,EAAe;IAAfL,EAAA,CAAAM,UAAA,gBAAe;;;;;IAiB9BN,EAAA,CAAAC,cAAA,gBAAsE;IACpED,EAAA,CAAAE,MAAA,wCACF;IAAAF,EAAA,CAAAG,YAAA,EAAY;;;;;IACZH,EAAA,CAAAC,cAAA,gBAAuE;IACrED,EAAA,CAAAE,MAAA,iCACF;IAAAF,EAAA,CAAAG,YAAA,EAAY;;;;;IACZH,EAAA,CAAAC,cAAA,gBAAqE;IACnED,EAAA,CAAAE,MAAA,0DACF;IAAAF,EAAA,CAAAG,YAAA,EAAY;;;;;IASZH,EAAA,CAAAC,cAAA,gBAA6E;IAC3ED,EAAA,CAAAE,MAAA,oCACF;IAAAF,EAAA,CAAAG,YAAA,EAAY;;;;;IACZH,EAAA,CAAAC,cAAA,gBAAqF;IACnFD,EAAA,CAAAE,MAAA,0CACF;IAAAF,EAAA,CAAAG,YAAA,EAAY;;;;;IAQZH,EAAA,CAAAC,cAAA,gBAA2H;IACzHD,EAAA,CAAAE,MAAA,sDACF;IAAAF,EAAA,CAAAG,YAAA,EAAY;;;;;IAMVH,EAAA,CAAAI,SAAA,sBAA2D;;;IAA9BJ,EAAA,CAAAM,UAAA,gBAAe;;;;;IAC5CN,EAAA,CAAAC,cAAA,WAAuB;IAAAD,EAAA,CAAAE,MAAA,mBAAY;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IAC1CH,EAAA,CAAAC,cAAA,WAAsB;IAAAD,EAAA,CAAAE,MAAA,wBAAiB;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;AAoG9D,OAAM,MAAOI,iBAAiB;EAO5BC,YACUC,EAAe,EACfC,WAAwB,EACxBC,mBAAwC,EACxCC,MAAc;IAHd,KAAAH,EAAE,GAAFA,EAAE;IACF,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,mBAAmB,GAAnBA,mBAAmB;IACnB,KAAAC,MAAM,GAANA,MAAM;IAThB,KAAAC,YAAY,GAAG,IAAI;IACnB,KAAAC,mBAAmB,GAAG,IAAI;IAC1B,KAAAC,OAAO,GAAG,KAAK;IACf,KAAAC,gBAAgB,GAAG,KAAK;IAQtB,IAAI,CAACC,YAAY,GAAG,IAAI,CAACR,EAAE,CAACS,KAAK,CAAC;MAChCC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC/B,UAAU,CAACgC,QAAQ,EAAEhC,UAAU,CAACiC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5DC,QAAQ,EAAE,CAAC,EAAE,CAAC;MACdC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACnC,UAAU,CAACgC,QAAQ,EAAEhC,UAAU,CAACmC,KAAK,CAAC,EAAE,CAAC,IAAI,CAACC,cAAc,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;MACtFC,QAAQ,EAAE,CAAC,EAAE,CAAC;MACdC,QAAQ,EAAE,CAAC,EAAE,EAAE,CACbvC,UAAU,CAACgC,QAAQ,EACnBhC,UAAU,CAACiC,SAAS,CAAC,CAAC,CAAC,EACvBjC,UAAU,CAACwC,OAAO,CAAC,yBAAyB,CAAC,CAC9C,CAAC;MACFC,eAAe,EAAE,CAAC,EAAE,EAAE,CAACzC,UAAU,CAACgC,QAAQ,CAAC,CAAC;MAC5CU,cAAc,EAAE,CAAC,KAAK,EAAE,CAAC1C,UAAU,CAAC2C,YAAY,CAAC;KAClD,EAAE;MACDC,UAAU,EAAE,IAAI,CAACC;KAClB,CAAC;EACJ;EAEAC,QAAQA,CAAA;IACN;IACA,IAAI,IAAI,CAACxB,WAAW,CAACyB,eAAe,EAAE,EAAE;MACtC,IAAI,CAACvB,MAAM,CAACwB,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;;EAExC;EAEA;;;EAGAH,sBAAsBA,CAACI,OAAwB;IAC7C,MAAMV,QAAQ,GAAGU,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACxC,MAAMT,eAAe,GAAGQ,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAEtD,IAAIX,QAAQ,IAAIE,eAAe,IAAIF,QAAQ,CAACY,KAAK,KAAKV,eAAe,CAACU,KAAK,EAAE;MAC3EV,eAAe,CAACW,SAAS,CAAC;QAAEC,gBAAgB,EAAE;MAAI,CAAE,CAAC;MACrD,OAAO;QAAEA,gBAAgB,EAAE;MAAI,CAAE;KAClC,MAAM;MACL,IAAIZ,eAAe,EAAEa,QAAQ,CAAC,kBAAkB,CAAC,EAAE;QACjDb,eAAe,CAACW,SAAS,CAAC,IAAI,CAAC;;MAEjC,OAAO,IAAI;;EAEf;EAEA;;;EAGAhB,cAAcA,CAACa,OAAwB;IACrC,IAAI,CAACA,OAAO,CAACE,KAAK,IAAI,CAACF,OAAO,CAACE,KAAK,CAACI,QAAQ,CAAC,GAAG,CAAC,EAAE;MAClD,OAAO,IAAI;;IAGb,IAAI,CAAC3B,gBAAgB,GAAG,IAAI;IAE5B,OAAOqB,OAAO,CAACO,YAAY,CAACC,IAAI,CAC9BhD,YAAY,CAAC,GAAG,CAAC,EACjBC,oBAAoB,EAAE,EACtBC,SAAS,CAACwB,KAAK,IAAI,IAAI,CAACb,WAAW,CAACoC,wBAAwB,CAACvB,KAAK,CAAC,CAAC,CACrE,CAACwB,SAAS,CAACC,UAAU,IAAG;MACvB,IAAI,CAAChC,gBAAgB,GAAG,KAAK;MAC7B,IAAI,CAACgC,UAAU,EAAE;QACfX,OAAO,CAACG,SAAS,CAAC;UAAES,UAAU,EAAE;QAAI,CAAE,CAAC;;IAE3C,CAAC,CAAC;EACJ;EAEAC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACjC,YAAY,CAACkC,OAAO,IAAI,IAAI,CAACpC,OAAO,EAAE;IAE/C,IAAI,CAACA,OAAO,GAAG,IAAI;IACnB,MAAMqC,QAAQ,GAAG,IAAI,CAACnC,YAAY,CAACsB,KAAK;IAExC,MAAMc,YAAY,GAAgB;MAChClC,MAAM,EAAEiC,QAAQ,CAACjC,MAAM;MACvBG,QAAQ,EAAE8B,QAAQ,CAAC9B,QAAQ,IAAIgC,SAAS;MACxC/B,KAAK,EAAE6B,QAAQ,CAAC7B,KAAK;MACrBI,QAAQ,EAAEyB,QAAQ,CAACzB,QAAQ;MAC3BD,QAAQ,EAAE0B,QAAQ,CAAC1B,QAAQ,IAAI4B;KAChC;IAED,IAAI,CAAC5C,WAAW,CAACwC,QAAQ,CAACG,YAAY,CAAC,CAACN,SAAS,CAAC;MAChDQ,IAAI,EAAGC,QAAQ,IAAI;QACjB,IAAI,CAAC7C,mBAAmB,CAAC8C,OAAO,CAAC,gBAAgBD,QAAQ,CAACE,OAAO,CAACvC,MAAM,0CAA0C,CAAC;QACnH,IAAI,CAACP,MAAM,CAACwB,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;MACtC,CAAC;MACDuB,KAAK,EAAGA,KAAK,IAAI;QACfC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;QAC1C,IAAIE,OAAO,GAAG,0BAA0B;QAExC,IAAIF,KAAK,CAACG,MAAM,KAAK,GAAG,EAAE;UACxBD,OAAO,GAAG,yCAAyC;SACpD,MAAM,IAAIF,KAAK,CAACG,MAAM,KAAK,GAAG,EAAE;UAC/BD,OAAO,GAAG,+BAA+B;;QAG3C,IAAI,CAAClD,mBAAmB,CAACgD,KAAK,CAACE,OAAO,CAAC;QACvC,IAAI,CAAC9C,OAAO,GAAG,KAAK;MACtB,CAAC;MACDgD,QAAQ,EAAEA,CAAA,KAAK;QACb,IAAI,CAAChD,OAAO,GAAG,KAAK;MACtB;KACD,CAAC;EACJ;EAEAiD,eAAeA,CAACC,KAAY;IAC1BA,KAAK,CAACC,cAAc,EAAE;IACtB,IAAI,CAACvD,mBAAmB,CAACwD,IAAI,CAAC,gDAAgD,CAAC;EACjF;;;uBAtHW5D,iBAAiB,EAAAP,EAAA,CAAAoE,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAtE,EAAA,CAAAoE,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAAxE,EAAA,CAAAoE,iBAAA,CAAAK,EAAA,CAAAC,mBAAA,GAAA1E,EAAA,CAAAoE,iBAAA,CAAAO,EAAA,CAAAC,MAAA;IAAA;EAAA;;;YAAjBrE,iBAAiB;MAAAsE,SAAA;MAAAC,UAAA;MAAAC,QAAA,GAAA/E,EAAA,CAAAgF,mBAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAvMlBtF,EAJR,CAAAC,cAAA,aAAgC,kBACE,sBACb,qBACC,eACJ;UAAAD,EAAA,CAAAE,MAAA,iBAAU;UAAAF,EAAA,CAAAG,YAAA,EAAW;UAC/BH,EAAA,CAAAE,MAAA,qBACF;UAAAF,EAAA,CAAAG,YAAA,EAAiB;UACjBH,EAAA,CAAAC,cAAA,wBAAmB;UAAAD,EAAA,CAAAE,MAAA,sCAA0B;UAC/CF,EAD+C,CAAAG,YAAA,EAAoB,EACjD;UAGhBH,EADF,CAAAC,cAAA,uBAAkB,eAC+D;UAA9CD,EAAA,CAAAwF,UAAA,sBAAAC,qDAAA;YAAA,OAAYF,GAAA,CAAArC,QAAA,EAAU;UAAA,EAAC;UAIlDlD,EAFJ,CAAAC,cAAA,cAAsB,yBACoC,iBAC3C;UAAAD,EAAA,CAAAE,MAAA,cAAM;UAAAF,EAAA,CAAAG,YAAA,EAAY;UAC7BH,EAAA,CAAAI,SAAA,gBAAiE;UACjEJ,EAAA,CAAAC,cAAA,mBAAoB;UAAAD,EAAA,CAAAE,MAAA,cAAM;UAAAF,EAAA,CAAAG,YAAA,EAAW;UAIrCH,EAHA,CAAA0F,UAAA,KAAAC,uCAAA,uBAAoE,KAAAC,uCAAA,uBAGC;UAGvE5F,EAAA,CAAAG,YAAA,EAAiB;UAGfH,EADF,CAAAC,cAAA,yBAAwD,iBAC3C;UAAAD,EAAA,CAAAE,MAAA,2BAAmB;UAAAF,EAAA,CAAAG,YAAA,EAAY;UAC1CH,EAAA,CAAAI,SAAA,gBAAqE;UAEzEJ,EADE,CAAAG,YAAA,EAAiB,EACb;UAGJH,EADF,CAAAC,cAAA,yBAAwD,iBAC3C;UAAAD,EAAA,CAAAE,MAAA,aAAK;UAAAF,EAAA,CAAAG,YAAA,EAAY;UAC5BH,EAAA,CAAAI,SAAA,iBAAgF;UAChFJ,EAAA,CAAAC,cAAA,mBAAoB;UAAAD,EAAA,CAAAE,MAAA,aAAK;UAAAF,EAAA,CAAAG,YAAA,EAAW;UAUpCH,EATA,CAAA0F,UAAA,KAAAG,uCAAA,uBAAmE,KAAAC,uCAAA,uBAGH,KAAAC,uCAAA,uBAGK,KAAAC,sCAAA,sBAGlC;UAIrChG,EAAA,CAAAG,YAAA,EAAiB;UAGfH,EADF,CAAAC,cAAA,yBAAwD,iBAC3C;UAAAD,EAAA,CAAAE,MAAA,gCAAmB;UAAAF,EAAA,CAAAG,YAAA,EAAY;UAC1CH,EAAA,CAAAI,SAAA,iBAA0E;UAC1EJ,EAAA,CAAAC,cAAA,mBAAoB;UAAAD,EAAA,CAAAE,MAAA,aAAK;UAC3BF,EAD2B,CAAAG,YAAA,EAAW,EACrB;UAGfH,EADF,CAAAC,cAAA,yBAAwD,iBAC3C;UAAAD,EAAA,CAAAE,MAAA,uBAAU;UAAAF,EAAA,CAAAG,YAAA,EAAY;UACjCH,EAAA,CAAAI,SAAA,iBAAuF;UACvFJ,EAAA,CAAAC,cAAA,kBAAuF;UAArDD,EAAA,CAAAwF,UAAA,mBAAAS,oDAAA;YAAA,OAAAV,GAAA,CAAA1E,YAAA,IAAA0E,GAAA,CAAA1E,YAAA;UAAA,EAAsC;UACtEb,EAAA,CAAAC,cAAA,gBAAU;UAAAD,EAAA,CAAAE,MAAA,IAAoD;UAChEF,EADgE,CAAAG,YAAA,EAAW,EAClE;UAOTH,EANA,CAAA0F,UAAA,KAAAQ,uCAAA,uBAAsE,KAAAC,uCAAA,uBAGC,KAAAC,uCAAA,uBAGF;UAGvEpG,EAAA,CAAAG,YAAA,EAAiB;UAGfH,EADF,CAAAC,cAAA,yBAAwD,iBAC3C;UAAAD,EAAA,CAAAE,MAAA,iCAAoB;UAAAF,EAAA,CAAAG,YAAA,EAAY;UAC3CH,EAAA,CAAAI,SAAA,iBAAqG;UACrGJ,EAAA,CAAAC,cAAA,kBAAqG;UAAnED,EAAA,CAAAwF,UAAA,mBAAAa,oDAAA;YAAA,OAAAd,GAAA,CAAAzE,mBAAA,IAAAyE,GAAA,CAAAzE,mBAAA;UAAA,EAAoD;UACpFd,EAAA,CAAAC,cAAA,gBAAU;UAAAD,EAAA,CAAAE,MAAA,IAA2D;UACvEF,EADuE,CAAAG,YAAA,EAAW,EACzE;UAITH,EAHA,CAAA0F,UAAA,KAAAY,uCAAA,uBAA6E,KAAAC,uCAAA,uBAGQ;UAGvFvG,EAAA,CAAAG,YAAA,EAAiB;UAGfH,EADF,CAAAC,cAAA,eAA8B,wBACmB;UAC7CD,EAAA,CAAAE,MAAA,oBACA;UAAAF,EAAA,CAAAC,cAAA,aAA8C;UAAlCD,EAAA,CAAAwF,UAAA,mBAAAgB,+CAAAC,MAAA;YAAA,OAASlB,GAAA,CAAAvB,eAAA,CAAAyC,MAAA,CAAuB;UAAA,EAAC;UAACzG,EAAA,CAAAE,MAAA,mCAAsB;UACtEF,EADsE,CAAAG,YAAA,EAAI,EAC3D;UACfH,EAAA,CAAA0F,UAAA,KAAAgB,uCAAA,uBAA2H;UAG7H1G,EAAA,CAAAG,YAAA,EAAM;UAGJH,EADF,CAAAC,cAAA,eAA8B,kBAE4C;UAGtED,EAFA,CAAA0F,UAAA,KAAAiB,yCAAA,0BAA6C,KAAAC,kCAAA,kBACtB,KAAAC,kCAAA,kBACD;UAI9B7G,EAHM,CAAAG,YAAA,EAAS,EACL,EACD,EACU;UAGjBH,EADF,CAAAC,cAAA,wBAAkB,eACQ;UACtBD,EAAA,CAAAE,MAAA,iCACA;UAAAF,EAAA,CAAAC,cAAA,aAAkD;UAAAD,EAAA,CAAAE,MAAA,0BAAa;UAIvEF,EAJuE,CAAAG,YAAA,EAAI,EAC/D,EACW,EACV,EACP;;;;;;;;;;;;;;UAzGMH,EAAA,CAAAK,SAAA,IAA0B;UAA1BL,EAAA,CAAAM,UAAA,cAAAiF,GAAA,CAAAtE,YAAA,CAA0B;UAOdjB,EAAA,CAAAK,SAAA,GAAsD;UAAtDL,EAAA,CAAAM,UAAA,UAAAwG,OAAA,GAAAvB,GAAA,CAAAtE,YAAA,CAAAqB,GAAA,6BAAAwE,OAAA,CAAApE,QAAA,aAAsD;UAGtD1C,EAAA,CAAAK,SAAA,EAAuD;UAAvDL,EAAA,CAAAM,UAAA,UAAAyG,OAAA,GAAAxB,GAAA,CAAAtE,YAAA,CAAAqB,GAAA,6BAAAyE,OAAA,CAAArE,QAAA,cAAuD;UAezD1C,EAAA,CAAAK,SAAA,IAAqD;UAArDL,EAAA,CAAAM,UAAA,UAAA0G,OAAA,GAAAzB,GAAA,CAAAtE,YAAA,CAAAqB,GAAA,4BAAA0E,OAAA,CAAAtE,QAAA,aAAqD;UAGrD1C,EAAA,CAAAK,SAAA,EAAkD;UAAlDL,EAAA,CAAAM,UAAA,UAAA2G,OAAA,GAAA1B,GAAA,CAAAtE,YAAA,CAAAqB,GAAA,4BAAA2E,OAAA,CAAAvE,QAAA,UAAkD;UAGlD1C,EAAA,CAAAK,SAAA,EAAuD;UAAvDL,EAAA,CAAAM,UAAA,UAAA4G,OAAA,GAAA3B,GAAA,CAAAtE,YAAA,CAAAqB,GAAA,4BAAA4E,OAAA,CAAAxE,QAAA,eAAuD;UAGxD1C,EAAA,CAAAK,SAAA,EAAsB;UAAtBL,EAAA,CAAAM,UAAA,SAAAiF,GAAA,CAAAvE,gBAAA,CAAsB;UAcjBhB,EAAA,CAAAK,SAAA,IAA2C;UAA3CL,EAAA,CAAAM,UAAA,SAAAiF,GAAA,CAAA1E,YAAA,uBAA2C;UAE/Cb,EAAA,CAAAK,SAAA,GAAoD;UAApDL,EAAA,CAAAmH,iBAAA,CAAA5B,GAAA,CAAA1E,YAAA,mCAAoD;UAEpDb,EAAA,CAAAK,SAAA,EAAwD;UAAxDL,EAAA,CAAAM,UAAA,UAAA8G,OAAA,GAAA7B,GAAA,CAAAtE,YAAA,CAAAqB,GAAA,+BAAA8E,OAAA,CAAA1E,QAAA,aAAwD;UAGxD1C,EAAA,CAAAK,SAAA,EAAyD;UAAzDL,EAAA,CAAAM,UAAA,UAAA+G,QAAA,GAAA9B,GAAA,CAAAtE,YAAA,CAAAqB,GAAA,+BAAA+E,QAAA,CAAA3E,QAAA,cAAyD;UAGzD1C,EAAA,CAAAK,SAAA,EAAuD;UAAvDL,EAAA,CAAAM,UAAA,UAAAgH,QAAA,GAAA/B,GAAA,CAAAtE,YAAA,CAAAqB,GAAA,+BAAAgF,QAAA,CAAA5E,QAAA,YAAuD;UAOnD1C,EAAA,CAAAK,SAAA,GAAkD;UAAlDL,EAAA,CAAAM,UAAA,SAAAiF,GAAA,CAAAzE,mBAAA,uBAAkD;UAEtDd,EAAA,CAAAK,SAAA,GAA2D;UAA3DL,EAAA,CAAAmH,iBAAA,CAAA5B,GAAA,CAAAzE,mBAAA,mCAA2D;UAE3Dd,EAAA,CAAAK,SAAA,EAA+D;UAA/DL,EAAA,CAAAM,UAAA,UAAAiH,QAAA,GAAAhC,GAAA,CAAAtE,YAAA,CAAAqB,GAAA,sCAAAiF,QAAA,CAAA7E,QAAA,aAA+D;UAG/D1C,EAAA,CAAAK,SAAA,EAAuE;UAAvEL,EAAA,CAAAM,UAAA,UAAAkH,QAAA,GAAAjC,GAAA,CAAAtE,YAAA,CAAAqB,GAAA,sCAAAkF,QAAA,CAAA9E,QAAA,qBAAuE;UAUvE1C,EAAA,CAAAK,SAAA,GAA6G;UAA7GL,EAAA,CAAAM,UAAA,WAAAmH,QAAA,GAAAlC,GAAA,CAAAtE,YAAA,CAAAqB,GAAA,qCAAAmF,QAAA,CAAA/E,QAAA,mBAAA+E,QAAA,GAAAlC,GAAA,CAAAtE,YAAA,CAAAqB,GAAA,qCAAAmF,QAAA,CAAAC,OAAA,EAA6G;UAOjH1H,EAAA,CAAAK,SAAA,GAA4C;UAA5CL,EAAA,CAAAM,UAAA,aAAAiF,GAAA,CAAAtE,YAAA,CAAAkC,OAAA,IAAAoC,GAAA,CAAAxE,OAAA,CAA4C;UACpCf,EAAA,CAAAK,SAAA,EAAa;UAAbL,EAAA,CAAAM,UAAA,SAAAiF,GAAA,CAAAxE,OAAA,CAAa;UACpBf,EAAA,CAAAK,SAAA,EAAc;UAAdL,EAAA,CAAAM,UAAA,UAAAiF,GAAA,CAAAxE,OAAA,CAAc;UACdf,EAAA,CAAAK,SAAA,EAAa;UAAbL,EAAA,CAAAM,UAAA,SAAAiF,GAAA,CAAAxE,OAAA,CAAa;;;qBApHhC9B,YAAY,EAAA0I,EAAA,CAAAC,IAAA,EACZ1I,WAAW,EAAAmF,EAAA,CAAAwD,aAAA,EAAAxD,EAAA,CAAAyD,oBAAA,EAAAzD,EAAA,CAAA0D,eAAA,EAAA1D,EAAA,CAAA2D,oBAAA,EACX7I,mBAAmB,EAAAkF,EAAA,CAAA4D,kBAAA,EAAA5D,EAAA,CAAA6D,eAAA,EACnB7I,aAAa,EAAA8I,EAAA,CAAAC,OAAA,EAAAD,EAAA,CAAAE,cAAA,EAAAF,EAAA,CAAAG,cAAA,EAAAH,EAAA,CAAAI,aAAA,EAAAJ,EAAA,CAAAK,eAAA,EAAAL,EAAA,CAAAM,YAAA,EACbnJ,eAAe,EAAAoJ,EAAA,CAAAC,SAAA,EAAAD,EAAA,CAAAE,SAAA,EAAAF,EAAA,CAAAG,aAAA,EACftJ,aAAa,EAAAuJ,EAAA,CAAAC,OAAA,EACbvJ,kBAAkB,EAAAwJ,EAAA,CAAAC,YAAA,EAAAD,EAAA,CAAAE,QAAA,EAAAF,EAAA,CAAAG,OAAA,EAAAH,EAAA,CAAAI,QAAA,EAAAJ,EAAA,CAAAK,SAAA,EAClB5J,cAAc,EAAA6J,GAAA,CAAAC,QAAA,EACd7J,iBAAiB,EAAA8J,GAAA,CAAAC,WAAA,EACjB9J,wBAAwB,EAAA+J,GAAA,CAAAC,kBAAA,EACxB/J,YAAY,EAAA+E,EAAA,CAAAiF,UAAA;MAAAC,MAAA;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}