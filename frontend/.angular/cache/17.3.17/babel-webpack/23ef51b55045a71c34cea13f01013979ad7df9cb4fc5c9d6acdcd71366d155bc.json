{"ast":null,"code":"import { environment } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DashboardService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiUrl}`;\n  }\n  obtenerResumenFinanciero(fechaInicio, fechaFin) {\n    let url = `${this.apiUrl}/dashboard/resumen`;\n    const params = [];\n    if (fechaInicio) params.push(`fechaInicio=${fechaInicio}`);\n    if (fechaFin) params.push(`fechaFin=${fechaFin}`);\n    if (params.length > 0) {\n      url += `?${params.join('&')}`;\n    }\n    return this.http.get(url);\n  }\n  obtenerEstadisticas() {\n    return this.http.get(`${this.apiUrl}/dashboard/estadisticas`);\n  }\n  obtenerDatosGrafico(tipo, periodo = 'mes') {\n    return this.http.get(`${this.apiUrl}/dashboard/grafico/${tipo}?periodo=${periodo}`);\n  }\n  static {\n    this.ɵfac = function DashboardService_Factory(t) {\n      return new (t || DashboardService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: DashboardService,\n      factory: DashboardService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","DashboardService","constructor","http","apiUrl","obtenerResumenFinanciero","fechaInicio","fechaFin","url","params","push","length","join","get","obtenerEstadisticas","obtenerDatosGrafico","tipo","periodo","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\alext\\ControlFinanciero\\frontend\\src\\app\\core\\services\\dashboard.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport { ResumenFinanciero, EstadisticasDashboard } from '../models/dashboard.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardService {\n  private apiUrl = `${environment.apiUrl}`;\n\n  constructor(private http: HttpClient) {}\n\n  obtenerResumenFinanciero(\n    fechaInicio?: string,\n    fechaFin?: string\n  ): Observable<ResumenFinanciero> {\n    let url = `${this.apiUrl}/dashboard/resumen`;\n    const params: string[] = [];\n    \n    if (fechaInicio) params.push(`fechaInicio=${fechaInicio}`);\n    if (fechaFin) params.push(`fechaFin=${fechaFin}`);\n    \n    if (params.length > 0) {\n      url += `?${params.join('&')}`;\n    }\n    \n    return this.http.get<ResumenFinanciero>(url);\n  }\n\n  obtenerEstadisticas(): Observable<EstadisticasDashboard> {\n    return this.http.get<EstadisticasDashboard>(`${this.apiUrl}/dashboard/estadisticas`);\n  }\n\n  obtenerDatosGrafico(\n    tipo: 'ingresos-gastos' | 'categorias' | 'fondos' | 'tendencia',\n    periodo: 'semana' | 'mes' | 'trimestre' | 'año' = 'mes'\n  ): Observable<any> {\n    return this.http.get(`${this.apiUrl}/dashboard/grafico/${tipo}?periodo=${periodo}`);\n  }\n}\n"],"mappings":"AAGA,SAASA,WAAW,QAAQ,mCAAmC;;;AAM/D,OAAM,MAAOC,gBAAgB;EAG3BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,GAAGJ,WAAW,CAACI,MAAM,EAAE;EAED;EAEvCC,wBAAwBA,CACtBC,WAAoB,EACpBC,QAAiB;IAEjB,IAAIC,GAAG,GAAG,GAAG,IAAI,CAACJ,MAAM,oBAAoB;IAC5C,MAAMK,MAAM,GAAa,EAAE;IAE3B,IAAIH,WAAW,EAAEG,MAAM,CAACC,IAAI,CAAC,eAAeJ,WAAW,EAAE,CAAC;IAC1D,IAAIC,QAAQ,EAAEE,MAAM,CAACC,IAAI,CAAC,YAAYH,QAAQ,EAAE,CAAC;IAEjD,IAAIE,MAAM,CAACE,MAAM,GAAG,CAAC,EAAE;MACrBH,GAAG,IAAI,IAAIC,MAAM,CAACG,IAAI,CAAC,GAAG,CAAC,EAAE;;IAG/B,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAoBL,GAAG,CAAC;EAC9C;EAEAM,mBAAmBA,CAAA;IACjB,OAAO,IAAI,CAACX,IAAI,CAACU,GAAG,CAAwB,GAAG,IAAI,CAACT,MAAM,yBAAyB,CAAC;EACtF;EAEAW,mBAAmBA,CACjBC,IAA+D,EAC/DC,OAAA,GAAkD,KAAK;IAEvD,OAAO,IAAI,CAACd,IAAI,CAACU,GAAG,CAAC,GAAG,IAAI,CAACT,MAAM,sBAAsBY,IAAI,YAAYC,OAAO,EAAE,CAAC;EACrF;;;uBA/BWhB,gBAAgB,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAhBpB,gBAAgB;MAAAqB,OAAA,EAAhBrB,gBAAgB,CAAAsB,IAAA;MAAAC,UAAA,EAFf;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}