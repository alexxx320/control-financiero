{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nlet FondosComponent = class FondosComponent {\n  constructor(fb, fondoService, dialog, snackBar) {\n    this.fb = fb;\n    this.fondoService = fondoService;\n    this.dialog = dialog;\n    this.snackBar = snackBar;\n    this.destroy$ = new Subject();\n    this.fondos = [];\n    this.tiposFondo = [];\n    this.mostrarFormulario = false;\n    this.fondoEditando = null;\n    this.guardando = false;\n    this.fondoForm = this.fb.group({\n      nombre: ['', [Validators.required, Validators.minLength(3)]],\n      descripcion: [''],\n      tipo: ['', Validators.required],\n      metaAhorro: [0, [Validators.required, Validators.min(1)]]\n    });\n  }\n  ngOnInit() {\n    this.cargarTiposFondo();\n    this.cargarFondos();\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  cargarTiposFondo() {\n    this.tiposFondo = this.fondoService.obtenerTiposFondo();\n  }\n  cargarFondos() {\n    this.fondoService.obtenerFondos().pipe(takeUntil(this.destroy$)).subscribe({\n      next: fondos => this.fondos = fondos,\n      error: error => {\n        console.error('Error al cargar fondos:', error);\n        this.mostrarMensaje('Error al cargar fondos');\n      }\n    });\n  }\n  abrirDialogoFondo() {\n    this.mostrarFormulario = true;\n    this.fondoEditando = null;\n    this.fondoForm.reset();\n  }\n  editarFondo(fondo) {\n    this.mostrarFormulario = true;\n    this.fondoEditando = fondo;\n    this.fondoForm.patchValue({\n      nombre: fondo.nombre,\n      descripcion: fondo.descripcion || '',\n      tipo: fondo.tipo,\n      metaAhorro: fondo.metaAhorro\n    });\n  }\n  guardarFondo() {\n    if (this.fondoForm.invalid) return;\n    this.guardando = true;\n    const fondoData = this.fondoForm.value;\n    const operacion = this.fondoEditando ? this.fondoService.actualizarFondo(this.fondoEditando._id, fondoData) : this.fondoService.crearFondo(fondoData);\n    operacion.pipe(takeUntil(this.destroy$)).subscribe({\n      next: fondo => {\n        const mensaje = this.fondoEditando ? 'Fondo actualizado correctamente' : 'Fondo creado correctamente';\n        this.mostrarMensaje(mensaje);\n        this.cancelarEdicion();\n        this.cargarFondos();\n      },\n      error: error => {\n        console.error('Error al guardar fondo:', error);\n        this.mostrarMensaje('Error al guardar el fondo');\n      },\n      complete: () => {\n        this.guardando = false;\n      }\n    });\n  }\n  cancelarEdicion() {\n    this.mostrarFormulario = false;\n    this.fondoEditando = null;\n    this.fondoForm.reset();\n  }\n  eliminarFondo(fondo) {\n    if (confirm(`¿Estás seguro de que deseas eliminar el fondo \"${fondo.nombre}\"?`)) {\n      this.fondoService.eliminarFondo(fondo._id).pipe(takeUntil(this.destroy$)).subscribe({\n        next: () => {\n          this.mostrarMensaje('Fondo eliminado correctamente');\n          this.cargarFondos();\n        },\n        error: error => {\n          console.error('Error al eliminar fondo:', error);\n          this.mostrarMensaje('Error al eliminar el fondo');\n        }\n      });\n    }\n  }\n  toggleEstadoFondo(fondo) {\n    const nuevoEstado = !fondo.activo;\n    this.fondoService.actualizarFondo(fondo._id, {\n      activo: nuevoEstado\n    }).pipe(takeUntil(this.destroy$)).subscribe({\n      next: () => {\n        const mensaje = nuevoEstado ? 'Fondo activado' : 'Fondo desactivado';\n        this.mostrarMensaje(mensaje);\n        this.cargarFondos();\n      },\n      error: error => {\n        console.error('Error al cambiar estado del fondo:', error);\n        this.mostrarMensaje('Error al cambiar el estado del fondo');\n      }\n    });\n  }\n  verDetalleFondo(fondo) {\n    this.mostrarMensaje(`Ver detalle del fondo \"${fondo.nombre}\" - Por implementar`);\n  }\n  obtenerIconoTipo(tipo) {\n    const iconos = {\n      'ahorro': 'savings',\n      'inversion': 'trending_up',\n      'emergencia': 'warning',\n      'gastos': 'shopping_cart',\n      'personal': 'person'\n    };\n    return iconos[tipo] || 'account_balance_wallet';\n  }\n  obtenerProgreso(fondo) {\n    const balanceActual = this.obtenerBalance(fondo);\n    return Math.min(Math.round(balanceActual / fondo.metaAhorro * 100), 100);\n  }\n  obtenerBalance(fondo) {\n    return Math.floor(Math.random() * fondo.metaAhorro * 1.2);\n  }\n  mostrarMensaje(mensaje) {\n    this.snackBar.open(mensaje, 'Cerrar', {\n      duration: 3000\n    });\n  }\n};\nFondosComponent = __decorate([Component({\n  selector: 'app-fondos',\n  standalone: true,\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, MatCardModule, MatButtonModule, MatIconModule, MatFormFieldModule, MatInputModule, MatSelectModule, MatDialogModule, MatSnackBarModule, MatProgressBarModule, MatChipsModule, MatGridListModule],\n  template: `\n    <div class=\"fondos-container\">\n      <!-- Header y acciones -->\n      <div class=\"header-section mb-2\">\n        <div class=\"header-content\">\n          <h2>Gestión de Fondos</h2>\n          <button mat-raised-button color=\"primary\" (click)=\"abrirDialogoFondo()\">\n            <mat-icon>add</mat-icon>\n            Nuevo Fondo\n          </button>\n        </div>\n      </div>\n\n      <!-- Formulario de nuevo fondo -->\n      <mat-card class=\"form-card mb-2\" *ngIf=\"mostrarFormulario\">\n        <mat-card-header>\n          <mat-card-title>{{ fondoEditando ? 'Editar Fondo' : 'Nuevo Fondo' }}</mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <form [formGroup]=\"fondoForm\" (ngSubmit)=\"guardarFondo()\" class=\"fondo-form\">\n            <div class=\"form-row\">\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\n                <mat-label>Nombre del Fondo</mat-label>\n                <input matInput formControlName=\"nombre\" placeholder=\"Ej: Fondo de Emergencia\">\n                <mat-error *ngIf=\"fondoForm.get('nombre')?.hasError('required')\">\n                  El nombre es requerido\n                </mat-error>\n              </mat-form-field>\n            </div>\n\n            <div class=\"form-row\">\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\n                <mat-label>Descripción</mat-label>\n                <textarea matInput formControlName=\"descripcion\" rows=\"3\" \n                          placeholder=\"Descripción opcional del fondo\"></textarea>\n              </mat-form-field>\n            </div>\n\n            <div class=\"form-row\">\n              <mat-form-field appearance=\"outline\" class=\"half-width\">\n                <mat-label>Tipo de Fondo</mat-label>\n                <mat-select formControlName=\"tipo\">\n                  <mat-option *ngFor=\"let tipo of tiposFondo\" [value]=\"tipo\">\n                    {{ tipo | titlecase }}\n                  </mat-option>\n                </mat-select>\n                <mat-error *ngIf=\"fondoForm.get('tipo')?.hasError('required')\">\n                  El tipo es requerido\n                </mat-error>\n              </mat-form-field>\n\n              <mat-form-field appearance=\"outline\" class=\"half-width\">\n                <mat-label>Meta de Ahorro</mat-label>\n                <input matInput type=\"number\" formControlName=\"metaAhorro\" \n                       placeholder=\"0\" min=\"0\">\n                <span matTextPrefix>$</span>\n                <mat-error *ngIf=\"fondoForm.get('metaAhorro')?.hasError('required')\">\n                  La meta es requerida\n                </mat-error>\n                <mat-error *ngIf=\"fondoForm.get('metaAhorro')?.hasError('min')\">\n                  La meta debe ser mayor a 0\n                </mat-error>\n              </mat-form-field>\n            </div>\n\n            <div class=\"form-actions\">\n              <button mat-button type=\"button\" (click)=\"cancelarEdicion()\">\n                Cancelar\n              </button>\n              <button mat-raised-button color=\"primary\" type=\"submit\" \n                      [disabled]=\"fondoForm.invalid || guardando\">\n                {{ fondoEditando ? 'Actualizar' : 'Crear' }} Fondo\n              </button>\n            </div>\n          </form>\n        </mat-card-content>\n      </mat-card>\n\n      <!-- Lista de fondos -->\n      <div class=\"fondos-grid\">\n        <mat-card *ngFor=\"let fondo of fondos\" class=\"fondo-card\" \n                  [ngClass]=\"{'fondo-inactivo': !fondo.activo, ['tipo-' + fondo.tipo]: true}\">\n          <mat-card-header>\n            <div mat-card-avatar class=\"fondo-avatar\" [ngClass]=\"'tipo-' + fondo.tipo\">\n              <mat-icon>{{ obtenerIconoTipo(fondo.tipo) }}</mat-icon>\n            </div>\n            <mat-card-title>{{ fondo.nombre }}</mat-card-title>\n            <mat-card-subtitle>\n              <mat-chip-option [ngClass]=\"'chip-' + fondo.tipo\">\n                {{ fondo.tipo | titlecase }}\n              </mat-chip-option>\n            </mat-card-subtitle>\n            <div class=\"card-actions\">\n              <button mat-icon-button (click)=\"editarFondo(fondo)\">\n                <mat-icon>edit</mat-icon>\n              </button>\n              <button mat-icon-button color=\"warn\" (click)=\"eliminarFondo(fondo)\">\n                <mat-icon>delete</mat-icon>\n              </button>\n            </div>\n          </mat-card-header>\n          \n          <mat-card-content>\n            <div class=\"fondo-info\">\n              <p *ngIf=\"fondo.descripcion\" class=\"descripcion\">{{ fondo.descripcion }}</p>\n              \n              <div class=\"meta-info\">\n                <div class=\"meta-label\">Meta de Ahorro:</div>\n                <div class=\"meta-valor\">{{ fondo.metaAhorro | currency:'COP':'symbol':'1.0-0' }}</div>\n              </div>\n\n              <div class=\"progreso-section\">\n                <div class=\"progreso-header\">\n                  <span>Progreso:</span>\n                  <span class=\"progreso-porcentaje\">{{ obtenerProgreso(fondo) }}%</span>\n                </div>\n                <mat-progress-bar \n                  mode=\"determinate\" \n                  [value]=\"obtenerProgreso(fondo)\"\n                  [ngClass]=\"{'progreso-completo': obtenerProgreso(fondo) >= 100}\">\n                </mat-progress-bar>\n                <div class=\"balance-info\">\n                  <span>Balance actual: {{ obtenerBalance(fondo) | currency:'COP':'symbol':'1.0-0' }}</span>\n                </div>\n              </div>\n\n              <div class=\"fecha-creacion\">\n                Creado: {{ fondo.fechaCreacion | date:'dd/MM/yyyy' }}\n              </div>\n            </div>\n          </mat-card-content>\n\n          <mat-card-actions>\n            <button mat-button color=\"primary\" (click)=\"verDetalleFondo(fondo)\">\n              <mat-icon>visibility</mat-icon>\n              Ver Detalle\n            </button>\n            <button mat-button [color]=\"fondo.activo ? 'warn' : 'primary'\" \n                    (click)=\"toggleEstadoFondo(fondo)\">\n              <mat-icon>{{ fondo.activo ? 'pause' : 'play_arrow' }}</mat-icon>\n              {{ fondo.activo ? 'Desactivar' : 'Activar' }}\n            </button>\n          </mat-card-actions>\n        </mat-card>\n\n        <!-- Card para agregar nuevo fondo -->\n        <mat-card class=\"nuevo-fondo-card\" (click)=\"abrirDialogoFondo()\" \n                  *ngIf=\"!mostrarFormulario\">\n          <mat-card-content>\n            <div class=\"nuevo-fondo-content\">\n              <mat-icon class=\"add-icon\">add_circle_outline</mat-icon>\n              <h3>Crear Nuevo Fondo</h3>\n              <p>Agrega un nuevo fondo para organizar tus finanzas</p>\n            </div>\n          </mat-card-content>\n        </mat-card>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .fondos-container {\n      max-width: 1200px;\n      margin: 0 auto;\n      padding: 20px;\n    }\n\n    .header-section {\n      margin-bottom: 20px;\n    }\n\n    .header-content {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n\n    .header-content h2 {\n      margin: 0;\n      font-weight: 500;\n    }\n\n    .form-card {\n      margin-bottom: 20px;\n    }\n\n    .fondo-form {\n      max-width: 600px;\n    }\n\n    .form-row {\n      display: flex;\n      gap: 16px;\n      margin-bottom: 16px;\n    }\n\n    .full-width {\n      width: 100%;\n    }\n\n    .half-width {\n      flex: 1;\n    }\n\n    .form-actions {\n      display: flex;\n      gap: 12px;\n      justify-content: flex-end;\n      margin-top: 20px;\n    }\n\n    .fondos-grid {\n      display: grid;\n      grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));\n      gap: 20px;\n    }\n\n    .fondo-card {\n      transition: all 0.3s ease;\n      border-left: 4px solid;\n    }\n\n    .fondo-card:hover {\n      transform: translateY(-2px);\n      box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n    }\n\n    .fondo-card.fondo-inactivo {\n      opacity: 0.7;\n      border-left-color: #ccc;\n    }\n\n    .fondo-card mat-card-header {\n      position: relative;\n    }\n\n    .card-actions {\n      position: absolute;\n      top: 8px;\n      right: 8px;\n      display: flex;\n      gap: 4px;\n    }\n\n    .fondo-avatar {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      border-radius: 50%;\n      color: white;\n    }\n\n    .fondo-avatar.tipo-ahorro { background-color: #4caf50; }\n    .fondo-avatar.tipo-inversion { background-color: #2196f3; }\n    .fondo-avatar.tipo-emergencia { background-color: #ff5722; }\n    .fondo-avatar.tipo-gastos { background-color: #ff9800; }\n    .fondo-avatar.tipo-personal { background-color: #9c27b0; }\n\n    .fondo-card.tipo-ahorro { border-left-color: #4caf50; }\n    .fondo-card.tipo-inversion { border-left-color: #2196f3; }\n    .fondo-card.tipo-emergencia { border-left-color: #ff5722; }\n    .fondo-card.tipo-gastos { border-left-color: #ff9800; }\n    .fondo-card.tipo-personal { border-left-color: #9c27b0; }\n\n    .chip-ahorro { background-color: #4caf50; color: white; }\n    .chip-inversion { background-color: #2196f3; color: white; }\n    .chip-emergencia { background-color: #ff5722; color: white; }\n    .chip-gastos { background-color: #ff9800; color: white; }\n    .chip-personal { background-color: #9c27b0; color: white; }\n\n    .fondo-info {\n      margin-top: 16px;\n    }\n\n    .descripcion {\n      color: rgba(0,0,0,0.6);\n      margin-bottom: 16px;\n      font-style: italic;\n    }\n\n    .meta-info {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 16px;\n      padding: 8px;\n      background-color: rgba(0,0,0,0.05);\n      border-radius: 4px;\n    }\n\n    .meta-label {\n      font-weight: 500;\n    }\n\n    .meta-valor {\n      font-weight: 600;\n      color: #2196f3;\n    }\n\n    .progreso-section {\n      margin: 16px 0;\n    }\n\n    .progreso-header {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 8px;\n      font-size: 0.9em;\n    }\n\n    .progreso-porcentaje {\n      font-weight: 600;\n    }\n\n    .progreso-completo {\n      color: #4caf50;\n    }\n\n    .balance-info {\n      text-align: center;\n      margin-top: 8px;\n      font-size: 0.9em;\n      color: rgba(0,0,0,0.7);\n    }\n\n    .fecha-creacion {\n      font-size: 0.8em;\n      color: rgba(0,0,0,0.5);\n      text-align: right;\n      margin-top: 16px;\n    }\n\n    .nuevo-fondo-card {\n      border: 2px dashed #ccc;\n      cursor: pointer;\n      transition: all 0.3s ease;\n      min-height: 200px;\n      display: flex;\n      align-items: center;\n    }\n\n    .nuevo-fondo-card:hover {\n      border-color: #2196f3;\n      background-color: rgba(33, 150, 243, 0.05);\n    }\n\n    .nuevo-fondo-content {\n      text-align: center;\n      width: 100%;\n      color: rgba(0,0,0,0.6);\n    }\n\n    .add-icon {\n      font-size: 48px;\n      width: 48px;\n      height: 48px;\n      margin-bottom: 16px;\n      color: #ccc;\n    }\n\n    .nuevo-fondo-card:hover .add-icon {\n      color: #2196f3;\n    }\n\n    @media (max-width: 768px) {\n      .fondos-container {\n        padding: 16px;\n      }\n\n      .header-content {\n        flex-direction: column;\n        gap: 16px;\n        align-items: flex-start;\n      }\n\n      .fondos-grid {\n        grid-template-columns: 1fr;\n      }\n\n      .form-row {\n        flex-direction: column;\n      }\n\n      .half-width {\n        width: 100%;\n      }\n\n      .card-actions {\n        position: relative;\n        top: auto;\n        right: auto;\n        margin-top: 8px;\n      }\n    }\n  `]\n})], FondosComponent);\nexport { FondosComponent };","map":{"version":3,"names":["Component","CommonModule","FormsModule","ReactiveFormsModule","Validators","MatCardModule","MatButtonModule","MatIconModule","MatFormFieldModule","MatInputModule","MatSelectModule","MatDialogModule","MatSnackBarModule","MatProgressBarModule","MatChipsModule","MatGridListModule","Subject","takeUntil","FondosComponent","constructor","fb","fondoService","dialog","snackBar","destroy$","fondos","tiposFondo","mostrarFormulario","fondoEditando","guardando","fondoForm","group","nombre","required","minLength","descripcion","tipo","metaAhorro","min","ngOnInit","cargarTiposFondo","cargarFondos","ngOnDestroy","next","complete","obtenerTiposFondo","obtenerFondos","pipe","subscribe","error","console","mostrarMensaje","abrirDialogoFondo","reset","editarFondo","fondo","patchValue","guardarFondo","invalid","fondoData","value","operacion","actualizarFondo","_id","crearFondo","mensaje","cancelarEdicion","eliminarFondo","confirm","toggleEstadoFondo","nuevoEstado","activo","verDetalleFondo","obtenerIconoTipo","iconos","obtenerProgreso","balanceActual","obtenerBalance","Math","round","floor","random","open","duration","__decorate","selector","standalone","imports","template","styles"],"sources":["C:\\Users\\alext\\ControlFinanciero\\frontend\\src\\app\\features\\fondos\\fondos.component.ts"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDialogModule, MatDialog } from '@angular/material/dialog';\nimport { MatSnackBarModule, MatSnackBar } from '@angular/material/snack-bar';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { FondoService } from '../../core/services/fondo.service';\nimport { Fondo, TipoFondo } from '../../core/models/fondo.model';\n\n@Component({\n  selector: 'app-fondos',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatProgressBarModule,\n    MatChipsModule,\n    MatGridListModule\n  ],\n  template: `\n    <div class=\"fondos-container\">\n      <!-- Header y acciones -->\n      <div class=\"header-section mb-2\">\n        <div class=\"header-content\">\n          <h2>Gestión de Fondos</h2>\n          <button mat-raised-button color=\"primary\" (click)=\"abrirDialogoFondo()\">\n            <mat-icon>add</mat-icon>\n            Nuevo Fondo\n          </button>\n        </div>\n      </div>\n\n      <!-- Formulario de nuevo fondo -->\n      <mat-card class=\"form-card mb-2\" *ngIf=\"mostrarFormulario\">\n        <mat-card-header>\n          <mat-card-title>{{ fondoEditando ? 'Editar Fondo' : 'Nuevo Fondo' }}</mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <form [formGroup]=\"fondoForm\" (ngSubmit)=\"guardarFondo()\" class=\"fondo-form\">\n            <div class=\"form-row\">\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\n                <mat-label>Nombre del Fondo</mat-label>\n                <input matInput formControlName=\"nombre\" placeholder=\"Ej: Fondo de Emergencia\">\n                <mat-error *ngIf=\"fondoForm.get('nombre')?.hasError('required')\">\n                  El nombre es requerido\n                </mat-error>\n              </mat-form-field>\n            </div>\n\n            <div class=\"form-row\">\n              <mat-form-field appearance=\"outline\" class=\"full-width\">\n                <mat-label>Descripción</mat-label>\n                <textarea matInput formControlName=\"descripcion\" rows=\"3\" \n                          placeholder=\"Descripción opcional del fondo\"></textarea>\n              </mat-form-field>\n            </div>\n\n            <div class=\"form-row\">\n              <mat-form-field appearance=\"outline\" class=\"half-width\">\n                <mat-label>Tipo de Fondo</mat-label>\n                <mat-select formControlName=\"tipo\">\n                  <mat-option *ngFor=\"let tipo of tiposFondo\" [value]=\"tipo\">\n                    {{ tipo | titlecase }}\n                  </mat-option>\n                </mat-select>\n                <mat-error *ngIf=\"fondoForm.get('tipo')?.hasError('required')\">\n                  El tipo es requerido\n                </mat-error>\n              </mat-form-field>\n\n              <mat-form-field appearance=\"outline\" class=\"half-width\">\n                <mat-label>Meta de Ahorro</mat-label>\n                <input matInput type=\"number\" formControlName=\"metaAhorro\" \n                       placeholder=\"0\" min=\"0\">\n                <span matTextPrefix>$</span>\n                <mat-error *ngIf=\"fondoForm.get('metaAhorro')?.hasError('required')\">\n                  La meta es requerida\n                </mat-error>\n                <mat-error *ngIf=\"fondoForm.get('metaAhorro')?.hasError('min')\">\n                  La meta debe ser mayor a 0\n                </mat-error>\n              </mat-form-field>\n            </div>\n\n            <div class=\"form-actions\">\n              <button mat-button type=\"button\" (click)=\"cancelarEdicion()\">\n                Cancelar\n              </button>\n              <button mat-raised-button color=\"primary\" type=\"submit\" \n                      [disabled]=\"fondoForm.invalid || guardando\">\n                {{ fondoEditando ? 'Actualizar' : 'Crear' }} Fondo\n              </button>\n            </div>\n          </form>\n        </mat-card-content>\n      </mat-card>\n\n      <!-- Lista de fondos -->\n      <div class=\"fondos-grid\">\n        <mat-card *ngFor=\"let fondo of fondos\" class=\"fondo-card\" \n                  [ngClass]=\"{'fondo-inactivo': !fondo.activo, ['tipo-' + fondo.tipo]: true}\">\n          <mat-card-header>\n            <div mat-card-avatar class=\"fondo-avatar\" [ngClass]=\"'tipo-' + fondo.tipo\">\n              <mat-icon>{{ obtenerIconoTipo(fondo.tipo) }}</mat-icon>\n            </div>\n            <mat-card-title>{{ fondo.nombre }}</mat-card-title>\n            <mat-card-subtitle>\n              <mat-chip-option [ngClass]=\"'chip-' + fondo.tipo\">\n                {{ fondo.tipo | titlecase }}\n              </mat-chip-option>\n            </mat-card-subtitle>\n            <div class=\"card-actions\">\n              <button mat-icon-button (click)=\"editarFondo(fondo)\">\n                <mat-icon>edit</mat-icon>\n              </button>\n              <button mat-icon-button color=\"warn\" (click)=\"eliminarFondo(fondo)\">\n                <mat-icon>delete</mat-icon>\n              </button>\n            </div>\n          </mat-card-header>\n          \n          <mat-card-content>\n            <div class=\"fondo-info\">\n              <p *ngIf=\"fondo.descripcion\" class=\"descripcion\">{{ fondo.descripcion }}</p>\n              \n              <div class=\"meta-info\">\n                <div class=\"meta-label\">Meta de Ahorro:</div>\n                <div class=\"meta-valor\">{{ fondo.metaAhorro | currency:'COP':'symbol':'1.0-0' }}</div>\n              </div>\n\n              <div class=\"progreso-section\">\n                <div class=\"progreso-header\">\n                  <span>Progreso:</span>\n                  <span class=\"progreso-porcentaje\">{{ obtenerProgreso(fondo) }}%</span>\n                </div>\n                <mat-progress-bar \n                  mode=\"determinate\" \n                  [value]=\"obtenerProgreso(fondo)\"\n                  [ngClass]=\"{'progreso-completo': obtenerProgreso(fondo) >= 100}\">\n                </mat-progress-bar>\n                <div class=\"balance-info\">\n                  <span>Balance actual: {{ obtenerBalance(fondo) | currency:'COP':'symbol':'1.0-0' }}</span>\n                </div>\n              </div>\n\n              <div class=\"fecha-creacion\">\n                Creado: {{ fondo.fechaCreacion | date:'dd/MM/yyyy' }}\n              </div>\n            </div>\n          </mat-card-content>\n\n          <mat-card-actions>\n            <button mat-button color=\"primary\" (click)=\"verDetalleFondo(fondo)\">\n              <mat-icon>visibility</mat-icon>\n              Ver Detalle\n            </button>\n            <button mat-button [color]=\"fondo.activo ? 'warn' : 'primary'\" \n                    (click)=\"toggleEstadoFondo(fondo)\">\n              <mat-icon>{{ fondo.activo ? 'pause' : 'play_arrow' }}</mat-icon>\n              {{ fondo.activo ? 'Desactivar' : 'Activar' }}\n            </button>\n          </mat-card-actions>\n        </mat-card>\n\n        <!-- Card para agregar nuevo fondo -->\n        <mat-card class=\"nuevo-fondo-card\" (click)=\"abrirDialogoFondo()\" \n                  *ngIf=\"!mostrarFormulario\">\n          <mat-card-content>\n            <div class=\"nuevo-fondo-content\">\n              <mat-icon class=\"add-icon\">add_circle_outline</mat-icon>\n              <h3>Crear Nuevo Fondo</h3>\n              <p>Agrega un nuevo fondo para organizar tus finanzas</p>\n            </div>\n          </mat-card-content>\n        </mat-card>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .fondos-container {\n      max-width: 1200px;\n      margin: 0 auto;\n      padding: 20px;\n    }\n\n    .header-section {\n      margin-bottom: 20px;\n    }\n\n    .header-content {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n\n    .header-content h2 {\n      margin: 0;\n      font-weight: 500;\n    }\n\n    .form-card {\n      margin-bottom: 20px;\n    }\n\n    .fondo-form {\n      max-width: 600px;\n    }\n\n    .form-row {\n      display: flex;\n      gap: 16px;\n      margin-bottom: 16px;\n    }\n\n    .full-width {\n      width: 100%;\n    }\n\n    .half-width {\n      flex: 1;\n    }\n\n    .form-actions {\n      display: flex;\n      gap: 12px;\n      justify-content: flex-end;\n      margin-top: 20px;\n    }\n\n    .fondos-grid {\n      display: grid;\n      grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));\n      gap: 20px;\n    }\n\n    .fondo-card {\n      transition: all 0.3s ease;\n      border-left: 4px solid;\n    }\n\n    .fondo-card:hover {\n      transform: translateY(-2px);\n      box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n    }\n\n    .fondo-card.fondo-inactivo {\n      opacity: 0.7;\n      border-left-color: #ccc;\n    }\n\n    .fondo-card mat-card-header {\n      position: relative;\n    }\n\n    .card-actions {\n      position: absolute;\n      top: 8px;\n      right: 8px;\n      display: flex;\n      gap: 4px;\n    }\n\n    .fondo-avatar {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      border-radius: 50%;\n      color: white;\n    }\n\n    .fondo-avatar.tipo-ahorro { background-color: #4caf50; }\n    .fondo-avatar.tipo-inversion { background-color: #2196f3; }\n    .fondo-avatar.tipo-emergencia { background-color: #ff5722; }\n    .fondo-avatar.tipo-gastos { background-color: #ff9800; }\n    .fondo-avatar.tipo-personal { background-color: #9c27b0; }\n\n    .fondo-card.tipo-ahorro { border-left-color: #4caf50; }\n    .fondo-card.tipo-inversion { border-left-color: #2196f3; }\n    .fondo-card.tipo-emergencia { border-left-color: #ff5722; }\n    .fondo-card.tipo-gastos { border-left-color: #ff9800; }\n    .fondo-card.tipo-personal { border-left-color: #9c27b0; }\n\n    .chip-ahorro { background-color: #4caf50; color: white; }\n    .chip-inversion { background-color: #2196f3; color: white; }\n    .chip-emergencia { background-color: #ff5722; color: white; }\n    .chip-gastos { background-color: #ff9800; color: white; }\n    .chip-personal { background-color: #9c27b0; color: white; }\n\n    .fondo-info {\n      margin-top: 16px;\n    }\n\n    .descripcion {\n      color: rgba(0,0,0,0.6);\n      margin-bottom: 16px;\n      font-style: italic;\n    }\n\n    .meta-info {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 16px;\n      padding: 8px;\n      background-color: rgba(0,0,0,0.05);\n      border-radius: 4px;\n    }\n\n    .meta-label {\n      font-weight: 500;\n    }\n\n    .meta-valor {\n      font-weight: 600;\n      color: #2196f3;\n    }\n\n    .progreso-section {\n      margin: 16px 0;\n    }\n\n    .progreso-header {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 8px;\n      font-size: 0.9em;\n    }\n\n    .progreso-porcentaje {\n      font-weight: 600;\n    }\n\n    .progreso-completo {\n      color: #4caf50;\n    }\n\n    .balance-info {\n      text-align: center;\n      margin-top: 8px;\n      font-size: 0.9em;\n      color: rgba(0,0,0,0.7);\n    }\n\n    .fecha-creacion {\n      font-size: 0.8em;\n      color: rgba(0,0,0,0.5);\n      text-align: right;\n      margin-top: 16px;\n    }\n\n    .nuevo-fondo-card {\n      border: 2px dashed #ccc;\n      cursor: pointer;\n      transition: all 0.3s ease;\n      min-height: 200px;\n      display: flex;\n      align-items: center;\n    }\n\n    .nuevo-fondo-card:hover {\n      border-color: #2196f3;\n      background-color: rgba(33, 150, 243, 0.05);\n    }\n\n    .nuevo-fondo-content {\n      text-align: center;\n      width: 100%;\n      color: rgba(0,0,0,0.6);\n    }\n\n    .add-icon {\n      font-size: 48px;\n      width: 48px;\n      height: 48px;\n      margin-bottom: 16px;\n      color: #ccc;\n    }\n\n    .nuevo-fondo-card:hover .add-icon {\n      color: #2196f3;\n    }\n\n    @media (max-width: 768px) {\n      .fondos-container {\n        padding: 16px;\n      }\n\n      .header-content {\n        flex-direction: column;\n        gap: 16px;\n        align-items: flex-start;\n      }\n\n      .fondos-grid {\n        grid-template-columns: 1fr;\n      }\n\n      .form-row {\n        flex-direction: column;\n      }\n\n      .half-width {\n        width: 100%;\n      }\n\n      .card-actions {\n        position: relative;\n        top: auto;\n        right: auto;\n        margin-top: 8px;\n      }\n    }\n  `]\n})\nexport class FondosComponent implements OnInit, OnDestroy {\n  private destroy$ = new Subject<void>();\n  \n  fondos: Fondo[] = [];\n  tiposFondo: TipoFondo[] = [];\n  fondoForm: FormGroup;\n  mostrarFormulario = false;\n  fondoEditando: Fondo | null = null;\n  guardando = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private fondoService: FondoService,\n    private dialog: MatDialog,\n    private snackBar: MatSnackBar\n  ) {\n    this.fondoForm = this.fb.group({\n      nombre: ['', [Validators.required, Validators.minLength(3)]],\n      descripcion: [''],\n      tipo: ['', Validators.required],\n      metaAhorro: [0, [Validators.required, Validators.min(1)]]\n    });\n  }\n\n  ngOnInit(): void {\n    this.cargarTiposFondo();\n    this.cargarFondos();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  cargarTiposFondo(): void {\n    this.tiposFondo = this.fondoService.obtenerTiposFondo();\n  }\n\n  cargarFondos(): void {\n    this.fondoService.obtenerFondos()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (fondos) => this.fondos = fondos,\n        error: (error) => {\n          console.error('Error al cargar fondos:', error);\n          this.mostrarMensaje('Error al cargar fondos');\n        }\n      });\n  }\n\n  abrirDialogoFondo(): void {\n    this.mostrarFormulario = true;\n    this.fondoEditando = null;\n    this.fondoForm.reset();\n  }\n\n  editarFondo(fondo: Fondo): void {\n    this.mostrarFormulario = true;\n    this.fondoEditando = fondo;\n    this.fondoForm.patchValue({\n      nombre: fondo.nombre,\n      descripcion: fondo.descripcion || '',\n      tipo: fondo.tipo,\n      metaAhorro: fondo.metaAhorro\n    });\n  }\n\n  guardarFondo(): void {\n    if (this.fondoForm.invalid) return;\n\n    this.guardando = true;\n    const fondoData = this.fondoForm.value;\n\n    const operacion = this.fondoEditando \n      ? this.fondoService.actualizarFondo(this.fondoEditando._id!, fondoData)\n      : this.fondoService.crearFondo(fondoData);\n\n    operacion\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (fondo) => {\n          const mensaje = this.fondoEditando \n            ? 'Fondo actualizado correctamente'\n            : 'Fondo creado correctamente';\n          this.mostrarMensaje(mensaje);\n          this.cancelarEdicion();\n          this.cargarFondos();\n        },\n        error: (error) => {\n          console.error('Error al guardar fondo:', error);\n          this.mostrarMensaje('Error al guardar el fondo');\n        },\n        complete: () => {\n          this.guardando = false;\n        }\n      });\n  }\n\n  cancelarEdicion(): void {\n    this.mostrarFormulario = false;\n    this.fondoEditando = null;\n    this.fondoForm.reset();\n  }\n\n  eliminarFondo(fondo: Fondo): void {\n    if (confirm(`¿Estás seguro de que deseas eliminar el fondo \"${fondo.nombre}\"?`)) {\n      this.fondoService.eliminarFondo(fondo._id!)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: () => {\n            this.mostrarMensaje('Fondo eliminado correctamente');\n            this.cargarFondos();\n          },\n          error: (error) => {\n            console.error('Error al eliminar fondo:', error);\n            this.mostrarMensaje('Error al eliminar el fondo');\n          }\n        });\n    }\n  }\n\n  toggleEstadoFondo(fondo: Fondo): void {\n    const nuevoEstado = !fondo.activo;\n    this.fondoService.actualizarFondo(fondo._id!, { activo: nuevoEstado })\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: () => {\n          const mensaje = nuevoEstado ? 'Fondo activado' : 'Fondo desactivado';\n          this.mostrarMensaje(mensaje);\n          this.cargarFondos();\n        },\n        error: (error) => {\n          console.error('Error al cambiar estado del fondo:', error);\n          this.mostrarMensaje('Error al cambiar el estado del fondo');\n        }\n      });\n  }\n\n  verDetalleFondo(fondo: Fondo): void {\n    this.mostrarMensaje(`Ver detalle del fondo \"${fondo.nombre}\" - Por implementar`);\n  }\n\n  obtenerIconoTipo(tipo: TipoFondo): string {\n    const iconos = {\n      'ahorro': 'savings',\n      'inversion': 'trending_up',\n      'emergencia': 'warning',\n      'gastos': 'shopping_cart',\n      'personal': 'person'\n    };\n    return iconos[tipo] || 'account_balance_wallet';\n  }\n\n  obtenerProgreso(fondo: Fondo): number {\n    const balanceActual = this.obtenerBalance(fondo);\n    return Math.min(Math.round((balanceActual / fondo.metaAhorro) * 100), 100);\n  }\n\n  obtenerBalance(fondo: Fondo): number {\n    return Math.floor(Math.random() * fondo.metaAhorro * 1.2);\n  }\n\n  private mostrarMensaje(mensaje: string): void {\n    this.snackBar.open(mensaje, 'Cerrar', {\n      duration: 3000\n    });\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}